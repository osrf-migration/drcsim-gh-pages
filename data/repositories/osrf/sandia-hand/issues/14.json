{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sandia-hand.json"}, "html": {"href": "#!/osrf/sandia-hand"}, "avatar": {"href": "data/bytebucket.org/ravatar/{ffa260f4-e54c-4b4b-ab64-4d0fc5a90091}ts=default"}}, "type": "repository", "name": "sandia-hand", "full_name": "osrf/sandia-hand", "uuid": "{ffa260f4-e54c-4b4b-ab64-4d0fc5a90091}"}, "links": {"attachments": {"href": "data/repositories/osrf/sandia-hand/issues/14/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sandia-hand/issues/14.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sandia-hand/issues/14/watch"}, "comments": {"href": "data/repositories/osrf/sandia-hand/issues/14/comments_page=1.json"}, "html": {"href": "#!/osrf/sandia-hand/issues/14/setting-cmake_prefix_path-variable-with"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sandia-hand/issues/14/vote"}}, "reporter": {"display_name": "John Hoare", "uuid": "{f2fb0aad-9933-4b16-a710-d9fe1486032f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf2fb0aad-9933-4b16-a710-d9fe1486032f%7D"}, "html": {"href": "https://bitbucket.org/%7Bf2fb0aad-9933-4b16-a710-d9fe1486032f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8caca58d5b3df735099a63ec2937a66ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJH-1.png"}}, "nickname": "jhoare", "type": "user", "account_id": "557058:8ecbba08-9b4d-49d1-902f-70e85314d9ea"}, "title": "Setting CMAKE_PREFIX_PATH variable with multiple directories breaks build", "component": null, "votes": 0, "watches": 3, "content": {"raw": "[Line 7 in CMakeLists.txt](#!/osrf/sandia-hand/src/e582518fbfe292f0a2bd23f9550c271c58cb0137/CMakeLists.txt?at=default#cl-7) should not be there. It breaks the build if you have multiple directories in your CMAKE_PREFIX_PATH environment variable. \r\n~~~\r\nset (CMAKE_PREFIX_PATH \"/usr;$ENV{CMAKE_PREFIX_PATH}\")\r\n~~~\r\n\r\nRight now, say I have my CMAKE_PREFIX_PATH environment variable set to `/home/jhoare/foo:/opt/ros/groovy`  then the set line will take that whole variable as one path, and it does not get properly parsed out if that line was not there. This will prevent the build from succeeding, as it doesn't recognize `/opt/ros/groovy` as one of the paths to search. \r\n\r\nIf your goal is to support building to /usr, you should have the build script set that environment variable before calling CMake. ", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"#!/osrf/sandia-hand/src/e582518fbfe292f0a2bd23f9550c271c58cb0137/CMakeLists.txt?at=default#cl-7\" rel=\"nofollow\">Line 7 in CMakeLists.txt</a> should not be there. It breaks the build if you have multiple directories in your CMAKE_PREFIX_PATH environment variable. </p>\n<div class=\"codehilite\"><pre><span></span>set (CMAKE_PREFIX_PATH &quot;/usr;$ENV{CMAKE_PREFIX_PATH}&quot;)\n</pre></div>\n\n\n<p>Right now, say I have my CMAKE_PREFIX_PATH environment variable set to <code>/home/jhoare/foo:/opt/ros/groovy</code>  then the set line will take that whole variable as one path, and it does not get properly parsed out if that line was not there. This will prevent the build from succeeding, as it doesn't recognize <code>/opt/ros/groovy</code> as one of the paths to search. </p>\n<p>If your goal is to support building to /usr, you should have the build script set that environment variable before calling CMake. </p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2013-10-11T16:53:54.003015+00:00", "milestone": null, "updated_on": "2013-10-14T11:10:36.439956+00:00", "type": "issue", "id": 14}