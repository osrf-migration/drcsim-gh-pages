{"rendered": {"message": {"raw": "add uint8[] k_effort to AtlasState and AtlasCommand, such that\n\n#   kp_position     * ( position - measured_position )       +\n#   ki_position     * 1/s * ( position - measured_position ) +\n#   kd_position     * s * ( position - measured_position ) +\n#   kp_velocity     * ( velocity - measured_velocity )     +\n#   k_effort        * effort +\n#   (1 - k_effort)  * effort_bdi\n\nso user can blend bdi controller effort and AtlasCommand effort.\nDefault for k_effort is 0.\n\nReset f_d when controller mode is switched back to none.", "markup": "markdown", "html": "<p>add uint8[] k_effort to AtlasState and AtlasCommand, such that</p>\n<h1 id=\"markdown-header-kp_position-position-measured_position\">kp_position     * ( position - measured_position )       +</h1>\n<h1 id=\"markdown-header-ki_position-1s-position-measured_position\">ki_position     * 1/s * ( position - measured_position ) +</h1>\n<h1 id=\"markdown-header-kd_position-s-position-measured_position\">kd_position     * s * ( position - measured_position ) +</h1>\n<h1 id=\"markdown-header-kp_velocity-velocity-measured_velocity\">kp_velocity     * ( velocity - measured_velocity )     +</h1>\n<h1 id=\"markdown-header-k_effort-effort\">k_effort        * effort +</h1>\n<h1 id=\"markdown-header-1-k_effort-effort_bdi\">(1 - k_effort)  * effort_bdi</h1>\n<p>so user can blend bdi controller effort and AtlasCommand effort.<br />\nDefault for k_effort is 0.</p>\n<p>Reset f_d when controller mode is switched back to none.</p>", "type": "rendered"}}, "hash": "8fde315caeeb7cd474e10fc97c3f4213b1c5030f", "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "links": {"self": {"href": "data/repositories/osrf/drcsim/commit/8fde315caeeb7cd474e10fc97c3f4213b1c5030f.json"}, "comments": {"href": "data/repositories/osrf/drcsim/commit/8fde315caeeb7cd474e10fc97c3f4213b1c5030f/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/patch/8fde315caeeb7cd474e10fc97c3f4213b1c5030f"}, "html": {"href": "#!/osrf/drcsim/commits/8fde315caeeb7cd474e10fc97c3f4213b1c5030f"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/diff/8fde315caeeb7cd474e10fc97c3f4213b1c5030f"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/commit/8fde315caeeb7cd474e10fc97c3f4213b1c5030f/approve"}, "statuses": {"href": "data/repositories/osrf/drcsim/commit/8fde315caeeb7cd474e10fc97c3f4213b1c5030f/statuses_page=1.json"}}, "author": {"raw": "John Hsu <hsu@osrfoundation.org>", "type": "author", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}}, "summary": {"raw": "add uint8[] k_effort to AtlasState and AtlasCommand, such that\n\n#   kp_position     * ( position - measured_position )       +\n#   ki_position     * 1/s * ( position - measured_position ) +\n#   kd_position     * s * ( position - measured_position ) +\n#   kp_velocity     * ( velocity - measured_velocity )     +\n#   k_effort        * effort +\n#   (1 - k_effort)  * effort_bdi\n\nso user can blend bdi controller effort and AtlasCommand effort.\nDefault for k_effort is 0.\n\nReset f_d when controller mode is switched back to none.", "markup": "markdown", "html": "<p>add uint8[] k_effort to AtlasState and AtlasCommand, such that</p>\n<h1 id=\"markdown-header-kp_position-position-measured_position\">kp_position     * ( position - measured_position )       +</h1>\n<h1 id=\"markdown-header-ki_position-1s-position-measured_position\">ki_position     * 1/s * ( position - measured_position ) +</h1>\n<h1 id=\"markdown-header-kd_position-s-position-measured_position\">kd_position     * s * ( position - measured_position ) +</h1>\n<h1 id=\"markdown-header-kp_velocity-velocity-measured_velocity\">kp_velocity     * ( velocity - measured_velocity )     +</h1>\n<h1 id=\"markdown-header-k_effort-effort\">k_effort        * effort +</h1>\n<h1 id=\"markdown-header-1-k_effort-effort_bdi\">(1 - k_effort)  * effort_bdi</h1>\n<p>so user can blend bdi controller effort and AtlasCommand effort.<br />\nDefault for k_effort is 0.</p>\n<p>Reset f_d when controller mode is switched back to none.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "dba616b6ad78ecfa020eb4b680a459edc43fa8cd", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/drcsim/commit/dba616b6ad78ecfa020eb4b680a459edc43fa8cd.json"}, "html": {"href": "#!/osrf/drcsim/commits/dba616b6ad78ecfa020eb4b680a459edc43fa8cd"}}}], "date": "2013-04-09T00:23:43+00:00", "message": "add uint8[] k_effort to AtlasState and AtlasCommand, such that\n\n#   kp_position     * ( position - measured_position )       +\n#   ki_position     * 1/s * ( position - measured_position ) +\n#   kd_position     * s * ( position - measured_position ) +\n#   kp_velocity     * ( velocity - measured_velocity )     +\n#   k_effort        * effort +\n#   (1 - k_effort)  * effort_bdi\n\nso user can blend bdi controller effort and AtlasCommand effort.\nDefault for k_effort is 0.\n\nReset f_d when controller mode is switched back to none.", "type": "commit", "git_hash": "3eb7ccbcaf0626634150693d5cb0fca4a4778f84", "tags": null, "branches": "k_effort"}