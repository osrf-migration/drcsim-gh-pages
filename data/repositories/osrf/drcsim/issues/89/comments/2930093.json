{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/89/comments/2930093.json"}, "html": {"href": "#!/osrf/drcsim/issues/89#comment-2930093"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/89.json"}}, "type": "issue", "id": 89, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Atlas textures not showing up"}, "content": {"raw": "Textures also don't load for the new gazebo_models models like the ranger (only one i tested but I'm guessing it's the same for the other). Maybe the problem/difference is that ROS uses the .dae file's location while Gazebo uses some Gazebo dir or root?\n\nRegarding the missing head color I guess it's due to the urdf->sdf conversion bug that dropped the material tag which already got fixed in some branch though I think (can't find the ticket right now).\n\nI just noticed that ``nist_mase_wall_120`` uses just the filename instead of relative path to the materials/textures/ folder ... maybe that's what Gazebo is using while ros relies on a relative path?\n\nEdit: hmmm, nope, removing the relative filepath in the .dae files and leaving just the texture name only breaks it in rviz but doesn't make it work in gazebo. Using an absolute filepath doesn't seem to work either, so the issue is something else I guess.\n\nEdit2: what's also interesting is that Meshlab loads textures correctly for the NIST wall but not for the objects that also fail for Gazebo. So the FBX collada exporter (used for Atlas) and OpenCOLLADA exporter (used for polaris) seem to be doing something different than Blender's and SketchUp's exporters that rviz is able to handle but other programs including gazebo aren't.", "markup": "markdown", "html": "<p>Textures also don't load for the new gazebo_models models like the ranger (only one i tested but I'm guessing it's the same for the other). Maybe the problem/difference is that ROS uses the .dae file's location while Gazebo uses some Gazebo dir or root?</p>\n<p>Regarding the missing head color I guess it's due to the urdf-&gt;sdf conversion bug that dropped the material tag which already got fixed in some branch though I think (can't find the ticket right now).</p>\n<p>I just noticed that <code>nist_mase_wall_120</code> uses just the filename instead of relative path to the materials/textures/ folder ... maybe that's what Gazebo is using while ros relies on a relative path?</p>\n<p>Edit: hmmm, nope, removing the relative filepath in the .dae files and leaving just the texture name only breaks it in rviz but doesn't make it work in gazebo. Using an absolute filepath doesn't seem to work either, so the issue is something else I guess.</p>\n<p>Edit2: what's also interesting is that Meshlab loads textures correctly for the NIST wall but not for the objects that also fail for Gazebo. So the FBX collada exporter (used for Atlas) and OpenCOLLADA exporter (used for polaris) seem to be doing something different than Blender's and SketchUp's exporters that rviz is able to handle but other programs including gazebo aren't.</p>", "type": "rendered"}, "created_on": "2013-01-24T05:29:01.977189+00:00", "user": {"display_name": "Thomas Koletschka", "uuid": "{b33092ac-6376-48d1-9803-d9e6de445d1a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D"}, "html": {"href": "https://bitbucket.org/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomasko/avatar/"}}, "nickname": "thomasko", "type": "user", "account_id": null}, "updated_on": "2013-01-24T06:03:28.180004+00:00", "type": "issue_comment", "id": 2930093}