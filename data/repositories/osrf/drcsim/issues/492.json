{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "links": {"attachments": {"href": "data/repositories/osrf/drcsim/issues/492/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/drcsim/issues/492.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/issues/492/watch"}, "comments": {"href": "data/repositories/osrf/drcsim/issues/492/comments_page=1.json"}, "html": {"href": "#!/osrf/drcsim/issues/492/model-for-left-arm-is-wrong-in-v4-and-has"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/issues/492/vote"}}, "reporter": {"display_name": "Twan Koolen", "uuid": "{2d5c2bff-dbd5-48c6-9467-a28e598f2ad2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2d5c2bff-dbd5-48c6-9467-a28e598f2ad2%7D"}, "html": {"href": "https://bitbucket.org/%7B2d5c2bff-dbd5-48c6-9467-a28e598f2ad2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/c9a855f23543778ac9e3536505f615d3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTK-3.png"}}, "nickname": "tkoolen", "type": "user", "account_id": "5b9ac9a79d17912bf10b2b7e"}, "title": "Model for left arm is wrong in v4 (and has always been wrong)", "component": null, "votes": 4, "watches": 10, "content": {"raw": "While doing Vicon experiments with markers on the hands and torso, we (the MIT team) noticed that the kinematic model for the right arm was much more accurate than the one for the left arm.\r\n\r\nIn the current URDF, the kinematic model for the left arm is (mostly, I believe) mirrored from that of the right arm. However on the physical robot, the left arm and right arm are the same, except for the fact that some parts are mounted with a pi rotation offset.\r\n\r\nWe figured out the correct model for the left arm by simply copying a subset of the right arm properties to the left and subsequently inverting some of the joint axes and adding pi rotation offsets based on the way the physical links were mounted.\r\n\r\nAfter making these changes, we found that the match between the model and the Vicon measurements was much better (magnitude of residuals similar to what was observed for the right arm).\r\n\r\nA detailed summary of the changes we made to the URDF (in order):\r\n\r\n* rotate the visual of the r_lfarm link by pi about the y-axis (this was actually a mistake in the right arm)\r\n* copy all properties of all arm links from the right side to the left side\r\n* copy all properties except 'limit', 'safety_controller', 'parent', and 'child' of all arm joints except shy from the right side to the left side\r\n* copy all properties except 'origin' 'limit', 'safety_controller', 'parent', and 'child' of the shy joint from the right side to the left side\r\n* invert the joint axis of l_arm_shx, l_arm_ely, l_arm_elx, l_arm_wry\r\n* set origin rpy of l_arm_shy to [0, 0, pi] (left arm is mounted with a pi offset compared to right arm)\r\n* set origin rpy of l_arm_wry to [0, pi, 0] (link following this joint is mounted with a pi offset on the physical robot)\r\n* set origin rpy of l_arm_wry2 to [0, pi, 0] (link following this joint is mounted with a pi offset on the physical robot)\r\n\r\nNote that these modifications imply that the mesh tags for the left arm links now point to the right arm mesh files as we believe they should be since they're actually the same on the physical robot, just mounted differently.\r\n\r\nSee attachment for:\r\n\r\n* atlas_v4_simple_shapes_after_xacro.urdf: atlas_v4_simple_shapes.urdf from the default branch after running xacro on it\r\n* atlas_v4_simple_shapes_after_xacro_and_fixes.urdf: the same file after applying our modifications (we use a python script to make the modifications on the urdf which we can provide if necessary)\r\n\r\nA caveat is that the urdf we use for simulation and control is actually further modified w.r.t. the one I attached, so we haven't run any simulations with this model. However, I'm pretty confident that these are the right changes since they were done by running the same Python code in both cases.\r\n", "markup": "markdown", "html": "<p>While doing Vicon experiments with markers on the hands and torso, we (the MIT team) noticed that the kinematic model for the right arm was much more accurate than the one for the left arm.</p>\n<p>In the current URDF, the kinematic model for the left arm is (mostly, I believe) mirrored from that of the right arm. However on the physical robot, the left arm and right arm are the same, except for the fact that some parts are mounted with a pi rotation offset.</p>\n<p>We figured out the correct model for the left arm by simply copying a subset of the right arm properties to the left and subsequently inverting some of the joint axes and adding pi rotation offsets based on the way the physical links were mounted.</p>\n<p>After making these changes, we found that the match between the model and the Vicon measurements was much better (magnitude of residuals similar to what was observed for the right arm).</p>\n<p>A detailed summary of the changes we made to the URDF (in order):</p>\n<ul>\n<li>rotate the visual of the r_lfarm link by pi about the y-axis (this was actually a mistake in the right arm)</li>\n<li>copy all properties of all arm links from the right side to the left side</li>\n<li>copy all properties except 'limit', 'safety_controller', 'parent', and 'child' of all arm joints except shy from the right side to the left side</li>\n<li>copy all properties except 'origin' 'limit', 'safety_controller', 'parent', and 'child' of the shy joint from the right side to the left side</li>\n<li>invert the joint axis of l_arm_shx, l_arm_ely, l_arm_elx, l_arm_wry</li>\n<li>set origin rpy of l_arm_shy to [0, 0, pi] (left arm is mounted with a pi offset compared to right arm)</li>\n<li>set origin rpy of l_arm_wry to [0, pi, 0] (link following this joint is mounted with a pi offset on the physical robot)</li>\n<li>set origin rpy of l_arm_wry2 to [0, pi, 0] (link following this joint is mounted with a pi offset on the physical robot)</li>\n</ul>\n<p>Note that these modifications imply that the mesh tags for the left arm links now point to the right arm mesh files as we believe they should be since they're actually the same on the physical robot, just mounted differently.</p>\n<p>See attachment for:</p>\n<ul>\n<li>atlas_v4_simple_shapes_after_xacro.urdf: atlas_v4_simple_shapes.urdf from the default branch after running xacro on it</li>\n<li>atlas_v4_simple_shapes_after_xacro_and_fixes.urdf: the same file after applying our modifications (we use a python script to make the modifications on the urdf which we can provide if necessary)</li>\n</ul>\n<p>A caveat is that the urdf we use for simulation and control is actually further modified w.r.t. the one I attached, so we haven't run any simulations with this model. However, I'm pretty confident that these are the right changes since they were done by running the same Python code in both cases.</p>", "type": "rendered"}, "assignee": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-03-25T20:07:52.612271+00:00", "milestone": null, "updated_on": "2015-05-11T14:18:36.190317+00:00", "type": "issue", "id": 492}