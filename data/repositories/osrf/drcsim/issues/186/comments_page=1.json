{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186/comments/3700211.json"}, "html": {"href": "#!/osrf/drcsim/issues/186#comment-3700211"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Laser subscription in vrc_task_2 causes slow-down"}, "content": {"raw": "duplicate of https://bitbucket.org/osrf/gazebo/issue/572/vrc-heightmap-problems ?", "markup": "markdown", "html": "<p>duplicate of <a href=\"https://bitbucket.org/osrf/gazebo/issue/572/vrc-heightmap-problems\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/issue/572/vrc-heightmap-problems</a> ?</p>", "type": "rendered"}, "created_on": "2013-04-10T17:03:56.556878+00:00", "user": {"display_name": "Thomas Koletschka", "uuid": "{b33092ac-6376-48d1-9803-d9e6de445d1a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D"}, "html": {"href": "https://bitbucket.org/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomasko/avatar/"}}, "nickname": "thomasko", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 3700211}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186/comments/3702828.json"}, "html": {"href": "#!/osrf/drcsim/issues/186#comment-3702828"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Laser subscription in vrc_task_2 causes slow-down"}, "content": {"raw": "Thanks for the pointer.  I prefer my succinct description of this particular problem.\n\nAnd I closed https://bitbucket.org/osrf/gazebo/issue/572/vrc-heightmap-problems \"invalid\" with the request that you break it into pieces.  No offense intended, and we do want the problems reported so that we can fix them; but we need distinct, closeable issues.", "markup": "markdown", "html": "<p>Thanks for the pointer.  I prefer my succinct description of this particular problem.</p>\n<p>And I closed <a href=\"https://bitbucket.org/osrf/gazebo/issue/572/vrc-heightmap-problems\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/issue/572/vrc-heightmap-problems</a> \"invalid\" with the request that you break it into pieces.  No offense intended, and we do want the problems reported so that we can fix them; but we need distinct, closeable issues.</p>", "type": "rendered"}, "created_on": "2013-04-10T21:51:30.439877+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": null, "type": "issue_comment", "id": 3702828}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186/comments/3702865.json"}, "html": {"href": "#!/osrf/drcsim/issues/186#comment-3702865"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Laser subscription in vrc_task_2 causes slow-down"}, "content": {"raw": "imho the heightmap is one big issue and simply carries a lot of issues with it that can be closed by fixing heightmap itself (or replacing it with / converting it to a triangle mesh) ... fixing an individual problem still won't make the heightmap usable, just less buggy.\n\nEither way, here my report taken from the other ticket:\n\n\nWhen turning on the LIDAR in vrc world 2 (walking), the real-time factor drops down from ~0.99 to 0.02 (no hands, no rubble). In vrc world 1 it is not as bad, there it only drops about 0.1 (e.g. from 0.5 to 0.4) and in the old world that used drc_terrain I never noticed a difference when enabling the LIDAR as far as I can remember.\n\nThe difference between those worlds is that both vrc1 and vrc2 use a heightmap with 513*513 resolution but vrc1 has a map size of 500x500x118 while vrc2 only has a map size of 200x200x46.9. So vrc1 is more than twice as large as vrc2 and has a better performance for LIDAR. Assuming that Gazebo/OGRE creates one vertex per pixel, this means that vrc2 has a higher triangle density than vrc1 which explains why it's slower than vrc1. drc_terrain has a heightmap resolution of 257px and a map size of 2000x2000x500 which is ten times larger than vrc2 and hence explains why those issues didn't arrise with drc_terrain.\n\nI converted the vrc2 heightmap into a triangle mesh, one with 132098 triangles and the other with 526338 to test speed with pure triangle meshes - I'm not sure what triangle count vrc2 has but it should be close to one of them. With the lower resolution triangle mesh my real-time factor only dropped by 0.05 and with the higher resolution mesh it only dropped by 0.1. But again I'm not sure whether either of them is close to the resolution that the heightmap rendered by Gazebo/Ogre has.\n\nMaybe this performance drop might decrease or even disappear when switching to the GPU based LIDAR given that enabling the cameras does not affect performance that much either?\n\n===================================================================\n\n@nkoenig @hsu \n\nIn an attempt of getting a usable terrain for testing perception and avoiding the lidar performance issue I wanted to test the performance of a triangle mesh as a replacement for heightmap. In order to test an extreme case I used a trimesh [1] with a size of 13*13 meters and a resolution of 250.000 triangles and put 6 of them into the scene in front of Atlas [2] - so that's 1.5 million triangles in front of atlas placed up to a distance of approximately 30 meters, so pretty much all the triangles are within the reach of LIDAR and cameras.\n\nEven though the triangle mesh has a much higher resolution than the heightmap used in vrc world 2, the triangle mesh performs much better than heightmap, especially when using the LIDAR.\n\nHere are some results, both worlds using the same physics settings (the vrc world2 defaults with unbounded update rate):\n\n    heightmap (vrc world2 heightmap + atlas, no other objects): \n            atlas standing: 1.45 - 1.5\n            both cameras: 1.3   \n            lidar: 0.03, 0.02, or maybe lower just not displayed  | lidar hz stays at 40\n            atlas levitating: 1.8\n            atlas levitating+cameras: 1.6\n            atlas levitating+lidar: 0.18\n            atlas levitating+lidar+cameras: 0.18 | camera at ~28, lidar at ~36\n\n    6*250k trimesh:\n            atlas levitating: 1.5\n            atlas levitating+cameras: 1.40 | cameras at 14Hz (50% of desired)\n            atlas levitating+lidar: 1.2 | lidar at 38Hz\n            atlas levitating+lidar+cameras: 1.15-1.20 | cameras at 17Hz, lidar 38Hz\n            atlas \"standing\" (feet are in contact with ground but robot held upright using 'pinned_with_gravity'): 1.15\n            atlas \"standing\" + all sensors: 0.85-0.9 | lidar 35Hz, cameras 21Hz\n\n\nAs you can clearly see, even with unnecessarily high resolution the triangle mesh clearly outperforms the (fairly low resolution) heightmap used in vrc world 2. Besides performance the triangle mesh also has the advantage of not suffering under the distance/texture distortion problem that Gazebo heightmaps have (actually I've also noticed the same texture distortion problem at some parts of terrain while testing cryengine 3 - so this might partially be a problem of the underlying technology used).\n\nThe only case where heightmap performs \"better\" than the trimesh in the above \"benchmark\" is the cameras' update rate, but this is due to the extremely high triangle count which was chosen as stresstest for LIDAR. Using a more sane, but still high resolution, triangle count of 50k per mesh bumps the camera rate back up to the desired 30Hz.\n\nI haven't had time to test other performance criteria but e.g. dropping atlas onto the 250k triangle mesh still keeps the RTF above 0.9 upon impact. \n\n[1] http://i.imgur.com/JzxjxAE.jpg (exported from an Unreal Development Kit example scene, triangle count reduced to 250k using Meshlab)\n\n[2] http://i.imgur.com/phi42KS.jpg", "markup": "markdown", "html": "<p>imho the heightmap is one big issue and simply carries a lot of issues with it that can be closed by fixing heightmap itself (or replacing it with / converting it to a triangle mesh) ... fixing an individual problem still won't make the heightmap usable, just less buggy.</p>\n<p>Either way, here my report taken from the other ticket:</p>\n<p>When turning on the LIDAR in vrc world 2 (walking), the real-time factor drops down from ~0.99 to 0.02 (no hands, no rubble). In vrc world 1 it is not as bad, there it only drops about 0.1 (e.g. from 0.5 to 0.4) and in the old world that used drc_terrain I never noticed a difference when enabling the LIDAR as far as I can remember.</p>\n<p>The difference between those worlds is that both vrc1 and vrc2 use a heightmap with 513*513 resolution but vrc1 has a map size of 500x500x118 while vrc2 only has a map size of 200x200x46.9. So vrc1 is more than twice as large as vrc2 and has a better performance for LIDAR. Assuming that Gazebo/OGRE creates one vertex per pixel, this means that vrc2 has a higher triangle density than vrc1 which explains why it's slower than vrc1. drc_terrain has a heightmap resolution of 257px and a map size of 2000x2000x500 which is ten times larger than vrc2 and hence explains why those issues didn't arrise with drc_terrain.</p>\n<p>I converted the vrc2 heightmap into a triangle mesh, one with 132098 triangles and the other with 526338 to test speed with pure triangle meshes - I'm not sure what triangle count vrc2 has but it should be close to one of them. With the lower resolution triangle mesh my real-time factor only dropped by 0.05 and with the higher resolution mesh it only dropped by 0.1. But again I'm not sure whether either of them is close to the resolution that the heightmap rendered by Gazebo/Ogre has.</p>\n<p>Maybe this performance drop might decrease or even disappear when switching to the GPU based LIDAR given that enabling the cameras does not affect performance that much either?</p>\n<p>===================================================================</p>\n<p>@nkoenig @hsu </p>\n<p>In an attempt of getting a usable terrain for testing perception and avoiding the lidar performance issue I wanted to test the performance of a triangle mesh as a replacement for heightmap. In order to test an extreme case I used a trimesh [1] with a size of 13*13 meters and a resolution of 250.000 triangles and put 6 of them into the scene in front of Atlas [2] - so that's 1.5 million triangles in front of atlas placed up to a distance of approximately 30 meters, so pretty much all the triangles are within the reach of LIDAR and cameras.</p>\n<p>Even though the triangle mesh has a much higher resolution than the heightmap used in vrc world 2, the triangle mesh performs much better than heightmap, especially when using the LIDAR.</p>\n<p>Here are some results, both worlds using the same physics settings (the vrc world2 defaults with unbounded update rate):</p>\n<div class=\"codehilite\"><pre><span></span>heightmap (vrc world2 heightmap + atlas, no other objects): \n        atlas standing: 1.45 - 1.5\n        both cameras: 1.3   \n        lidar: 0.03, 0.02, or maybe lower just not displayed  | lidar hz stays at 40\n        atlas levitating: 1.8\n        atlas levitating+cameras: 1.6\n        atlas levitating+lidar: 0.18\n        atlas levitating+lidar+cameras: 0.18 | camera at ~28, lidar at ~36\n\n6*250k trimesh:\n        atlas levitating: 1.5\n        atlas levitating+cameras: 1.40 | cameras at 14Hz (50% of desired)\n        atlas levitating+lidar: 1.2 | lidar at 38Hz\n        atlas levitating+lidar+cameras: 1.15-1.20 | cameras at 17Hz, lidar 38Hz\n        atlas &quot;standing&quot; (feet are in contact with ground but robot held upright using &#39;pinned_with_gravity&#39;): 1.15\n        atlas &quot;standing&quot; + all sensors: 0.85-0.9 | lidar 35Hz, cameras 21Hz\n</pre></div>\n\n\n<p>As you can clearly see, even with unnecessarily high resolution the triangle mesh clearly outperforms the (fairly low resolution) heightmap used in vrc world 2. Besides performance the triangle mesh also has the advantage of not suffering under the distance/texture distortion problem that Gazebo heightmaps have (actually I've also noticed the same texture distortion problem at some parts of terrain while testing cryengine 3 - so this might partially be a problem of the underlying technology used).</p>\n<p>The only case where heightmap performs \"better\" than the trimesh in the above \"benchmark\" is the cameras' update rate, but this is due to the extremely high triangle count which was chosen as stresstest for LIDAR. Using a more sane, but still high resolution, triangle count of 50k per mesh bumps the camera rate back up to the desired 30Hz.</p>\n<p>I haven't had time to test other performance criteria but e.g. dropping atlas onto the 250k triangle mesh still keeps the RTF above 0.9 upon impact. </p>\n<p>[1] <a href=\"http://i.imgur.com/JzxjxAE.jpg\" rel=\"nofollow\" class=\"ap-connect-link\">http://i.imgur.com/JzxjxAE.jpg</a> (exported from an Unreal Development Kit example scene, triangle count reduced to 250k using Meshlab)</p>\n<p>[2] <a href=\"http://i.imgur.com/phi42KS.jpg\" rel=\"nofollow\" class=\"ap-connect-link\">http://i.imgur.com/phi42KS.jpg</a></p>", "type": "rendered"}, "created_on": "2013-04-10T21:56:38.319640+00:00", "user": {"display_name": "Thomas Koletschka", "uuid": "{b33092ac-6376-48d1-9803-d9e6de445d1a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D"}, "html": {"href": "https://bitbucket.org/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomasko/avatar/"}}, "nickname": "thomasko", "type": "user", "account_id": null}, "updated_on": "2013-04-10T22:04:08.211618+00:00", "type": "issue_comment", "id": 3702865}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186/comments/3702880.json"}, "html": {"href": "#!/osrf/drcsim/issues/186#comment-3702880"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Laser subscription in vrc_task_2 causes slow-down"}, "content": {"raw": "btw I think this is more of a Gazebo problem, not a drcsim problem given that triangle meshes with much higher resolution don't cause this problem. (although it might also be possible to solve it through drcsim by switching to GPU based lidar but this wouldn't solve the underlying problem with using lidar + heightmap).", "markup": "markdown", "html": "<p>btw I think this is more of a Gazebo problem, not a drcsim problem given that triangle meshes with much higher resolution don't cause this problem. (although it might also be possible to solve it through drcsim by switching to GPU based lidar but this wouldn't solve the underlying problem with using lidar + heightmap).</p>", "type": "rendered"}, "created_on": "2013-04-10T21:59:49.628599+00:00", "user": {"display_name": "Thomas Koletschka", "uuid": "{b33092ac-6376-48d1-9803-d9e6de445d1a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D"}, "html": {"href": "https://bitbucket.org/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomasko/avatar/"}}, "nickname": "thomasko", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 3702880}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186/comments/3711761.json"}, "html": {"href": "#!/osrf/drcsim/issues/186#comment-3711761"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Laser subscription in vrc_task_2 causes slow-down"}, "content": {"raw": "We have the same issue too. In VRC task 2, terrain information is very important. The point cloud data from the stereo process is very noise and cannot be used for rough terrain detection. The best way is to use laser data. It seems that GPU process could be a quick way to solve the problem. I think the GPU version should be launched soon for us to test the environment.", "markup": "markdown", "html": "<p>We have the same issue too. In VRC task 2, terrain information is very important. The point cloud data from the stereo process is very noise and cannot be used for rough terrain detection. The best way is to use laser data. It seems that GPU process could be a quick way to solve the problem. I think the GPU version should be launched soon for us to test the environment.</p>", "type": "rendered"}, "created_on": "2013-04-11T13:59:39.494504+00:00", "user": {"display_name": "weiwei huang", "uuid": "{aa4f750f-274b-42e0-951c-03565571205d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Baa4f750f-274b-42e0-951c-03565571205d%7D"}, "html": {"href": "https://bitbucket.org/%7Baa4f750f-274b-42e0-951c-03565571205d%7D/"}, "avatar": {"href": "https://bitbucket.org/account/huang_weiwei/avatar/"}}, "nickname": "huang_weiwei", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 3711761}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186/comments/3861672.json"}, "html": {"href": "#!/osrf/drcsim/issues/186#comment-3861672"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Laser subscription in vrc_task_2 causes slow-down"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2013-04-24T19:08:10.553776+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": null, "type": "issue_comment", "id": 3861672}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186/comments/3863367.json"}, "html": {"href": "#!/osrf/drcsim/issues/186#comment-3863367"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Laser subscription in vrc_task_2 causes slow-down"}, "content": {"raw": "Removing version: VRC (automated comment)", "markup": "markdown", "html": "<p>Removing version: VRC (automated comment)</p>", "type": "rendered"}, "created_on": "2013-04-24T22:01:46.984861+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": null, "type": "issue_comment", "id": 3863367}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186/comments/3945103.json"}, "html": {"href": "#!/osrf/drcsim/issues/186#comment-3945103"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/186.json"}}, "type": "issue", "id": 186, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Laser subscription in vrc_task_2 causes slow-down"}, "content": {"raw": "fixed by gpu laser pull request #235", "markup": "markdown", "html": "<p>fixed by gpu laser <a href=\"#!/osrf/drcsim/pull-requests/235/updating-gazebo_ros_gpu_laser-plugin-to\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #235</a></p>", "type": "rendered"}, "created_on": "2013-05-02T19:37:30.875479+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 3945103}], "page": 1, "size": 8}