{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/324/comments/4773293.json"}, "html": {"href": "#!/osrf/drcsim/issues/324#comment-4773293"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/324.json"}}, "type": "issue", "id": 324, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Low frame rates on sensors with 1.8.6/2.6.5"}, "content": {"raw": "The following two Test Cases take place on softlayer machines using the following steps:\n\n1) Sim: `roslaunch atlas_utils vrc_task_1.launch gzname:=gzserver`\n\n2) Sim: `roslaunch atlas_utils ros_subscribers.launch`\n\n3) FC1: `rostopic hz /multisense_sl/camera/left/image_raw -w 20`\n\n4) FC1: `rostopic hz /multisense_sl/laser/scan -w 20`\n\n5) FC1: `rostopic hz /sandia_hands/r_hand/camera/left/image_raw -w 20`\n\n6) FC1: `rostopic hz /sandia_hands/l_hand/camera/left/image_raw -w 20`\n\n7) Let simulation run for 300 seconds\n\n8) Measure Hz rate of sensor topics.\n\n\n**Test Case 1**\n\nGazebo: 1.8.2\n\nDRCSim: 2.6.3\n\nResult: ~11.5 Hz for all sensor topics\n\nReal time factor: 0.70\n\n**Test Case 2**\n\nGazebo: 1.8.2\n\nDRCSim: 2.6.3\n\nResult: ~12.5 Hz for all sensor topics\n\nReal Time Factor: 0.70\n\n**Conclusion**\n\nSensor update rates have remained the same since the beginning of practice. Is there something that I'm not running during this test? Did anyone have higher frame rates during practice when subscribed to all the sensors? If so, can you please describe how you achieved those higher frame rates?\n\n\n", "markup": "markdown", "html": "<p>The following two Test Cases take place on softlayer machines using the following steps:</p>\n<p>1) Sim: <code>roslaunch atlas_utils vrc_task_1.launch gzname:=gzserver</code></p>\n<p>2) Sim: <code>roslaunch atlas_utils ros_subscribers.launch</code></p>\n<p>3) FC1: <code>rostopic hz /multisense_sl/camera/left/image_raw -w 20</code></p>\n<p>4) FC1: <code>rostopic hz /multisense_sl/laser/scan -w 20</code></p>\n<p>5) FC1: <code>rostopic hz /sandia_hands/r_hand/camera/left/image_raw -w 20</code></p>\n<p>6) FC1: <code>rostopic hz /sandia_hands/l_hand/camera/left/image_raw -w 20</code></p>\n<p>7) Let simulation run for 300 seconds</p>\n<p>8) Measure Hz rate of sensor topics.</p>\n<p><strong>Test Case 1</strong></p>\n<p>Gazebo: 1.8.2</p>\n<p>DRCSim: 2.6.3</p>\n<p>Result: ~11.5 Hz for all sensor topics</p>\n<p>Real time factor: 0.70</p>\n<p><strong>Test Case 2</strong></p>\n<p>Gazebo: 1.8.2</p>\n<p>DRCSim: 2.6.3</p>\n<p>Result: ~12.5 Hz for all sensor topics</p>\n<p>Real Time Factor: 0.70</p>\n<p><strong>Conclusion</strong></p>\n<p>Sensor update rates have remained the same since the beginning of practice. Is there something that I'm not running during this test? Did anyone have higher frame rates during practice when subscribed to all the sensors? If so, can you please describe how you achieved those higher frame rates?</p>", "type": "rendered"}, "created_on": "2013-06-10T23:42:34.983664+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 4773293}