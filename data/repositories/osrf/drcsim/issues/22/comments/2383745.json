{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/22/comments/2383745.json"}, "html": {"href": "#!/osrf/drcsim/issues/22#comment-2383745"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/22.json"}}, "type": "issue", "id": 22, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Parts of stereo camera system transforms are wrong"}, "content": {"raw": "I never understood the reason for this but somehow ROS' convention is to have the same frame_id for left and right stereo camera pairs and then use hackBaseline to create the offset instead of using two different frame_id's. \nSetting hackBaseline to 0 \"resolves\" the issue because then you have a baseline of 0 between your cameras and hence your right camera pose equals your left camera pose. \n\nimage_geometry::StereoCameraModel has an assert in its fromCameraInfo function to check that both left and right camera have the same frame_id.\nUsing the same frame_id for both cameras does not seem to serve any purpose other than passing this assert so in my own copy of stereo_image_proc I'm hacking around this by creating a temporary CameraInfo for the right camera that has the same frame_id as the left camera. \n\nSo this isn't really a bug in drcsim, rather a weird ROS convention. ", "markup": "markdown", "html": "<p>I never understood the reason for this but somehow ROS' convention is to have the same frame_id for left and right stereo camera pairs and then use hackBaseline to create the offset instead of using two different frame_id's. \nSetting hackBaseline to 0 \"resolves\" the issue because then you have a baseline of 0 between your cameras and hence your right camera pose equals your left camera pose. </p>\n<p>image_geometry::StereoCameraModel has an assert in its fromCameraInfo function to check that both left and right camera have the same frame_id.\nUsing the same frame_id for both cameras does not seem to serve any purpose other than passing this assert so in my own copy of stereo_image_proc I'm hacking around this by creating a temporary CameraInfo for the right camera that has the same frame_id as the left camera. </p>\n<p>So this isn't really a bug in drcsim, rather a weird ROS convention. </p>", "type": "rendered"}, "created_on": "2012-11-14T07:02:25.363690+00:00", "user": {"display_name": "Thomas Koletschka", "uuid": "{b33092ac-6376-48d1-9803-d9e6de445d1a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D"}, "html": {"href": "https://bitbucket.org/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomasko/avatar/"}}, "nickname": "thomasko", "type": "user", "account_id": null}, "updated_on": "2012-11-14T07:05:12.987757+00:00", "type": "issue_comment", "id": 2383745}