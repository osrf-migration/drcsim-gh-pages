{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/364/comments/6309968.json"}, "html": {"href": "#!/osrf/drcsim/issues/364#comment-6309968"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/364.json"}}, "type": "issue", "id": 364, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Atlas v3 URDF has no collision models"}, "content": {"raw": "We are using Fuerte.  We are using the debian packages for drcsim, which are for fuerte.  You OSRF guys need to realize that teams have many members that use their own laptops, home machines, work machines, etc.  We can't all be building drcsim from source for every new branch or pull request against groovy, hydro whatever, so if you are going to put out Debian packages that build against Fuerte, which I recommend highly you continue to do, then you need to use models that are supported by the tools in Fuerte.  The current DAE files have some issue that does not allow the Fuerte geometric_shapes package to load the meshes.  Thus no planning, no self filtering from perception, no self collision detection, etc.", "markup": "markdown", "html": "<p>We are using Fuerte.  We are using the debian packages for drcsim, which are for fuerte.  You OSRF guys need to realize that teams have many members that use their own laptops, home machines, work machines, etc.  We can't all be building drcsim from source for every new branch or pull request against groovy, hydro whatever, so if you are going to put out Debian packages that build against Fuerte, which I recommend highly you continue to do, then you need to use models that are supported by the tools in Fuerte.  The current DAE files have some issue that does not allow the Fuerte geometric_shapes package to load the meshes.  Thus no planning, no self filtering from perception, no self collision detection, etc.</p>", "type": "rendered"}, "created_on": "2013-10-02T20:13:28.003001+00:00", "user": {"display_name": "Patrick Beeson", "uuid": "{d33f061a-d3c9-4b15-96cc-d08b463d97c6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd33f061a-d3c9-4b15-96cc-d08b463d97c6%7D"}, "html": {"href": "https://bitbucket.org/%7Bd33f061a-d3c9-4b15-96cc-d08b463d97c6%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/PB-0.png"}}, "nickname": "Patrick Beeson", "type": "user", "account_id": "557058:eff3a3b0-e19b-43e6-b0a0-22d6a8721c3b"}, "updated_on": null, "type": "issue_comment", "id": 6309968}