{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3716027.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3716027"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": "one possibility is improper handling of joint pose transform, can you try with world file below, where I shifted the model so joint frame are collocated with child link frame, and see if the resulting torques are correct?\n~~~\n<?xml version=\"1.0\" ?>\n<sdf version=\"1.4\">\n    <world name=\"default\">\n        <plugin name=\"SimpleWorldController\" filename=\"libSimpleWorldController.so\" />\n        <!-- Ground Plane -->\n        <include>\n            <uri>model://ground_plane</uri>\n        </include>\n        <include>\n            <uri>model://sun</uri>\n        </include>\n        <model name=\"box\">\n            <pose>0 0 0 0 0 0</pose>\n            <link name=\"link\">\n                <collision name=\"collision\">\n                    <pose>0.5 0 0.5 0 0 0</pose>\n                    <geometry>\n                        <box>\n                            <size>1 1 1</size>\n                        </box>\n                    </geometry>\n                </collision>\n                <visual name=\"visual\">\n                    <pose>0.5 0 0.5 0 0 0</pose>\n                    <geometry>\n                        <box>\n                            <size>1 1 1</size>\n                        </box>\n                    </geometry>\n                </visual>\n                <inertial>\n                    <mass>100.0</mass>\n                    <pose>0.5 0 0.5 0 0 0</pose>\n                    <inertia>\n                        <ixx>0.1</ixx>\n                        <iyy>0.1</iyy>\n                        <izz>0.1</izz>\n                        <ixy>0.1</ixy>\n                        <ixz>0.1</ixz>\n                        <iyz>0.1</iyz>\n                    </inertia>\n                </inertial>\n            </link>\n            <link name=\"link2\">\n                <pose>1.0 0 1.0 0 0 0</pose>\n                <collision name=\"collision\">\n                    <pose>0.5 0 0.5 0 0 0</pose>\n                    <geometry>\n                        <box>\n                            <size>1 1 1</size>\n                        </box>\n                    </geometry>\n                </collision>\n                <visual name=\"visual\">\n                    <pose>0.5 0 0.5 0 0 0</pose>\n                    <geometry>\n                        <box>\n                            <size>1 1 1</size>\n                        </box>\n                    </geometry>\n                </visual>\n                <inertial>\n                    <mass>5.0</mass>\n                    <pose>0.5 0 0.5 0 0 0</pose>\n                    <inertia>\n                        <ixx>0.1</ixx>\n                        <iyy>0.1</iyy>\n                        <izz>0.1</izz>\n                        <ixy>0.1</ixy>\n                        <ixz>0.1</ixz>\n                        <iyz>0.1</iyz>\n                    </inertia>\n                </inertial>\n            </link>\n            <link name=\"link3\">\n                <pose>2.0 0 2.0 0 0 0</pose>\n                <collision name=\"collision\">\n                    <pose>0.5 0 0.5 0 0 0</pose>\n                    <geometry>\n                        <box>\n                            <size>1 1 1</size>\n                        </box>\n                    </geometry>\n                </collision>\n                <visual name=\"visual\">\n                    <pose>0.5 0 0.5 0 0 0</pose>\n                    <geometry>\n                        <box>\n                            <size>1 1 1</size>\n                        </box>\n                    </geometry>\n                </visual>\n                <inertial>\n                    <mass>1.0</mass>\n                    <pose>0.5 0 0.5 0 0 0</pose>\n                    <inertia>\n                        <ixx>0.1</ixx>\n                        <iyy>0.1</iyy>\n                        <izz>0.1</izz>\n                        <ixy>0.1</ixy>\n                        <ixz>0.1</ixz>\n                        <iyz>0.1</iyz>\n                    </inertia>\n                </inertial>\n            </link>\n            <joint name=\"joint1\" type=\"revolute\">\n                <physics>\n                    <ode>\n                        <provide_feedback>true</provide_feedback>\n                    </ode>\n                </physics>\n                <axis>\n                    <xyz>0 1 0</xyz>\n                </axis>\n                <parent>\n                    <link_name>link</link_name>\n                </parent>\n                <child>\n                    <link_name>link2</link_name>\n                </child>\n            </joint>\n            <joint name=\"joint2\" type=\"revolute\">\n                <physics>\n                    <ode>\n                        <provide_feedback>true</provide_feedback>\n                    </ode>\n                </physics>\n                <axis>\n                    <xyz>0 1 0</xyz>\n                </axis>\n                <parent>\n                    <link_name>link2</link_name>\n                </parent>\n                <child>\n                    <link_name>link3</link_name>\n                </child>\n            </joint>\n            <!--<plugin name=\"GazeboJointControlTester\" filename=\"libGazeboJointControlTester.so\">\n      </plugin>-->\n            <plugin name=\"GazeboStateCommunicator\" filename=\"libGazeboStateCommunicator.so\" imulink=\"imu_link\" />\n        </model>\n        <physics type=\"ode\">\n            <gravity>0.000000 0.000000 -9.800000</gravity>\n            <ode>\n                <solver>\n                    <iters>1500</iters>\n                </solver>\n            </ode>\n            <real_time_update_rate>10000.000000</real_time_update_rate>\n            <max_step_size>0.0001</max_step_size>\n        </physics>\n    </world>\n</sdf>\n~~~\nThanks.", "markup": "markdown", "html": "<p>one possibility is improper handling of joint pose transform, can you try with world file below, where I shifted the model so joint frame are collocated with child link frame, and see if the resulting torques are correct?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.4&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;SimpleWorldController&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libSimpleWorldController.so&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"c\">&lt;!-- Ground Plane --&gt;</span>\n        <span class=\"nt\">&lt;include&gt;</span>\n            <span class=\"nt\">&lt;uri&gt;</span>model://ground_plane<span class=\"nt\">&lt;/uri&gt;</span>\n        <span class=\"nt\">&lt;/include&gt;</span>\n        <span class=\"nt\">&lt;include&gt;</span>\n            <span class=\"nt\">&lt;uri&gt;</span>model://sun<span class=\"nt\">&lt;/uri&gt;</span>\n        <span class=\"nt\">&lt;/include&gt;</span>\n        <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;box&quot;</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;pose&gt;</span>0 0 0 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n            <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;pose&gt;</span>0.5 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                    <span class=\"nt\">&lt;geometry&gt;</span>\n                        <span class=\"nt\">&lt;box&gt;</span>\n                            <span class=\"nt\">&lt;size&gt;</span>1 1 1<span class=\"nt\">&lt;/size&gt;</span>\n                        <span class=\"nt\">&lt;/box&gt;</span>\n                    <span class=\"nt\">&lt;/geometry&gt;</span>\n                <span class=\"nt\">&lt;/collision&gt;</span>\n                <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;pose&gt;</span>0.5 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                    <span class=\"nt\">&lt;geometry&gt;</span>\n                        <span class=\"nt\">&lt;box&gt;</span>\n                            <span class=\"nt\">&lt;size&gt;</span>1 1 1<span class=\"nt\">&lt;/size&gt;</span>\n                        <span class=\"nt\">&lt;/box&gt;</span>\n                    <span class=\"nt\">&lt;/geometry&gt;</span>\n                <span class=\"nt\">&lt;/visual&gt;</span>\n                <span class=\"nt\">&lt;inertial&gt;</span>\n                    <span class=\"nt\">&lt;mass&gt;</span>100.0<span class=\"nt\">&lt;/mass&gt;</span>\n                    <span class=\"nt\">&lt;pose&gt;</span>0.5 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                    <span class=\"nt\">&lt;inertia&gt;</span>\n                        <span class=\"nt\">&lt;ixx&gt;</span>0.1<span class=\"nt\">&lt;/ixx&gt;</span>\n                        <span class=\"nt\">&lt;iyy&gt;</span>0.1<span class=\"nt\">&lt;/iyy&gt;</span>\n                        <span class=\"nt\">&lt;izz&gt;</span>0.1<span class=\"nt\">&lt;/izz&gt;</span>\n                        <span class=\"nt\">&lt;ixy&gt;</span>0.1<span class=\"nt\">&lt;/ixy&gt;</span>\n                        <span class=\"nt\">&lt;ixz&gt;</span>0.1<span class=\"nt\">&lt;/ixz&gt;</span>\n                        <span class=\"nt\">&lt;iyz&gt;</span>0.1<span class=\"nt\">&lt;/iyz&gt;</span>\n                    <span class=\"nt\">&lt;/inertia&gt;</span>\n                <span class=\"nt\">&lt;/inertial&gt;</span>\n            <span class=\"nt\">&lt;/link&gt;</span>\n            <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link2&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;pose&gt;</span>1.0 0 1.0 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;pose&gt;</span>0.5 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                    <span class=\"nt\">&lt;geometry&gt;</span>\n                        <span class=\"nt\">&lt;box&gt;</span>\n                            <span class=\"nt\">&lt;size&gt;</span>1 1 1<span class=\"nt\">&lt;/size&gt;</span>\n                        <span class=\"nt\">&lt;/box&gt;</span>\n                    <span class=\"nt\">&lt;/geometry&gt;</span>\n                <span class=\"nt\">&lt;/collision&gt;</span>\n                <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;pose&gt;</span>0.5 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                    <span class=\"nt\">&lt;geometry&gt;</span>\n                        <span class=\"nt\">&lt;box&gt;</span>\n                            <span class=\"nt\">&lt;size&gt;</span>1 1 1<span class=\"nt\">&lt;/size&gt;</span>\n                        <span class=\"nt\">&lt;/box&gt;</span>\n                    <span class=\"nt\">&lt;/geometry&gt;</span>\n                <span class=\"nt\">&lt;/visual&gt;</span>\n                <span class=\"nt\">&lt;inertial&gt;</span>\n                    <span class=\"nt\">&lt;mass&gt;</span>5.0<span class=\"nt\">&lt;/mass&gt;</span>\n                    <span class=\"nt\">&lt;pose&gt;</span>0.5 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                    <span class=\"nt\">&lt;inertia&gt;</span>\n                        <span class=\"nt\">&lt;ixx&gt;</span>0.1<span class=\"nt\">&lt;/ixx&gt;</span>\n                        <span class=\"nt\">&lt;iyy&gt;</span>0.1<span class=\"nt\">&lt;/iyy&gt;</span>\n                        <span class=\"nt\">&lt;izz&gt;</span>0.1<span class=\"nt\">&lt;/izz&gt;</span>\n                        <span class=\"nt\">&lt;ixy&gt;</span>0.1<span class=\"nt\">&lt;/ixy&gt;</span>\n                        <span class=\"nt\">&lt;ixz&gt;</span>0.1<span class=\"nt\">&lt;/ixz&gt;</span>\n                        <span class=\"nt\">&lt;iyz&gt;</span>0.1<span class=\"nt\">&lt;/iyz&gt;</span>\n                    <span class=\"nt\">&lt;/inertia&gt;</span>\n                <span class=\"nt\">&lt;/inertial&gt;</span>\n            <span class=\"nt\">&lt;/link&gt;</span>\n            <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link3&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;pose&gt;</span>2.0 0 2.0 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;pose&gt;</span>0.5 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                    <span class=\"nt\">&lt;geometry&gt;</span>\n                        <span class=\"nt\">&lt;box&gt;</span>\n                            <span class=\"nt\">&lt;size&gt;</span>1 1 1<span class=\"nt\">&lt;/size&gt;</span>\n                        <span class=\"nt\">&lt;/box&gt;</span>\n                    <span class=\"nt\">&lt;/geometry&gt;</span>\n                <span class=\"nt\">&lt;/collision&gt;</span>\n                <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;pose&gt;</span>0.5 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                    <span class=\"nt\">&lt;geometry&gt;</span>\n                        <span class=\"nt\">&lt;box&gt;</span>\n                            <span class=\"nt\">&lt;size&gt;</span>1 1 1<span class=\"nt\">&lt;/size&gt;</span>\n                        <span class=\"nt\">&lt;/box&gt;</span>\n                    <span class=\"nt\">&lt;/geometry&gt;</span>\n                <span class=\"nt\">&lt;/visual&gt;</span>\n                <span class=\"nt\">&lt;inertial&gt;</span>\n                    <span class=\"nt\">&lt;mass&gt;</span>1.0<span class=\"nt\">&lt;/mass&gt;</span>\n                    <span class=\"nt\">&lt;pose&gt;</span>0.5 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                    <span class=\"nt\">&lt;inertia&gt;</span>\n                        <span class=\"nt\">&lt;ixx&gt;</span>0.1<span class=\"nt\">&lt;/ixx&gt;</span>\n                        <span class=\"nt\">&lt;iyy&gt;</span>0.1<span class=\"nt\">&lt;/iyy&gt;</span>\n                        <span class=\"nt\">&lt;izz&gt;</span>0.1<span class=\"nt\">&lt;/izz&gt;</span>\n                        <span class=\"nt\">&lt;ixy&gt;</span>0.1<span class=\"nt\">&lt;/ixy&gt;</span>\n                        <span class=\"nt\">&lt;ixz&gt;</span>0.1<span class=\"nt\">&lt;/ixz&gt;</span>\n                        <span class=\"nt\">&lt;iyz&gt;</span>0.1<span class=\"nt\">&lt;/iyz&gt;</span>\n                    <span class=\"nt\">&lt;/inertia&gt;</span>\n                <span class=\"nt\">&lt;/inertial&gt;</span>\n            <span class=\"nt\">&lt;/link&gt;</span>\n            <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;joint1&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;physics&gt;</span>\n                    <span class=\"nt\">&lt;ode&gt;</span>\n                        <span class=\"nt\">&lt;provide_feedback&gt;</span>true<span class=\"nt\">&lt;/provide_feedback&gt;</span>\n                    <span class=\"nt\">&lt;/ode&gt;</span>\n                <span class=\"nt\">&lt;/physics&gt;</span>\n                <span class=\"nt\">&lt;axis&gt;</span>\n                    <span class=\"nt\">&lt;xyz&gt;</span>0 1 0<span class=\"nt\">&lt;/xyz&gt;</span>\n                <span class=\"nt\">&lt;/axis&gt;</span>\n                <span class=\"nt\">&lt;parent&gt;</span>\n                    <span class=\"nt\">&lt;link_name&gt;</span>link<span class=\"nt\">&lt;/link_name&gt;</span>\n                <span class=\"nt\">&lt;/parent&gt;</span>\n                <span class=\"nt\">&lt;child&gt;</span>\n                    <span class=\"nt\">&lt;link_name&gt;</span>link2<span class=\"nt\">&lt;/link_name&gt;</span>\n                <span class=\"nt\">&lt;/child&gt;</span>\n            <span class=\"nt\">&lt;/joint&gt;</span>\n            <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;joint2&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;revolute&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;physics&gt;</span>\n                    <span class=\"nt\">&lt;ode&gt;</span>\n                        <span class=\"nt\">&lt;provide_feedback&gt;</span>true<span class=\"nt\">&lt;/provide_feedback&gt;</span>\n                    <span class=\"nt\">&lt;/ode&gt;</span>\n                <span class=\"nt\">&lt;/physics&gt;</span>\n                <span class=\"nt\">&lt;axis&gt;</span>\n                    <span class=\"nt\">&lt;xyz&gt;</span>0 1 0<span class=\"nt\">&lt;/xyz&gt;</span>\n                <span class=\"nt\">&lt;/axis&gt;</span>\n                <span class=\"nt\">&lt;parent&gt;</span>\n                    <span class=\"nt\">&lt;link_name&gt;</span>link2<span class=\"nt\">&lt;/link_name&gt;</span>\n                <span class=\"nt\">&lt;/parent&gt;</span>\n                <span class=\"nt\">&lt;child&gt;</span>\n                    <span class=\"nt\">&lt;link_name&gt;</span>link3<span class=\"nt\">&lt;/link_name&gt;</span>\n                <span class=\"nt\">&lt;/child&gt;</span>\n            <span class=\"nt\">&lt;/joint&gt;</span>\n            <span class=\"c\">&lt;!--&lt;plugin name=&quot;GazeboJointControlTester&quot; filename=&quot;libGazeboJointControlTester.so&quot;&gt;</span>\n<span class=\"c\">      &lt;/plugin&gt;--&gt;</span>\n            <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;GazeboStateCommunicator&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libGazeboStateCommunicator.so&quot;</span> <span class=\"na\">imulink=</span><span class=\"s\">&quot;imu_link&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/model&gt;</span>\n        <span class=\"nt\">&lt;physics</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ode&quot;</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;gravity&gt;</span>0.000000 0.000000 -9.800000<span class=\"nt\">&lt;/gravity&gt;</span>\n            <span class=\"nt\">&lt;ode&gt;</span>\n                <span class=\"nt\">&lt;solver&gt;</span>\n                    <span class=\"nt\">&lt;iters&gt;</span>1500<span class=\"nt\">&lt;/iters&gt;</span>\n                <span class=\"nt\">&lt;/solver&gt;</span>\n            <span class=\"nt\">&lt;/ode&gt;</span>\n            <span class=\"nt\">&lt;real_time_update_rate&gt;</span>10000.000000<span class=\"nt\">&lt;/real_time_update_rate&gt;</span>\n            <span class=\"nt\">&lt;max_step_size&gt;</span>0.0001<span class=\"nt\">&lt;/max_step_size&gt;</span>\n        <span class=\"nt\">&lt;/physics&gt;</span>\n    <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>Thanks.</p>", "type": "rendered"}, "created_on": "2013-04-11T21:04:10.084333+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 3716027}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3716141.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3716141"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": "John,\n\nI do not see any difference in measured torque with the new world file, it is still (almost) zero.\n\n- Jesper", "markup": "markdown", "html": "<p>John,</p>\n<p>I do not see any difference in measured torque with the new world file, it is still (almost) zero.</p>\n<ul>\n<li>Jesper</li>\n</ul>", "type": "rendered"}, "created_on": "2013-04-11T21:19:43.717936+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "updated_on": null, "type": "issue_comment", "id": 3716141}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3731270.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3731270"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": "The force torque calculation only took into account constraint wrench, not applied forces, proposed patch in [pull request #446](https://bitbucket.org/osrf/gazebo/pull-request/446/fix-force-torque-sensor-for-powered-joints/diff) and [pull request #447](https://bitbucket.org/osrf/gazebo/pull-request/447/similar-to-pull-reuqest-446-fix-force/diff)", "markup": "markdown", "html": "<p>The force torque calculation only took into account constraint wrench, not applied forces, proposed patch in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-request/446/fix-force-torque-sensor-for-powered-joints/diff\" rel=\"nofollow\">pull request #446</a> and <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-request/447/similar-to-pull-reuqest-446-fix-force/diff\" rel=\"nofollow\">pull request #447</a></p>", "type": "rendered"}, "created_on": "2013-04-12T23:43:51.475727+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 3731270}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3752720.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3752720"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": "According to the documentation on JointWrench the body2wrench in expressed in the center of mass frame of the child link:\n\n```\n    /// \\class JointWrench JointWrench.hh physics/physics.hh\n    /// \\brief Wrench information from a joint.  These are\n    /// forces and torques on parent and child Links, relative to the Link's\n    /// center of mass.\n```\n\nHowever, in the simple test case the body2wrench is clearly expressed in the joint frame. If the wrench was expressed in the child CoM frame, the expected torque part of the wrench measured in joint2 would be 0 (zero) when the system comes to rest. However, the Y component is 5Nm (as expected for a wrench in a joint frame).\n\nThe ODE documentation is not really clear about which frames the forces and torques are expressed in, but I would say the center of mass frame:\n\n```\ntypedef struct dJointFeedback {\n    dVector3 f1; // force that joint applies to body 1\n    dVector3 t1; // torque that joint applies to body 1\n    dVector3 f2; // force that joint applies to body 2\n    dVector3 t2; // torque that joint applies to body 2\n} dJointFeedback;\n```\n\nI think a change in reference frame is necessary for either the applied force or the constraint force and clarification in the documentation is necessary. ", "markup": "markdown", "html": "<p>According to the documentation on JointWrench the body2wrench in expressed in the center of mass frame of the child link:</p>\n<div class=\"codehilite\"><pre><span></span>    /// \\class JointWrench JointWrench.hh physics/physics.hh\n    /// \\brief Wrench information from a joint.  These are\n    /// forces and torques on parent and child Links, relative to the Link&#39;s\n    /// center of mass.\n</pre></div>\n\n\n<p>However, in the simple test case the body2wrench is clearly expressed in the joint frame. If the wrench was expressed in the child CoM frame, the expected torque part of the wrench measured in joint2 would be 0 (zero) when the system comes to rest. However, the Y component is 5Nm (as expected for a wrench in a joint frame).</p>\n<p>The ODE documentation is not really clear about which frames the forces and torques are expressed in, but I would say the center of mass frame:</p>\n<div class=\"codehilite\"><pre><span></span>typedef struct dJointFeedback {\n    dVector3 f1; // force that joint applies to body 1\n    dVector3 t1; // torque that joint applies to body 1\n    dVector3 f2; // force that joint applies to body 2\n    dVector3 t2; // torque that joint applies to body 2\n} dJointFeedback;\n</pre></div>\n\n\n<p>I think a change in reference frame is necessary for either the applied force or the constraint force and clarification in the documentation is necessary. </p>", "type": "rendered"}, "created_on": "2013-04-15T16:19:50.835887+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "updated_on": null, "type": "issue_comment", "id": 3752720}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3756570.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3756570"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": "@jespersmith: You're right about the comment in JointWrench.hh, that the force torque is incorrectly stated as relative to Link's center of mass.  In the use case in [GetForceTorque](https://bitbucket.org/osrf/gazebo/src/6193273ed4a74ba64f7fd25b02c37c20896775a5/gazebo/physics/ode/ODEJoint.cc?at=force_torque_fix_1.6#cl-898), the returned JointWrench is about the joint frame.  The associated [unit test](https://bitbucket.org/osrf/gazebo/src/6193273ed4a74ba64f7fd25b02c37c20896775a5/gazebo/physics/ode/ODEJoint_TEST.cc?at=force_torque_fix_1.6#cl-35) should reflect that, unless I've made some error in the code.  Please confirm.  Thanks.\n\n", "markup": "markdown", "html": "<p>@jespersmith: You're right about the comment in JointWrench.hh, that the force torque is incorrectly stated as relative to Link's center of mass.  In the use case in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/6193273ed4a74ba64f7fd25b02c37c20896775a5/gazebo/physics/ode/ODEJoint.cc?at=force_torque_fix_1.6#cl-898\" rel=\"nofollow\">GetForceTorque</a>, the returned JointWrench is about the joint frame.  The associated <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/6193273ed4a74ba64f7fd25b02c37c20896775a5/gazebo/physics/ode/ODEJoint_TEST.cc?at=force_torque_fix_1.6#cl-35\" rel=\"nofollow\">unit test</a> should reflect that, unless I've made some error in the code.  Please confirm.  Thanks.</p>", "type": "rendered"}, "created_on": "2013-04-15T20:13:29.105985+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 3756570}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3757036.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3757036"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": "To check if the frames are correct I would\n\ngive link3 an inertial offset of (0.5, 0.5, 0.5)\ncontrol joint2 to (-pi/4.0)\n\nAssuming that the wrench is in the joint frame immediately after rotation (we call it the after joint frame), the expected wrench is \n\nfx = 10.0 m/s^2 * 1kg * sin(-pi/4) = -7 N\nfy = 0.0 N\nfz = 10.0 m/s^2 * 1kg * sin(-pi/4) = -7N\ntx = 10.0 m/s^2 * 1kg * 0.5m * sin(-pi/4) = -3.5 Nm\nty = 0.0 Nm\ntz = 10.0 m/s^2 * 1kg * -0.5m * sin(-pi/4) = 3.5 Nm\n(double check these calculations)\n\nThis seems to match with what I'm getting when running my test case. The unit test can be reflected to include this.\n\nIt seems that the JointWrench.hh is wrong about the reference frame of the body2frame wrench. The wrench is in the joint frame immediately after rotation.\n\n\n\n\n```\n<link name=\"link3\">\n                <pose>2.0 0 2.0 0 0 0</pose>\n                <collision name=\"collision\">\n                    <pose>0.5 0 0.5 0 0 0</pose>\n                    <geometry>\n                        <box>\n                            <size>1 1 1</size>\n                        </box>\n                    </geometry>\n                </collision>\n                <visual name=\"visual\">\n                    <pose>0.5 0 0.5 0 0 0</pose>\n                    <geometry>\n                        <box>\n                            <size>1 1 1</size>\n                        </box>\n                    </geometry>\n                </visual>\n                <inertial>\n                    <mass>1.0</mass>\n                    <pose>0.5 0.5 0.5 0 0 0</pose>\n                    <inertia>\n                        <ixx>0.1</ixx>\n                        <iyy>0.1</iyy>\n                        <izz>0.1</izz>\n                        <ixy>0.1</ixy>\n                        <ixz>0.1</ixz>\n                        <iyz>0.1</iyz>\n                    </inertia>\n                </inertial>\n            </link>\n```", "markup": "markdown", "html": "<p>To check if the frames are correct I would</p>\n<p>give link3 an inertial offset of (0.5, 0.5, 0.5)\ncontrol joint2 to (-pi/4.0)</p>\n<p>Assuming that the wrench is in the joint frame immediately after rotation (we call it the after joint frame), the expected wrench is </p>\n<p>fx = 10.0 m/s^2 * 1kg * sin(-pi/4) = -7 N\nfy = 0.0 N\nfz = 10.0 m/s^2 * 1kg * sin(-pi/4) = -7N\ntx = 10.0 m/s^2 * 1kg * 0.5m * sin(-pi/4) = -3.5 Nm\nty = 0.0 Nm\ntz = 10.0 m/s^2 * 1kg * -0.5m * sin(-pi/4) = 3.5 Nm\n(double check these calculations)</p>\n<p>This seems to match with what I'm getting when running my test case. The unit test can be reflected to include this.</p>\n<p>It seems that the JointWrench.hh is wrong about the reference frame of the body2frame wrench. The wrench is in the joint frame immediately after rotation.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link3&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;pose&gt;</span>2.0 0 2.0 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;collision&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;pose&gt;</span>0.5 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                    <span class=\"nt\">&lt;geometry&gt;</span>\n                        <span class=\"nt\">&lt;box&gt;</span>\n                            <span class=\"nt\">&lt;size&gt;</span>1 1 1<span class=\"nt\">&lt;/size&gt;</span>\n                        <span class=\"nt\">&lt;/box&gt;</span>\n                    <span class=\"nt\">&lt;/geometry&gt;</span>\n                <span class=\"nt\">&lt;/collision&gt;</span>\n                <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;visual&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;pose&gt;</span>0.5 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                    <span class=\"nt\">&lt;geometry&gt;</span>\n                        <span class=\"nt\">&lt;box&gt;</span>\n                            <span class=\"nt\">&lt;size&gt;</span>1 1 1<span class=\"nt\">&lt;/size&gt;</span>\n                        <span class=\"nt\">&lt;/box&gt;</span>\n                    <span class=\"nt\">&lt;/geometry&gt;</span>\n                <span class=\"nt\">&lt;/visual&gt;</span>\n                <span class=\"nt\">&lt;inertial&gt;</span>\n                    <span class=\"nt\">&lt;mass&gt;</span>1.0<span class=\"nt\">&lt;/mass&gt;</span>\n                    <span class=\"nt\">&lt;pose&gt;</span>0.5 0.5 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n                    <span class=\"nt\">&lt;inertia&gt;</span>\n                        <span class=\"nt\">&lt;ixx&gt;</span>0.1<span class=\"nt\">&lt;/ixx&gt;</span>\n                        <span class=\"nt\">&lt;iyy&gt;</span>0.1<span class=\"nt\">&lt;/iyy&gt;</span>\n                        <span class=\"nt\">&lt;izz&gt;</span>0.1<span class=\"nt\">&lt;/izz&gt;</span>\n                        <span class=\"nt\">&lt;ixy&gt;</span>0.1<span class=\"nt\">&lt;/ixy&gt;</span>\n                        <span class=\"nt\">&lt;ixz&gt;</span>0.1<span class=\"nt\">&lt;/ixz&gt;</span>\n                        <span class=\"nt\">&lt;iyz&gt;</span>0.1<span class=\"nt\">&lt;/iyz&gt;</span>\n                    <span class=\"nt\">&lt;/inertia&gt;</span>\n                <span class=\"nt\">&lt;/inertial&gt;</span>\n            <span class=\"nt\">&lt;/link&gt;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2013-04-15T20:49:20.966173+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "updated_on": null, "type": "issue_comment", "id": 3757036}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3770257.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3770257"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": "Rotating the test model by 90 degrees showed that world frame and after-joint-frame where mixed up in the force torque calculation. \n\n```\n<model name=\"box\">\n            <pose>0 0 0 0 0 1.57</pose>\n```\n\nIn OdeJoint.cc the wrench due the joint forces is calculated in world frame:\n\n\n```\n#!c++\n// get force applied through SetForce\n    physics::JointWrench wrenchAppliedWorld;\n    if (this->HasType(physics::Base::HINGE_JOINT))\n    {\n      // rotate force into child link frame\n      wrenchAppliedWorld.body2Torque =\n        this->GetForce(0u) * this->GetGlobalAxis(0u);\n      wrenchAppliedWorld.body1Torque = -wrenchAppliedWorld.body2Torque;\n    }\n    else if (this->HasType(physics::Base::SLIDER_JOINT))\n    {\n      // rotate force into child link frame\n      this->GetGlobalAxis(0u);\n      wrenchAppliedWorld.body2Force =\n        this->GetForce(0u) * this->GetGlobalAxis(0u);\n      wrenchAppliedWorld.body1Force = -wrenchAppliedWorld.body2Force;\n    }\n    else\n    {\n      /// \\TODO: fix for multi-axis joints\n      gzerr << \"force torque for joint type [\" << this->GetType()\n            << \"] not implemented, returns false results!!\\n\";\n    }\n```\n\nThen added to the total wrench which is in the after-joint-frame\n\n```\n#!c++\n  wrench = wrench - wrenchAppliedWorld;\n  }\n  else\n  {\n    // forgot to set provide_feedback?\n    gzwarn << \"GetForceTorque: forget to set <provide_feedback>?\\n\";\n  }\n  return wrench;\n```\n\nUsing getLocalAxis seems to solve the frame issue\n\n```\n#!c++\n// get force applied through SetForce\n    physics::JointWrench wrenchAppliedLocal;\n    if (this->HasType(physics::Base::HINGE_JOINT))\n    {\n      // rotate force into child link frame\n      wrenchAppliedLocal.body2Torque =\n        this->GetForce(0u) * this->GetLocalAxis(0u);\n      wrenchAppliedLocal.body1Torque = -wrenchAppliedLocal.body2Torque;\n    }\n    else if (this->HasType(physics::Base::SLIDER_JOINT))\n    {\n      // rotate force into child link frame\n      wrenchAppliedLocal.body2Force =\n        this->GetForce(0u) * this->GetLocalAxis(0u);\n      wrenchAppliedLocal.body1Force = -wrenchAppliedLocal.body2Force;\n    }\n    else\n    {\n      /// \\TODO: fix for multi-axis joints\n      gzerr << \"force torque for joint type [\" << this->GetType()\n            << \"] not implemented, returns false results!!\\n\";\n    }\n```\n\nAnd then subtract the wrenchAppliedLocal from the wrench in the after-joint-frame.\n\n```\n#!c++\n  wrench = wrench - wrenchAppliedLocal;\n  }\n  else\n  {\n    // forgot to set provide_feedback?\n    gzwarn << \"GetForceTorque: forget to set <provide_feedback>?\\n\";\n  }\n  return wrench;\n```\n", "markup": "markdown", "html": "<p>Rotating the test model by 90 degrees showed that world frame and after-joint-frame where mixed up in the force torque calculation. </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;box&quot;</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;pose&gt;</span>0 0 0 0 0 1.57<span class=\"nt\">&lt;/pose&gt;</span>\n</pre></div>\n\n\n<p>In OdeJoint.cc the wrench due the joint forces is calculated in world frame:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"c1\">// get force applied through SetForce</span>\n    <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">JointWrench</span> <span class=\"n\">wrenchAppliedWorld</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">HasType</span><span class=\"p\">(</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">Base</span><span class=\"o\">::</span><span class=\"n\">HINGE_JOINT</span><span class=\"p\">))</span>\n    <span class=\"p\">{</span>\n      <span class=\"c1\">// rotate force into child link frame</span>\n      <span class=\"n\">wrenchAppliedWorld</span><span class=\"p\">.</span><span class=\"n\">body2Torque</span> <span class=\"o\">=</span>\n        <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetForce</span><span class=\"p\">(</span><span class=\"mi\">0u</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetGlobalAxis</span><span class=\"p\">(</span><span class=\"mi\">0u</span><span class=\"p\">);</span>\n      <span class=\"n\">wrenchAppliedWorld</span><span class=\"p\">.</span><span class=\"n\">body1Torque</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">wrenchAppliedWorld</span><span class=\"p\">.</span><span class=\"n\">body2Torque</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">HasType</span><span class=\"p\">(</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">Base</span><span class=\"o\">::</span><span class=\"n\">SLIDER_JOINT</span><span class=\"p\">))</span>\n    <span class=\"p\">{</span>\n      <span class=\"c1\">// rotate force into child link frame</span>\n      <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetGlobalAxis</span><span class=\"p\">(</span><span class=\"mi\">0u</span><span class=\"p\">);</span>\n      <span class=\"n\">wrenchAppliedWorld</span><span class=\"p\">.</span><span class=\"n\">body2Force</span> <span class=\"o\">=</span>\n        <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetForce</span><span class=\"p\">(</span><span class=\"mi\">0u</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetGlobalAxis</span><span class=\"p\">(</span><span class=\"mi\">0u</span><span class=\"p\">);</span>\n      <span class=\"n\">wrenchAppliedWorld</span><span class=\"p\">.</span><span class=\"n\">body1Force</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">wrenchAppliedWorld</span><span class=\"p\">.</span><span class=\"n\">body2Force</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span>\n    <span class=\"p\">{</span>\n      <span class=\"c1\">/// \\TODO: fix for multi-axis joints</span>\n      <span class=\"n\">gzerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;force torque for joint type [&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetType</span><span class=\"p\">()</span>\n            <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;] not implemented, returns false results!!</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Then added to the total wrench which is in the after-joint-frame</p>\n<div class=\"codehilite language-c++\"><pre><span></span>  <span class=\"n\">wrench</span> <span class=\"o\">=</span> <span class=\"n\">wrench</span> <span class=\"o\">-</span> <span class=\"n\">wrenchAppliedWorld</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">else</span>\n  <span class=\"p\">{</span>\n    <span class=\"c1\">// forgot to set provide_feedback?</span>\n    <span class=\"n\">gzwarn</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;GetForceTorque: forget to set &lt;provide_feedback&gt;?</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"n\">wrench</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p>Using getLocalAxis seems to solve the frame issue</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"c1\">// get force applied through SetForce</span>\n    <span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">JointWrench</span> <span class=\"n\">wrenchAppliedLocal</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">HasType</span><span class=\"p\">(</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">Base</span><span class=\"o\">::</span><span class=\"n\">HINGE_JOINT</span><span class=\"p\">))</span>\n    <span class=\"p\">{</span>\n      <span class=\"c1\">// rotate force into child link frame</span>\n      <span class=\"n\">wrenchAppliedLocal</span><span class=\"p\">.</span><span class=\"n\">body2Torque</span> <span class=\"o\">=</span>\n        <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetForce</span><span class=\"p\">(</span><span class=\"mi\">0u</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetLocalAxis</span><span class=\"p\">(</span><span class=\"mi\">0u</span><span class=\"p\">);</span>\n      <span class=\"n\">wrenchAppliedLocal</span><span class=\"p\">.</span><span class=\"n\">body1Torque</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">wrenchAppliedLocal</span><span class=\"p\">.</span><span class=\"n\">body2Torque</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">HasType</span><span class=\"p\">(</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">Base</span><span class=\"o\">::</span><span class=\"n\">SLIDER_JOINT</span><span class=\"p\">))</span>\n    <span class=\"p\">{</span>\n      <span class=\"c1\">// rotate force into child link frame</span>\n      <span class=\"n\">wrenchAppliedLocal</span><span class=\"p\">.</span><span class=\"n\">body2Force</span> <span class=\"o\">=</span>\n        <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetForce</span><span class=\"p\">(</span><span class=\"mi\">0u</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetLocalAxis</span><span class=\"p\">(</span><span class=\"mi\">0u</span><span class=\"p\">);</span>\n      <span class=\"n\">wrenchAppliedLocal</span><span class=\"p\">.</span><span class=\"n\">body1Force</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">wrenchAppliedLocal</span><span class=\"p\">.</span><span class=\"n\">body2Force</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span>\n    <span class=\"p\">{</span>\n      <span class=\"c1\">/// \\TODO: fix for multi-axis joints</span>\n      <span class=\"n\">gzerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;force torque for joint type [&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">GetType</span><span class=\"p\">()</span>\n            <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;] not implemented, returns false results!!</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>And then subtract the wrenchAppliedLocal from the wrench in the after-joint-frame.</p>\n<div class=\"codehilite language-c++\"><pre><span></span>  <span class=\"n\">wrench</span> <span class=\"o\">=</span> <span class=\"n\">wrench</span> <span class=\"o\">-</span> <span class=\"n\">wrenchAppliedLocal</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">else</span>\n  <span class=\"p\">{</span>\n    <span class=\"c1\">// forgot to set provide_feedback?</span>\n    <span class=\"n\">gzwarn</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;GetForceTorque: forget to set &lt;provide_feedback&gt;?</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"n\">wrench</span><span class=\"p\">;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2013-04-16T19:56:34.028395+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "updated_on": null, "type": "issue_comment", "id": 3770257}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3797326.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3797326"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": "@jespersmith,\n\nThank you for the test, I'll try to integrate it into existing gazebo unit test in `ODEJoint_TEST.cc`.  I am downgrading this issue as the fixes are in gazebo and en-route to release (e.g. [this pull request](https://bitbucket.org/osrf/gazebo/pull-request/459/minor-tweaks-to-force-torque-sensor-test/diff)).\n\n-John", "markup": "markdown", "html": "<p>@jespersmith,</p>\n<p>Thank you for the test, I'll try to integrate it into existing gazebo unit test in <code>ODEJoint_TEST.cc</code>.  I am downgrading this issue as the fixes are in gazebo and en-route to release (e.g. <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-request/459/minor-tweaks-to-force-torque-sensor-test/diff\" rel=\"nofollow\">this pull request</a>).</p>\n<p>-John</p>", "type": "rendered"}, "created_on": "2013-04-18T18:32:29.307216+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 3797326}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3797332.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3797332"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2013-04-18T18:32:47.552739+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 3797332}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3797541.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3797541"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": "Marked as blocker again. The pull request doesn't solve world vs local frame for WrenchAppliedLocal", "markup": "markdown", "html": "<p>Marked as blocker again. The pull request doesn't solve world vs local frame for WrenchAppliedLocal</p>", "type": "rendered"}, "created_on": "2013-04-18T18:49:08.494002+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "updated_on": "2013-04-18T18:49:49.773334+00:00", "type": "issue_comment", "id": 3797541}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3924339.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3924339"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": "Hi @jespersmith,\nplease see [gazebo pull request #495](https://bitbucket.org/osrf/gazebo/pull-request/495/drcsim-issue-193-force-torque-sensor/diff).\nThanks,\nJohn", "markup": "markdown", "html": "<p>Hi @jespersmith,\nplease see <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-request/495/drcsim-issue-193-force-torque-sensor/diff\" rel=\"nofollow\">gazebo pull request #495</a>.\nThanks,\nJohn</p>", "type": "rendered"}, "created_on": "2013-04-30T21:40:30.570432+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 3924339}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3931364.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3931364"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": "Looks good, thanks for the fix!\n\n- Jesper", "markup": "markdown", "html": "<p>Looks good, thanks for the fix!</p>\n<ul>\n<li>Jesper</li>\n</ul>", "type": "rendered"}, "created_on": "2013-05-01T15:59:13.798642+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "updated_on": null, "type": "issue_comment", "id": 3931364}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3931386.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3931386"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": "If things look ok, please mark this issue resolved.  Thanks.\n", "markup": "markdown", "html": "<p>If things look ok, please mark this issue resolved.  Thanks.</p>", "type": "rendered"}, "created_on": "2013-05-01T16:02:15.509115+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 3931386}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193/comments/3935633.json"}, "html": {"href": "#!/osrf/drcsim/issues/193#comment-3935633"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}}, "type": "issue", "id": 193, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2013-05-02T01:58:18.265805+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 3935633}], "page": 1, "size": 14}