{"priority": "blocker", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "links": {"attachments": {"href": "data/repositories/osrf/drcsim/issues/193/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/drcsim/issues/193.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/issues/193/watch"}, "comments": {"href": "data/repositories/osrf/drcsim/issues/193/comments_page=1.json"}, "html": {"href": "#!/osrf/drcsim/issues/193/force-torque-sensor-does-not-give-correct"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/issues/193/vote"}}, "reporter": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "title": "Force Torque sensor does not give correct results for torque and is extremely noisy", "component": null, "votes": 0, "watches": 2, "content": {"raw": "During testing of the wrist torque/force sensor we found that the resulting torques where not correct. We implemented a simple test consisting of three boxes connected by a revolute joint around the Y-axis, weight 100kg,  5kg and 1kg. We control all joints to zero angles using a simple PD controller. See image [torqueSensorTestWorld.png] and the world file [testWorld.world].\r\n\r\nWe set the <provide_feedback> to true in both joints (joint1 and joint2) and measured the wrench on the second box with \r\n\r\n\r\n```\r\n#!c++\r\nphysics::JointPtr sensor = model->GetJoint(\"joint1\");\r\n\r\ngazebo::physics::JointWrench wrench = sensor->GetForceTorque((unsigned int) 0);\r\nrobotStateForce->set_fx(wrench.body2Force.x);\r\nrobotStateForce->set_fy(wrench.body2Force.y);\r\nrobotStateForce->set_fz(wrench.body2Force.z);\r\n\r\nrobotStateForce->set_tx(wrench.body2Torque.x);\r\nrobotStateForce->set_ty(wrench.body2Torque.y);\r\nrobotStateForce->set_tz(wrench.body2Torque.z);\r\n\r\n```\r\n\r\nAt t = 17s we dropped a drill on top of the top box. Because the torque sensors are really noisy, even at iter=1500 and dt=0.0001, we added a 1Hz lowpass filter to the data. \r\n\r\nWe plotted the torque part of the wrench in [Joint1WrenchTorque.png]. For comparison, we added the joint torque. The wrench is measured in the Center of Mass frame of box2 (middle box), so we expect the wrench around the Y axis to be at least 10 Nm due box3 (1kg * 9.81 m/s^2 * 1m), however it is zero all the time. For comparison, we also plotted the torque around joint 1.  The torque around the X and Z axis is expected to be around zero, but change erratically when we dropped the drill on box3.\r\n\r\nThe force part of the wrench is plotted in [Joint1WrenchForce.png], and this seems to be correct (force in the z direction is about 60N).\r\n\r\nEven if the torque data where correct, it is extremely noisy especially when the links are in contact.", "markup": "markdown", "html": "<p>During testing of the wrist torque/force sensor we found that the resulting torques where not correct. We implemented a simple test consisting of three boxes connected by a revolute joint around the Y-axis, weight 100kg,  5kg and 1kg. We control all joints to zero angles using a simple PD controller. See image [torqueSensorTestWorld.png] and the world file [testWorld.world].</p>\n<p>We set the &lt;provide_feedback&gt; to true in both joints (joint1 and joint2) and measured the wrench on the second box with </p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">JointPtr</span> <span class=\"n\">sensor</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">-&gt;</span><span class=\"n\">GetJoint</span><span class=\"p\">(</span><span class=\"s\">&quot;joint1&quot;</span><span class=\"p\">);</span>\n\n<span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">JointWrench</span> <span class=\"n\">wrench</span> <span class=\"o\">=</span> <span class=\"n\">sensor</span><span class=\"o\">-&gt;</span><span class=\"n\">GetForceTorque</span><span class=\"p\">((</span><span class=\"kt\">unsigned</span> <span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"n\">robotStateForce</span><span class=\"o\">-&gt;</span><span class=\"n\">set_fx</span><span class=\"p\">(</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body2Force</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"n\">robotStateForce</span><span class=\"o\">-&gt;</span><span class=\"n\">set_fy</span><span class=\"p\">(</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body2Force</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">);</span>\n<span class=\"n\">robotStateForce</span><span class=\"o\">-&gt;</span><span class=\"n\">set_fz</span><span class=\"p\">(</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body2Force</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"p\">);</span>\n\n<span class=\"n\">robotStateForce</span><span class=\"o\">-&gt;</span><span class=\"n\">set_tx</span><span class=\"p\">(</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body2Torque</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"n\">robotStateForce</span><span class=\"o\">-&gt;</span><span class=\"n\">set_ty</span><span class=\"p\">(</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body2Torque</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">);</span>\n<span class=\"n\">robotStateForce</span><span class=\"o\">-&gt;</span><span class=\"n\">set_tz</span><span class=\"p\">(</span><span class=\"n\">wrench</span><span class=\"p\">.</span><span class=\"n\">body2Torque</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>At t = 17s we dropped a drill on top of the top box. Because the torque sensors are really noisy, even at iter=1500 and dt=0.0001, we added a 1Hz lowpass filter to the data. </p>\n<p>We plotted the torque part of the wrench in [Joint1WrenchTorque.png]. For comparison, we added the joint torque. The wrench is measured in the Center of Mass frame of box2 (middle box), so we expect the wrench around the Y axis to be at least 10 Nm due box3 (1kg * 9.81 m/s^2 * 1m), however it is zero all the time. For comparison, we also plotted the torque around joint 1.  The torque around the X and Z axis is expected to be around zero, but change erratically when we dropped the drill on box3.</p>\n<p>The force part of the wrench is plotted in [Joint1WrenchForce.png], and this seems to be correct (force in the z direction is about 60N).</p>\n<p>Even if the torque data where correct, it is extremely noisy especially when the links are in contact.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2013-04-11T20:33:16.116855+00:00", "milestone": null, "updated_on": "2013-05-02T01:58:18.219646+00:00", "type": "issue", "id": 193}