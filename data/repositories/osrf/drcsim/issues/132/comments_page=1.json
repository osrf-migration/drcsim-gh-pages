{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132/comments/3148025.json"}, "html": {"href": "#!/osrf/drcsim/issues/132#comment-3148025"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132.json"}}, "type": "issue", "id": 132, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "joint command message not interpreted properly"}, "content": {"raw": "Actually I was going to open a ticket proposing to remove the \"name\" field given that it's not being used and only adds a ton of network traffic on top of it. /atlas/joint_states consumes ~1MB/s - more than 25% of which (~0.26MB/s) is due to the name strings being sent. \n\nThe two sandia hands together are an additional ~0.960MB/s of which ~0.25MB/s is consumed for sending string identifiers.\n\nSo the network is loaded with an **additional 0.51MB/s** that aren't even used anywhere. And this only considers the traffic COMING from the robot, so assuming an external controller rate of 500HZ you have a total of  **0.765MB/s spent on just names**.\n\nEven if there is a need for providing identifiers for each joint in order to support random ordering then a more memory efficient solution would be much more efficient - there is no need for using strings other than for the user being able to read the full name while echoing messages (after getting used to the cryptic naming scheme).\n\nThe Atlas Plugin requires the whole joint message to be filled (e.g. when you only send a command for one joint it gets ignored) so having the \"names\" field is redundant.\n\nIs there any need for filling the joint state message in random order? If not then it would probably be better to drop those >0.5MB/s and reduce network traffic (and possibly enable a higher controller frequency?).\nAnd even if there is a need for random ordering then the name field should be reduced to use 1 char per joint identifier instead of 9.4 on average.", "markup": "markdown", "html": "<p>Actually I was going to open a ticket proposing to remove the \"name\" field given that it's not being used and only adds a ton of network traffic on top of it. /atlas/joint_states consumes ~1MB/s - more than 25% of which (~0.26MB/s) is due to the name strings being sent. </p>\n<p>The two sandia hands together are an additional ~0.960MB/s of which ~0.25MB/s is consumed for sending string identifiers.</p>\n<p>So the network is loaded with an <strong>additional 0.51MB/s</strong> that aren't even used anywhere. And this only considers the traffic COMING from the robot, so assuming an external controller rate of 500HZ you have a total of  <strong>0.765MB/s spent on just names</strong>.</p>\n<p>Even if there is a need for providing identifiers for each joint in order to support random ordering then a more memory efficient solution would be much more efficient - there is no need for using strings other than for the user being able to read the full name while echoing messages (after getting used to the cryptic naming scheme).</p>\n<p>The Atlas Plugin requires the whole joint message to be filled (e.g. when you only send a command for one joint it gets ignored) so having the \"names\" field is redundant.</p>\n<p>Is there any need for filling the joint state message in random order? If not then it would probably be better to drop those &gt;0.5MB/s and reduce network traffic (and possibly enable a higher controller frequency?).\nAnd even if there is a need for random ordering then the name field should be reduced to use 1 char per joint identifier instead of 9.4 on average.</p>", "type": "rendered"}, "created_on": "2013-02-15T19:41:50.172954+00:00", "user": {"display_name": "Thomas Koletschka", "uuid": "{b33092ac-6376-48d1-9803-d9e6de445d1a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D"}, "html": {"href": "https://bitbucket.org/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomasko/avatar/"}}, "nickname": "thomasko", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 3148025}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132/comments/3170988.json"}, "html": {"href": "#!/osrf/drcsim/issues/132#comment-3170988"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132.json"}}, "type": "issue", "id": 132, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "joint command message not interpreted properly"}, "content": {"raw": "I understand where your coming from Thomas. My opinion is that there is no API for what should be in the joint command message - in terms of ordering of joint angles.\nWhat about sending subsets of joints?\n\nAny message definition should be transparent and obvious. Having an anonymous vector of 60 joint values would make it difficult to spot errors - and make debugging from log files impossible.\n\nSo I'd be against removing joint-to-name indentifiers unless the additional 1MB/s was determental.\n\nA possible intermediate would be an enumerated e.g for the GPS message in ROS:\n$ rosmsg show  sensor_msgs/NavSatStatus \n\n\n```\n#!c++\n\nint8 STATUS_NO_FIX=-1\nint8 STATUS_FIX=0\nint8 STATUS_SBAS_FIX=1\nint8 STATUS_GBAS_FIX=2\nuint16 SERVICE_GPS=1\nuint16 SERVICE_GLONASS=2\nuint16 SERVICE_COMPASS=4\nuint16 SERVICE_GALILEO=8\nint8 status\nuint16 service\n\n```\n\n", "markup": "markdown", "html": "<p>I understand where your coming from Thomas. My opinion is that there is no API for what should be in the joint command message - in terms of ordering of joint angles.\nWhat about sending subsets of joints?</p>\n<p>Any message definition should be transparent and obvious. Having an anonymous vector of 60 joint values would make it difficult to spot errors - and make debugging from log files impossible.</p>\n<p>So I'd be against removing joint-to-name indentifiers unless the additional 1MB/s was determental.</p>\n<p>A possible intermediate would be an enumerated e.g for the GPS message in ROS:\n$ rosmsg show  sensor_msgs/NavSatStatus </p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">int8</span> <span class=\"n\">STATUS_NO_FIX</span><span class=\"o\">=-</span><span class=\"mi\">1</span>\n<span class=\"n\">int8</span> <span class=\"n\">STATUS_FIX</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"n\">int8</span> <span class=\"n\">STATUS_SBAS_FIX</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n<span class=\"n\">int8</span> <span class=\"n\">STATUS_GBAS_FIX</span><span class=\"o\">=</span><span class=\"mi\">2</span>\n<span class=\"n\">uint16</span> <span class=\"n\">SERVICE_GPS</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n<span class=\"n\">uint16</span> <span class=\"n\">SERVICE_GLONASS</span><span class=\"o\">=</span><span class=\"mi\">2</span>\n<span class=\"n\">uint16</span> <span class=\"n\">SERVICE_COMPASS</span><span class=\"o\">=</span><span class=\"mi\">4</span>\n<span class=\"n\">uint16</span> <span class=\"n\">SERVICE_GALILEO</span><span class=\"o\">=</span><span class=\"mi\">8</span>\n<span class=\"n\">int8</span> <span class=\"n\">status</span>\n<span class=\"n\">uint16</span> <span class=\"n\">service</span>\n</pre></div>", "type": "rendered"}, "created_on": "2013-02-18T20:07:17.884182+00:00", "user": {"display_name": "Maurice Fallon", "uuid": "{8bca6a99-adab-444a-b7f0-81660c79adfb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8bca6a99-adab-444a-b7f0-81660c79adfb%7D"}, "html": {"href": "https://bitbucket.org/%7B8bca6a99-adab-444a-b7f0-81660c79adfb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/abb08cebf2b2b2fb3ae3f65fde4d36c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMF-4.png"}}, "nickname": "mauricefallon", "type": "user", "account_id": "557058:82a58458-5b27-457e-8e75-da6e16d4e3df"}, "updated_on": "2013-02-18T20:07:55.447667+00:00", "type": "issue_comment", "id": 3170988}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132/comments/3171198.json"}, "html": {"href": "#!/osrf/drcsim/issues/132#comment-3171198"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132.json"}}, "type": "issue", "id": 132, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "joint command message not interpreted properly"}, "content": {"raw": "\"What about sending subsets of joints?\"\nThat's not supported by the current API, so the strings are currently only included for human use. ;)\n\nRegarding identifiers, the current string identifiers aren't much more descriptive than numbers (numbers might even be easier if they're ordered in a way that makes sense), so yea I'd go for an enumerated list if missing identifiers for a fixed-size, fixed-order vector is a concern (unless this gets changed to variable-size and/or variable-order vector then it's a requirement).\n\nNot sure whether this has any improvements for possible rates of external controllers but can't hurt and might even improve readability ... maybe it's just me but I still fail to map some of those cryptic string names correctly at times.", "markup": "markdown", "html": "<p>\"What about sending subsets of joints?\"\nThat's not supported by the current API, so the strings are currently only included for human use. ;)</p>\n<p>Regarding identifiers, the current string identifiers aren't much more descriptive than numbers (numbers might even be easier if they're ordered in a way that makes sense), so yea I'd go for an enumerated list if missing identifiers for a fixed-size, fixed-order vector is a concern (unless this gets changed to variable-size and/or variable-order vector then it's a requirement).</p>\n<p>Not sure whether this has any improvements for possible rates of external controllers but can't hurt and might even improve readability ... maybe it's just me but I still fail to map some of those cryptic string names correctly at times.</p>", "type": "rendered"}, "created_on": "2013-02-18T20:32:37.746159+00:00", "user": {"display_name": "Thomas Koletschka", "uuid": "{b33092ac-6376-48d1-9803-d9e6de445d1a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D"}, "html": {"href": "https://bitbucket.org/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomasko/avatar/"}}, "nickname": "thomasko", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 3171198}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132/comments/3252036.json"}, "html": {"href": "#!/osrf/drcsim/issues/132#comment-3252036"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132.json"}}, "type": "issue", "id": 132, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "joint command message not interpreted properly"}, "content": {"raw": "This is an open topic pending more testing on communication speeds on the cloud machines.   For now, please develop against joint commands with exactly 28 elements in arrays within [JointCommands.msg](#!/osrf/osrf-common/src/68a4f8258eac96042db21a3959c667821192d7b1/ros/osrf_msgs/msg/JointCommands.msg?at=default) messages, adhering strictly to the ordered joint list exactly as shown below:\n\n~~~\nback_lbz  = 0\nback_mby  = 1\nback_ubx  = 2\nneck_ay   = 3\nl_leg_uhz = 4\nl_leg_mhx = 5\nl_leg_lhy = 6\nl_leg_kny = 7\nl_leg_uay = 8\nl_leg_lax = 9\nr_leg_uhz = 10\nr_leg_mhx = 11\nr_leg_lhy = 12\nr_leg_kny = 13\nr_leg_uay = 14\nr_leg_lax = 15\nl_arm_usy = 16\nl_arm_shx = 17\nl_arm_ely = 18\nl_arm_elx = 19\nl_arm_uwy = 20\nl_arm_mwx = 21\nr_arm_usy = 22\nr_arm_shx = 23\nr_arm_ely = 24\nr_arm_elx = 25\nr_arm_uwy = 26\nr_arm_mwx = 27\n~~~\n\n`JointCommands.name` fields will not be used at all until further update.\n\nNote it is ok to leave arrays empty (e.g. you should probably leave the name array empty for now).  Any array in the `JointCommands` message left empty will be treated as \"use the last available set of values\".\n\nIf name mapping efficiency is not an issue, we may add the name mapping feature in subsequent releases.\n\nAlso, as suggested, we can add an `int32[] index` array and an enum list mapping joint names to id's\n\n~~~\nint32 back_lbz  = 0\nint32 back_mby  = 1\nint32 back_ubx  = 2\nint32 neck_ay   = 3\nint32 l_leg_uhz = 4\nint32 l_leg_mhx = 5\nint32 l_leg_lhy = 6\nint32 l_leg_kny = 7\nint32 l_leg_uay = 8\nint32 l_leg_lax = 9\nint32 r_leg_uhz = 10\nint32 r_leg_mhx = 11\nint32 r_leg_lhy = 12\nint32 r_leg_kny = 13\nint32 r_leg_uay = 14\nint32 r_leg_lax = 15\nint32 l_arm_usy = 16\nint32 l_arm_shx = 17\nint32 l_arm_ely = 18\nint32 l_arm_elx = 19\nint32 l_arm_uwy = 20\nint32 l_arm_mwx = 21\nint32 r_arm_usy = 22\nint32 r_arm_shx = 23\nint32 r_arm_ely = 24\nint32 r_arm_elx = 25\nint32 r_arm_uwy = 26\nint32 r_arm_mwx = 27\n~~~\n\n", "markup": "markdown", "html": "<p>This is an open topic pending more testing on communication speeds on the cloud machines.   For now, please develop against joint commands with exactly 28 elements in arrays within <a data-is-external-link=\"true\" href=\"#!/osrf/osrf-common/src/68a4f8258eac96042db21a3959c667821192d7b1/ros/osrf_msgs/msg/JointCommands.msg?at=default\" rel=\"nofollow\">JointCommands.msg</a> messages, adhering strictly to the ordered joint list exactly as shown below:</p>\n<div class=\"codehilite\"><pre><span></span>back_lbz  = 0\nback_mby  = 1\nback_ubx  = 2\nneck_ay   = 3\nl_leg_uhz = 4\nl_leg_mhx = 5\nl_leg_lhy = 6\nl_leg_kny = 7\nl_leg_uay = 8\nl_leg_lax = 9\nr_leg_uhz = 10\nr_leg_mhx = 11\nr_leg_lhy = 12\nr_leg_kny = 13\nr_leg_uay = 14\nr_leg_lax = 15\nl_arm_usy = 16\nl_arm_shx = 17\nl_arm_ely = 18\nl_arm_elx = 19\nl_arm_uwy = 20\nl_arm_mwx = 21\nr_arm_usy = 22\nr_arm_shx = 23\nr_arm_ely = 24\nr_arm_elx = 25\nr_arm_uwy = 26\nr_arm_mwx = 27\n</pre></div>\n\n\n<p><code>JointCommands.name</code> fields will not be used at all until further update.</p>\n<p>Note it is ok to leave arrays empty (e.g. you should probably leave the name array empty for now).  Any array in the <code>JointCommands</code> message left empty will be treated as \"use the last available set of values\".</p>\n<p>If name mapping efficiency is not an issue, we may add the name mapping feature in subsequent releases.</p>\n<p>Also, as suggested, we can add an <code>int32[] index</code> array and an enum list mapping joint names to id's</p>\n<div class=\"codehilite\"><pre><span></span>int32 back_lbz  = 0\nint32 back_mby  = 1\nint32 back_ubx  = 2\nint32 neck_ay   = 3\nint32 l_leg_uhz = 4\nint32 l_leg_mhx = 5\nint32 l_leg_lhy = 6\nint32 l_leg_kny = 7\nint32 l_leg_uay = 8\nint32 l_leg_lax = 9\nint32 r_leg_uhz = 10\nint32 r_leg_mhx = 11\nint32 r_leg_lhy = 12\nint32 r_leg_kny = 13\nint32 r_leg_uay = 14\nint32 r_leg_lax = 15\nint32 l_arm_usy = 16\nint32 l_arm_shx = 17\nint32 l_arm_ely = 18\nint32 l_arm_elx = 19\nint32 l_arm_uwy = 20\nint32 l_arm_mwx = 21\nint32 r_arm_usy = 22\nint32 r_arm_shx = 23\nint32 r_arm_ely = 24\nint32 r_arm_elx = 25\nint32 r_arm_uwy = 26\nint32 r_arm_mwx = 27\n</pre></div>", "type": "rendered"}, "created_on": "2013-02-27T00:38:24.305759+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 3252036}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132/comments/3252161.json"}, "html": {"href": "#!/osrf/drcsim/issues/132#comment-3252161"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132.json"}}, "type": "issue", "id": 132, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "joint command message not interpreted properly"}, "content": {"raw": "Do these changes also apply to the hands?", "markup": "markdown", "html": "<p>Do these changes also apply to the hands?</p>", "type": "rendered"}, "created_on": "2013-02-27T00:55:14.608485+00:00", "user": {"display_name": "Thomas Koletschka", "uuid": "{b33092ac-6376-48d1-9803-d9e6de445d1a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D"}, "html": {"href": "https://bitbucket.org/%7Bb33092ac-6376-48d1-9803-d9e6de445d1a%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomasko/avatar/"}}, "nickname": "thomasko", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 3252161}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132/comments/3286524.json"}, "html": {"href": "#!/osrf/drcsim/issues/132#comment-3286524"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132.json"}}, "type": "issue", "id": 132, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "joint command message not interpreted properly"}, "content": {"raw": "@thomasko  Probably not, since synchronized dynamic control for the hand is not as critical, unless proven otherwise.", "markup": "markdown", "html": "<p>@thomasko  Probably not, since synchronized dynamic control for the hand is not as critical, unless proven otherwise.</p>", "type": "rendered"}, "created_on": "2013-03-02T03:49:07.100491+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 3286524}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132/comments/3599983.json"}, "html": {"href": "#!/osrf/drcsim/issues/132#comment-3599983"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132.json"}}, "type": "issue", "id": 132, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "joint command message not interpreted properly"}, "content": {"raw": "Please note that per pull request #169, the new recommended way to closing the control loop on Atlas is through UDP on topics:\n\n[/atlas/atlas_state](#!/osrf/drcsim/src/5b79db87db77437f5c34e514fe2376cdf72afb61/ros/atlas_msgs/msg/AtlasState.msg?at=udp_tweak)\nand [/atlas/atlas_command](#!/osrf/drcsim/src/5b79db87db77437f5c34e514fe2376cdf72afb61/ros/atlas_msgs/msg/AtlasCommand.msg?at=udp_tweak).\n\nBoth of these messages are designed so they are UDP friendly (< 1500 Bytes) and note that the `name` string array is not present, instead an enum list is provided in the state message definition.\n\nAt the same time, closing the loop through:\n\n[/atlas/joint_states](http://ros.org/doc/api/sensor_msgs/html/msg/JointState.html)\nand [/atlas/joint_commands](#!/osrf/osrf-common/src/ff62f2b63df4d179801ac8ceca260389b8a56ab9/ros/osrf_msgs/msg/JointCommands.msg?at=default)\n\nshould switch to TCP and should be deprecated, as it is not safe to fragment these larger messages, causing ROS to hang after displaying TCPROS errors occasionally.\n", "markup": "markdown", "html": "<p>Please note that per <a href=\"#!/osrf/drcsim/pull-requests/169/add-atlas-atlas_command-and-atlas\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #169</a>, the new recommended way to closing the control loop on Atlas is through UDP on topics:</p>\n<p><a data-is-external-link=\"true\" href=\"#!/osrf/drcsim/src/5b79db87db77437f5c34e514fe2376cdf72afb61/ros/atlas_msgs/msg/AtlasState.msg?at=udp_tweak\" rel=\"nofollow\">/atlas/atlas_state</a>\nand <a data-is-external-link=\"true\" href=\"#!/osrf/drcsim/src/5b79db87db77437f5c34e514fe2376cdf72afb61/ros/atlas_msgs/msg/AtlasCommand.msg?at=udp_tweak\" rel=\"nofollow\">/atlas/atlas_command</a>.</p>\n<p>Both of these messages are designed so they are UDP friendly (&lt; 1500 Bytes) and note that the <code>name</code> string array is not present, instead an enum list is provided in the state message definition.</p>\n<p>At the same time, closing the loop through:</p>\n<p><a data-is-external-link=\"true\" href=\"http://ros.org/doc/api/sensor_msgs/html/msg/JointState.html\" rel=\"nofollow\">/atlas/joint_states</a>\nand <a data-is-external-link=\"true\" href=\"#!/osrf/osrf-common/src/ff62f2b63df4d179801ac8ceca260389b8a56ab9/ros/osrf_msgs/msg/JointCommands.msg?at=default\" rel=\"nofollow\">/atlas/joint_commands</a></p>\n<p>should switch to TCP and should be deprecated, as it is not safe to fragment these larger messages, causing ROS to hang after displaying TCPROS errors occasionally.</p>", "type": "rendered"}, "created_on": "2013-04-03T00:42:15.933960+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 3599983}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132/comments/3704384.json"}, "html": {"href": "#!/osrf/drcsim/issues/132#comment-3704384"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132.json"}}, "type": "issue", "id": 132, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "joint command message not interpreted properly"}, "content": {"raw": "pull request #169", "markup": "markdown", "html": "<p><a href=\"#!/osrf/drcsim/pull-requests/169/add-atlas-atlas_command-and-atlas\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #169</a></p>", "type": "rendered"}, "created_on": "2013-04-11T02:58:42.901858+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": null, "type": "issue_comment", "id": 3704384}], "page": 1, "size": 8}