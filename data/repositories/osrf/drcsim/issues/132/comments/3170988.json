{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132/comments/3170988.json"}, "html": {"href": "#!/osrf/drcsim/issues/132#comment-3170988"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/132.json"}}, "type": "issue", "id": 132, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "joint command message not interpreted properly"}, "content": {"raw": "I understand where your coming from Thomas. My opinion is that there is no API for what should be in the joint command message - in terms of ordering of joint angles.\nWhat about sending subsets of joints?\n\nAny message definition should be transparent and obvious. Having an anonymous vector of 60 joint values would make it difficult to spot errors - and make debugging from log files impossible.\n\nSo I'd be against removing joint-to-name indentifiers unless the additional 1MB/s was determental.\n\nA possible intermediate would be an enumerated e.g for the GPS message in ROS:\n$ rosmsg show  sensor_msgs/NavSatStatus \n\n\n```\n#!c++\n\nint8 STATUS_NO_FIX=-1\nint8 STATUS_FIX=0\nint8 STATUS_SBAS_FIX=1\nint8 STATUS_GBAS_FIX=2\nuint16 SERVICE_GPS=1\nuint16 SERVICE_GLONASS=2\nuint16 SERVICE_COMPASS=4\nuint16 SERVICE_GALILEO=8\nint8 status\nuint16 service\n\n```\n\n", "markup": "markdown", "html": "<p>I understand where your coming from Thomas. My opinion is that there is no API for what should be in the joint command message - in terms of ordering of joint angles.\nWhat about sending subsets of joints?</p>\n<p>Any message definition should be transparent and obvious. Having an anonymous vector of 60 joint values would make it difficult to spot errors - and make debugging from log files impossible.</p>\n<p>So I'd be against removing joint-to-name indentifiers unless the additional 1MB/s was determental.</p>\n<p>A possible intermediate would be an enumerated e.g for the GPS message in ROS:\n$ rosmsg show  sensor_msgs/NavSatStatus </p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">int8</span> <span class=\"n\">STATUS_NO_FIX</span><span class=\"o\">=-</span><span class=\"mi\">1</span>\n<span class=\"n\">int8</span> <span class=\"n\">STATUS_FIX</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"n\">int8</span> <span class=\"n\">STATUS_SBAS_FIX</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n<span class=\"n\">int8</span> <span class=\"n\">STATUS_GBAS_FIX</span><span class=\"o\">=</span><span class=\"mi\">2</span>\n<span class=\"n\">uint16</span> <span class=\"n\">SERVICE_GPS</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n<span class=\"n\">uint16</span> <span class=\"n\">SERVICE_GLONASS</span><span class=\"o\">=</span><span class=\"mi\">2</span>\n<span class=\"n\">uint16</span> <span class=\"n\">SERVICE_COMPASS</span><span class=\"o\">=</span><span class=\"mi\">4</span>\n<span class=\"n\">uint16</span> <span class=\"n\">SERVICE_GALILEO</span><span class=\"o\">=</span><span class=\"mi\">8</span>\n<span class=\"n\">int8</span> <span class=\"n\">status</span>\n<span class=\"n\">uint16</span> <span class=\"n\">service</span>\n</pre></div>", "type": "rendered"}, "created_on": "2013-02-18T20:07:17.884182+00:00", "user": {"display_name": "Maurice Fallon", "uuid": "{8bca6a99-adab-444a-b7f0-81660c79adfb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8bca6a99-adab-444a-b7f0-81660c79adfb%7D"}, "html": {"href": "https://bitbucket.org/%7B8bca6a99-adab-444a-b7f0-81660c79adfb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/abb08cebf2b2b2fb3ae3f65fde4d36c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMF-4.png"}}, "nickname": "mauricefallon", "type": "user", "account_id": "557058:82a58458-5b27-457e-8e75-da6e16d4e3df"}, "updated_on": "2013-02-18T20:07:55.447667+00:00", "type": "issue_comment", "id": 3170988}