{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/127/comments/3129902.json"}, "html": {"href": "#!/osrf/drcsim/issues/127#comment-3129902"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/127.json"}}, "type": "issue", "id": 127, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Bad joint_states when in Nominal mode"}, "content": {"raw": "Thanks for opening this Thomas.  Between the DRC forums, Gazebo Answers, and this, it's hard to keep track of all the places I should be looking for answers to problems.\n\nI think I figured out the root cause of this.  It looks like the neck (at least -- that's what I've been using to easily find and reproduce errors) requires a constant Force of around 1.1 to remain \"stable\" in Nominal mode.  So when Atlas becomes unpinned, it starts with the neck at 0 and the setpoint at 0.  Because this results in no force, the neck quickly starts moving negatively (weird since I would think the head would be front heavy) until it stablizes around -0.05 radian with a constant force around 1.1 trying to push it back to 0.\n\nIf then, one sends a joint_command to the neck to go to -0.05 (let's say we are running a continuous controller that tries to keep the neck still), then the position error immediately goes to 0 from 0.05, the derivative goes really largely low, which causes the head to move even further into negative territory.  Where again, it settles with a force around 1.1-1.2 which another -0.05 offset (head now at -.1 with set point at -0.05).  \n\nIn theory, this steady-state offset can be overcome by the integral controller.  However, having to tune the full PID in Nominal mode is nearly impossible, as the robot falls anytime a bad paramter is given.  If we do have to tune all PID parameters because of steady state offset, then at least the \"pinned mode\" have similar steady state offset issues so that we can tune controllers that way.\n\nAdditionally, because of this difference in Nominal versus pinned offset, then there is always a \"catchup\" period once the robot unpins where the users' controllers have to integrate error over time in order to push the joints back to the original 0 set points.\n\nTomorrow I will investigate to see if joints other than neck have noticable differences between pinned and nominal/unpinned joint states.", "markup": "markdown", "html": "<p>Thanks for opening this Thomas.  Between the DRC forums, Gazebo Answers, and this, it's hard to keep track of all the places I should be looking for answers to problems.</p>\n<p>I think I figured out the root cause of this.  It looks like the neck (at least -- that's what I've been using to easily find and reproduce errors) requires a constant Force of around 1.1 to remain \"stable\" in Nominal mode.  So when Atlas becomes unpinned, it starts with the neck at 0 and the setpoint at 0.  Because this results in no force, the neck quickly starts moving negatively (weird since I would think the head would be front heavy) until it stablizes around -0.05 radian with a constant force around 1.1 trying to push it back to 0.</p>\n<p>If then, one sends a joint_command to the neck to go to -0.05 (let's say we are running a continuous controller that tries to keep the neck still), then the position error immediately goes to 0 from 0.05, the derivative goes really largely low, which causes the head to move even further into negative territory.  Where again, it settles with a force around 1.1-1.2 which another -0.05 offset (head now at -.1 with set point at -0.05).  </p>\n<p>In theory, this steady-state offset can be overcome by the integral controller.  However, having to tune the full PID in Nominal mode is nearly impossible, as the robot falls anytime a bad paramter is given.  If we do have to tune all PID parameters because of steady state offset, then at least the \"pinned mode\" have similar steady state offset issues so that we can tune controllers that way.</p>\n<p>Additionally, because of this difference in Nominal versus pinned offset, then there is always a \"catchup\" period once the robot unpins where the users' controllers have to integrate error over time in order to push the joints back to the original 0 set points.</p>\n<p>Tomorrow I will investigate to see if joints other than neck have noticable differences between pinned and nominal/unpinned joint states.</p>", "type": "rendered"}, "created_on": "2013-02-13T23:47:03.914509+00:00", "user": {"display_name": "Patrick Beeson", "uuid": "{d33f061a-d3c9-4b15-96cc-d08b463d97c6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd33f061a-d3c9-4b15-96cc-d08b463d97c6%7D"}, "html": {"href": "https://bitbucket.org/%7Bd33f061a-d3c9-4b15-96cc-d08b463d97c6%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/PB-0.png"}}, "nickname": "Patrick Beeson", "type": "user", "account_id": "557058:eff3a3b0-e19b-43e6-b0a0-22d6a8721c3b"}, "updated_on": "2013-02-14T01:59:24.386672+00:00", "type": "issue_comment", "id": 3129902}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/127/comments/3135772.json"}, "html": {"href": "#!/osrf/drcsim/issues/127#comment-3135772"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/127.json"}}, "type": "issue", "id": 127, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Bad joint_states when in Nominal mode"}, "content": {"raw": "At this point, I'd definitely classify this difference in between \"pinned\" and \"nominal\" as a bug.  At the risk of repeating myself from above, the issue is that in Nominal mode there is a subset of joints that have a steady-state offset (neck_ay is the easiest and most obvious to examine for debugging purposes) and need a non-zero integral gain (jacking up the P only reduces the offset by multiples, but doesn't remove it completely).  But, it's impossible to tune a joint because in Nominal mode, without properly tuned joints, the robot falls over after even simple motions (like just lowering or raising the neck joint).  In pinned mode, you can isolate and move individual joints with ease in order to tune the PD parts of a controller, but without the steady state offset, you can't tune the I gain, and of course without I gain, it's impossible to prperly stay balanced while tuning in Nominal mode.  So we have a bit of a cyclical problem that (in my opinion) can most easily be handled by having a \"pinned\" mode that acts the same way as nominal mode for all joints, but just with the \"hovering\" so that is it easy to tun individual joints without having to restart Gazebo because the robot falls over and contacts the ground.", "markup": "markdown", "html": "<p>At this point, I'd definitely classify this difference in between \"pinned\" and \"nominal\" as a bug.  At the risk of repeating myself from above, the issue is that in Nominal mode there is a subset of joints that have a steady-state offset (neck_ay is the easiest and most obvious to examine for debugging purposes) and need a non-zero integral gain (jacking up the P only reduces the offset by multiples, but doesn't remove it completely).  But, it's impossible to tune a joint because in Nominal mode, without properly tuned joints, the robot falls over after even simple motions (like just lowering or raising the neck joint).  In pinned mode, you can isolate and move individual joints with ease in order to tune the PD parts of a controller, but without the steady state offset, you can't tune the I gain, and of course without I gain, it's impossible to prperly stay balanced while tuning in Nominal mode.  So we have a bit of a cyclical problem that (in my opinion) can most easily be handled by having a \"pinned\" mode that acts the same way as nominal mode for all joints, but just with the \"hovering\" so that is it easy to tun individual joints without having to restart Gazebo because the robot falls over and contacts the ground.</p>", "type": "rendered"}, "created_on": "2013-02-14T15:35:43.378168+00:00", "user": {"display_name": "Patrick Beeson", "uuid": "{d33f061a-d3c9-4b15-96cc-d08b463d97c6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd33f061a-d3c9-4b15-96cc-d08b463d97c6%7D"}, "html": {"href": "https://bitbucket.org/%7Bd33f061a-d3c9-4b15-96cc-d08b463d97c6%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/PB-0.png"}}, "nickname": "Patrick Beeson", "type": "user", "account_id": "557058:eff3a3b0-e19b-43e6-b0a0-22d6a8721c3b"}, "updated_on": null, "type": "issue_comment", "id": 3135772}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/127/comments/3140320.json"}, "html": {"href": "#!/osrf/drcsim/issues/127#comment-3140320"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/127.json"}}, "type": "issue", "id": 127, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Bad joint_states when in Nominal mode"}, "content": {"raw": "This is because in pinned mode, [the effect of gravity on the robot is turned off](#!/osrf/drcsim/src/a70816b04e3371d661bf0c04192664ad6003813b/ros/atlas_msgs/VRCPlugin.cpp?at=default#cl-170).  The mass of the head causes the pid about the neck to not reach target pose when the robot is unpinned and gravity effect turned back on.\n\nLet me know what you think about pull request #119?\n", "markup": "markdown", "html": "<p>This is because in pinned mode, <a data-is-external-link=\"true\" href=\"#!/osrf/drcsim/src/a70816b04e3371d661bf0c04192664ad6003813b/ros/atlas_msgs/VRCPlugin.cpp?at=default#cl-170\" rel=\"nofollow\">the effect of gravity on the robot is turned off</a>.  The mass of the head causes the pid about the neck to not reach target pose when the robot is unpinned and gravity effect turned back on.</p>\n<p>Let me know what you think about <a href=\"#!/osrf/drcsim/pull-requests/119/add-pinned_with_gravity-mode-per-comments\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #119</a>?</p>", "type": "rendered"}, "created_on": "2013-02-15T02:54:24.523261+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2013-02-15T03:01:41.870736+00:00", "type": "issue_comment", "id": 3140320}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/127/comments/3149347.json"}, "html": {"href": "#!/osrf/drcsim/issues/127#comment-3149347"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/127.json"}}, "type": "issue", "id": 127, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Bad joint_states when in Nominal mode"}, "content": {"raw": "This is not a problem with `joint_state`, but an issue on gravity settings for the atlas robot during development.", "markup": "markdown", "html": "<p>This is not a problem with <code>joint_state</code>, but an issue on gravity settings for the atlas robot during development.</p>", "type": "rendered"}, "created_on": "2013-02-15T22:51:13.882934+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 3149347}], "page": 1, "size": 4}