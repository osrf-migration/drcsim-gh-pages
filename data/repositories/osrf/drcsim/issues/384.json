{"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "links": {"attachments": {"href": "data/repositories/osrf/drcsim/issues/384/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/drcsim/issues/384.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/issues/384/watch"}, "comments": {"href": "data/repositories/osrf/drcsim/issues/384/comments_page=1.json"}, "html": {"href": "#!/osrf/drcsim/issues/384/produce-standalone-worlds"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/issues/384/vote"}}, "reporter": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "title": "Produce standalone worlds", "component": null, "votes": 2, "watches": 4, "content": {"raw": "Similar to what's done in pull request #408, we should produce standalone versions of each `foo.world` that's included in drcsim.  More or less, it would be replacing something like this:\r\n\r\n~~~\r\n    <plugin filename=\"libVRCPlugin.so\" name=\"vrc_plugin\">\r\n      <atlas>\r\n        <model_name>atlas</model_name>\r\n        <pin_link>utorso</pin_link>\r\n      </atlas>\r\n      <drc_vehicle>\r\n        <model_name>golf_cart</model_name>\r\n        <seat_link>chassis</seat_link>\r\n      </drc_vehicle>\r\n      <drc_fire_hose>\r\n        <fire_hose_model>fire_hose</fire_hose_model>\r\n        <coupling_link>coupling</coupling_link>\r\n        <standpipe_model>standpipe</standpipe_model>\r\n        <spout_link>standpipe</spout_link>\r\n        <thread_pitch>-1000</thread_pitch>\r\n        <coupling_relative_pose>1.17038e-05 -0.125623 0.35 -0.0412152 -1.57078 1.61199</coupling_relative_pose>\r\n      </drc_fire_hose>\r\n    </plugin>\r\n~~~\r\n\r\nwith something like this:\r\n\r\n~~~\r\n    <include>\r\n      <uri>model://atlas</uri>\r\n    </include>\r\n~~~\r\n\r\nThen anybody who can parse SDF/URDF can run those worlds.  For bonus points, extract the initial pose values from the associate `.launch` file.", "markup": "markdown", "html": "<p>Similar to what's done in <a href=\"#!/osrf/drcsim/pull-requests/408/add-standalone-versions-of-models\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #408</a>, we should produce standalone versions of each <code>foo.world</code> that's included in drcsim.  More or less, it would be replacing something like this:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;plugin</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libVRCPlugin.so&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;vrc_plugin&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;atlas&gt;</span>\n        <span class=\"nt\">&lt;model_name&gt;</span>atlas<span class=\"nt\">&lt;/model_name&gt;</span>\n        <span class=\"nt\">&lt;pin_link&gt;</span>utorso<span class=\"nt\">&lt;/pin_link&gt;</span>\n      <span class=\"nt\">&lt;/atlas&gt;</span>\n      <span class=\"nt\">&lt;drc_vehicle&gt;</span>\n        <span class=\"nt\">&lt;model_name&gt;</span>golf_cart<span class=\"nt\">&lt;/model_name&gt;</span>\n        <span class=\"nt\">&lt;seat_link&gt;</span>chassis<span class=\"nt\">&lt;/seat_link&gt;</span>\n      <span class=\"nt\">&lt;/drc_vehicle&gt;</span>\n      <span class=\"nt\">&lt;drc_fire_hose&gt;</span>\n        <span class=\"nt\">&lt;fire_hose_model&gt;</span>fire_hose<span class=\"nt\">&lt;/fire_hose_model&gt;</span>\n        <span class=\"nt\">&lt;coupling_link&gt;</span>coupling<span class=\"nt\">&lt;/coupling_link&gt;</span>\n        <span class=\"nt\">&lt;standpipe_model&gt;</span>standpipe<span class=\"nt\">&lt;/standpipe_model&gt;</span>\n        <span class=\"nt\">&lt;spout_link&gt;</span>standpipe<span class=\"nt\">&lt;/spout_link&gt;</span>\n        <span class=\"nt\">&lt;thread_pitch&gt;</span>-1000<span class=\"nt\">&lt;/thread_pitch&gt;</span>\n        <span class=\"nt\">&lt;coupling_relative_pose&gt;</span>1.17038e-05 -0.125623 0.35 -0.0412152 -1.57078 1.61199<span class=\"nt\">&lt;/coupling_relative_pose&gt;</span>\n      <span class=\"nt\">&lt;/drc_fire_hose&gt;</span>\n    <span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>with something like this:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>model://atlas<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n</pre></div>\n\n\n<p>Then anybody who can parse SDF/URDF can run those worlds.  For bonus points, extract the initial pose values from the associate <code>.launch</code> file.</p>", "type": "rendered"}, "assignee": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "state": "new", "version": null, "edited_on": null, "created_on": "2013-10-19T00:47:39.782480+00:00", "milestone": null, "updated_on": "2014-09-16T15:54:40.357630+00:00", "type": "issue", "id": 384}