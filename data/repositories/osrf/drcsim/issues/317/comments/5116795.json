{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/317/comments/5116795.json"}, "html": {"href": "#!/osrf/drcsim/issues/317#comment-5116795"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/317.json"}}, "type": "issue", "id": 317, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Crash in UDPROS code"}, "content": {"raw": "Thanks for the update.  For reference, here's the [controller synchronization mechanism I was referring to](http://gazebosim.org/wiki/Tutorials/drcsim/2.6/controller_synchronization).  Below are parameters for this setup:\n\n~~~\n  <!-- Control Synchronization Parameters -->\n  <!-- delay_window_size: paging window that will allow delay_max_per_window-seconds of delay. -->\n  <!-- delay_max_per_window: total cumulative delay in seconds allotted per delay_window_size. -->\n  <!-- delay_max_per_step: maximum delay per simulation time step. -->\n  <param name=\"/atlas/delay_window_size\" type=\"double\" value=\"25.0\"/>\n  <param name=\"/atlas/delay_max_per_window\" type=\"double\" value=\"1.0\"/>\n  <param name=\"/atlas/delay_max_per_step\" type=\"double\" value=\"0.1\"/>\n~~~\n\nFor testing, one can modify `delay_max_*` to very large values to prevent dropping any commands at all.\n\nOn the other hand, when running unsynchronized, I suppose one could tweak [AtlasPlugin::CalculateControllerStatistics](#!/osrf/drcsim/src/36f937d662006ce3607fc8d98cdd7b1f945e3224/ros/atlas_msgs/AtlasPlugin.cpp?at=default#cl-2301) to keep track of number of missed frames and/or frames that missed some preset deadline.", "markup": "markdown", "html": "<p>Thanks for the update.  For reference, here's the <a data-is-external-link=\"true\" href=\"http://gazebosim.org/wiki/Tutorials/drcsim/2.6/controller_synchronization\" rel=\"nofollow\">controller synchronization mechanism I was referring to</a>.  Below are parameters for this setup:</p>\n<div class=\"codehilite\"><pre><span></span>  &lt;!-- Control Synchronization Parameters --&gt;\n  &lt;!-- delay_window_size: paging window that will allow delay_max_per_window-seconds of delay. --&gt;\n  &lt;!-- delay_max_per_window: total cumulative delay in seconds allotted per delay_window_size. --&gt;\n  &lt;!-- delay_max_per_step: maximum delay per simulation time step. --&gt;\n  &lt;param name=&quot;/atlas/delay_window_size&quot; type=&quot;double&quot; value=&quot;25.0&quot;/&gt;\n  &lt;param name=&quot;/atlas/delay_max_per_window&quot; type=&quot;double&quot; value=&quot;1.0&quot;/&gt;\n  &lt;param name=&quot;/atlas/delay_max_per_step&quot; type=&quot;double&quot; value=&quot;0.1&quot;/&gt;\n</pre></div>\n\n\n<p>For testing, one can modify <code>delay_max_*</code> to very large values to prevent dropping any commands at all.</p>\n<p>On the other hand, when running unsynchronized, I suppose one could tweak <a data-is-external-link=\"true\" href=\"#!/osrf/drcsim/src/36f937d662006ce3607fc8d98cdd7b1f945e3224/ros/atlas_msgs/AtlasPlugin.cpp?at=default#cl-2301\" rel=\"nofollow\">AtlasPlugin::CalculateControllerStatistics</a> to keep track of number of missed frames and/or frames that missed some preset deadline.</p>", "type": "rendered"}, "created_on": "2013-07-09T02:52:44.261870+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 5116795}