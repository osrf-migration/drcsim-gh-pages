{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373/comments/6450929.json"}, "html": {"href": "#!/osrf/drcsim/issues/373#comment-6450929"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373.json"}}, "type": "issue", "id": 373, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide detailed release notes"}, "content": {"raw": "This update broke most of our model file importers, leaving us dead in the water as far Gazebo integration with our controller and updating to the latest model is concerned. \n\nIt seems that the atlas robot is not included in the world files any more, but dynamically loaded by the Atlas plugin?  ", "markup": "markdown", "html": "<p>This update broke most of our model file importers, leaving us dead in the water as far Gazebo integration with our controller and updating to the latest model is concerned. </p>\n<p>It seems that the atlas robot is not included in the world files any more, but dynamically loaded by the Atlas plugin?  </p>", "type": "rendered"}, "created_on": "2013-10-13T23:10:33.728535+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "updated_on": null, "type": "issue_comment", "id": 6450929}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373/comments/6450983.json"}, "html": {"href": "#!/osrf/drcsim/issues/373#comment-6450983"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373.json"}}, "type": "issue", "id": 373, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide detailed release notes"}, "content": {"raw": "A little bit more information:\n\nI've a world file with \n\n```\n#!xml\n<include>\n<uri>model://atlas_v3_sandia_hands</uri>\n<plugin [myplugin] />\n</include>\n```\n\nI cannot get this to work any more.", "markup": "markdown", "html": "<p>A little bit more information:</p>\n<p>I've a world file with </p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;include&gt;</span>\n<span class=\"nt\">&lt;uri&gt;</span>model://atlas_v3_sandia_hands<span class=\"nt\">&lt;/uri&gt;</span>\n<span class=\"nt\">&lt;plugin</span> <span class=\"err\">[myplugin]</span> <span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/include&gt;</span>\n</pre></div>\n\n\n<p>I cannot get this to work any more.</p>", "type": "rendered"}, "created_on": "2013-10-13T23:22:15.590261+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "updated_on": null, "type": "issue_comment", "id": 6450983}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373/comments/6451526.json"}, "html": {"href": "#!/osrf/drcsim/issues/373#comment-6451526"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373.json"}}, "type": "issue", "id": 373, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide detailed release notes"}, "content": {"raw": "Atlas is now spawned by [VRCPlugin.cc](#!/osrf/drcsim/src/5106f8e07aac9381a11c1bde203fd417522476c4/drcsim_gazebo_ros_plugins/src/VRCPlugin.cpp?at=default#cl-659) from ROS parameter named `robot_description`.  `VRCPlugin` is included in world files, for example see [atlas.world](#!/osrf/drcsim/src/5106f8e07aac9381a11c1bde203fd417522476c4/drcsim_model_resources/worlds/atlas.world?at=default#cl-30).\n\nOne way to add custom plugin to a robot is to modify installed [atlas_description/robots/atlas_v3_sandia_hands.urdf.xacro](#!/osrf/drcsim/src/5106f8e07aac9381a11c1bde203fd417522476c4/atlas_description/robots/atlas_v3_sandia_hands.urdf.xacro?at=default), and modify its content to include your plugin:\n~~~\n<robot xmlns:xacro=\"http://www.ros.org/wiki/xacro\" name=\"atlas\" >\n  \n  <xacro:include filename=\"$(find atlas_description)/urdf/atlas_v3.urdf\" />\n  <xacro:include filename=\"$(find sandia_hand_description)/urdf/sandia_hand_simple_shapes.urdf.xacro\" />\n\n  <xacro:sandia_hand side=\"right\" parent=\"r_hand\" reflect=\"1\" joint_type=\"revolute\" thumb_angle=\"0\">\n    <origin xyz=\"-0.00179 -0.13516 0.01176\" rpy=\"0 0 -1.57079\"/>\n  </xacro:sandia_hand>\n  <xacro:sandia_hand side=\"left\" parent=\"l_hand\" reflect=\"-1\" joint_type=\"revolute\" thumb_angle=\"0\">\n    <origin xyz=\"0.00179  0.13516 0.01176\" rpy=\"0 0  1.57079\"/>\n  </xacro:sandia_hand>\n\n  <xacro:include filename=\"$(find atlas_description)/urdf/atlas_v3.gazebo\" />\n  <xacro:include filename=\"$(find atlas_description)/urdf/atlas_v3.transmission\" />\n  <xacro:include filename=\"$(find multisense_sl_description)/urdf/multisense_sl_v3.urdf\" />\n\n  <gazebo>\n    <!-- include plugin for sandia hands -->\n    <plugin name=\"sandia_hand_plugin\" filename=\"libSandiaHandPlugin.so\"/>\n\n    <!-- custom plugin -->\n    <plugin name=\"[my plugin]\" filename=\"lib[My Plugin].so\"/>\n  </gazebo>\n</robot>\n~~~\n\nOf course, this is not as clean if you have installed from deb, requiring root access to modify things in `/opt/ros/groovy[hydro]/share/atlas_description/robots/*.xacro`.  \n\nAnother way is to create your own ROS package:\n\n~~~\nmkdir ~/drcsim_ws\ncd ~/drcsim_ws\nroscreate-pkg atlas_ihmc_gazebo atlas_description drcsim_gazebo\n~~~\n\nPrepend your new package path to `ROS_PACKAGE_PATH`\n~~~\nexport ROS_PACKAGE_PATH=~/drcsim_ws:${ROS_PACKAGE_PATH}\n~~~\n\nCopy launch files from `drcsim_gazebo/launch/atlas_v3_sandia_hands.launch` and   rename reference to `atlas_description` to `atlas_ihmc_description/robots` as such:\n~~~\n<launch>\n\n  <arg name=\"gzname\" default=\"gazebo\"/>\n  <arg name=\"gzworld\" default=\"atlas_sandia_hands.world\"/>\n  <arg name=\"hand_suffix\" default=\"\"/>\n  <arg name=\"extra_gazebo_args\" default=\"-q\" />\n\n  <param name=\"/atlas/time_to_unpin\" type=\"double\" value=\"1.0\"/>\n  <param name=\"/atlas/startup_mode\" type=\"string\" value=\"bdi_stand\"/>\n  <!-- <param name=\"/atlas/startup_mode\" type=\"string\" value=\"pinned\"/> -->\n\n  <!-- start gazebo with the Atlas -->\n  <include file=\"$(find drcsim_gazebo)/launch/atlas_no_controllers.launch\">\n    <arg name=\"gzname\" value=\"$(arg gzname)\"/>\n    <arg name=\"gzworld\" value=\"$(arg gzworld)\"/>\n    <arg name=\"extra_gazebo_args\" value=\"$(arg extra_gazebo_args)\"/>\n  </include>\n\n  <!-- to trigger synchronization delay, set\n       atlas_msgs::AtlasCommand::desired_controller_period_ms to non-zero -->\n  <param name=\"/atlas/delay_window_size\" type=\"double\" value=\"5.0\"/>\n  <param name=\"/atlas/delay_max_per_window\" type=\"double\" value=\"0.25\"/>\n  <param name=\"/atlas/delay_max_per_step\" type=\"double\" value=\"0.025\"/>\n\n  <!-- Robot Description -->\n  <param name=\"robot_description\" command=\"$(find xacro)/xacro.py '$(find atlas_ihmc_description)/robots/atlas_v3_sandia_hands.urdf.xacro'\" />\n  <param name=\"robot_initial_pose/x\"     value=\"0\" type=\"double\"/>\n  <param name=\"robot_initial_pose/y\"     value=\"0\" type=\"double\"/>\n  <param name=\"robot_initial_pose/z\"     value=\"0.95\" type=\"double\"/>\n  <param name=\"robot_initial_pose/roll\"  value=\"0\" type=\"double\"/>\n  <param name=\"robot_initial_pose/pitch\" value=\"0\" type=\"double\"/>\n  <param name=\"robot_initial_pose/yaw\"   value=\"0\" type=\"double\"/>\n\n  <include file=\"$(find drcsim_gazebo)/launch/atlas_v3_sandia_hands_bringup.launch\"/>\n</launch>\n~~~\n\nAlso copy robot xacro file from `atlas_description/robots/atlas_v3_sandia_hands.launch` into your new package and add a line to include the custom plugin as such:\n~~~\n<robot xmlns:xacro=\"http://www.ros.org/wiki/xacro\" name=\"atlas\" >\n  \n  <xacro:include filename=\"$(find atlas_description)/urdf/atlas_v3.urdf\" />\n  <xacro:include filename=\"$(find sandia_hand_description)/urdf/sandia_hand_simple_shapes.urdf.xacro\" />\n\n  <xacro:sandia_hand side=\"right\" parent=\"r_hand\" reflect=\"1\" joint_type=\"revolute\" thumb_angle=\"0\">\n    <origin xyz=\"-0.00179 -0.13516 0.01176\" rpy=\"0 0 -1.57079\"/>\n  </xacro:sandia_hand>\n  <xacro:sandia_hand side=\"left\" parent=\"l_hand\" reflect=\"-1\" joint_type=\"revolute\" thumb_angle=\"0\">\n    <origin xyz=\"0.00179  0.13516 0.01176\" rpy=\"0 0  1.57079\"/>\n  </xacro:sandia_hand>\n\n  <xacro:include filename=\"$(find atlas_description)/urdf/atlas_v3.gazebo\" />\n  <xacro:include filename=\"$(find atlas_description)/urdf/atlas_v3.transmission\" />\n  <xacro:include filename=\"$(find multisense_sl_description)/urdf/multisense_sl_v3.urdf\" />\n\n  <gazebo>\n    <!-- include plugin for sandia hands -->\n    <plugin name=\"sandia_hand_plugin\" filename=\"libSandiaHandPlugin.so\"/>\n\n    <!-- custom plugin -->\n    <plugin name=\"[my plugin]\" filename=\"lib[My Plugin].so\"/>\n  </gazebo>\n</robot>\n~~~\n\nOne of the two above options should work (note: untested), while we try to come up with a cleaner solution.", "markup": "markdown", "html": "<p>Atlas is now spawned by <a data-is-external-link=\"true\" href=\"#!/osrf/drcsim/src/5106f8e07aac9381a11c1bde203fd417522476c4/drcsim_gazebo_ros_plugins/src/VRCPlugin.cpp?at=default#cl-659\" rel=\"nofollow\">VRCPlugin.cc</a> from ROS parameter named <code>robot_description</code>.  <code>VRCPlugin</code> is included in world files, for example see <a data-is-external-link=\"true\" href=\"#!/osrf/drcsim/src/5106f8e07aac9381a11c1bde203fd417522476c4/drcsim_model_resources/worlds/atlas.world?at=default#cl-30\" rel=\"nofollow\">atlas.world</a>.</p>\n<p>One way to add custom plugin to a robot is to modify installed <a data-is-external-link=\"true\" href=\"#!/osrf/drcsim/src/5106f8e07aac9381a11c1bde203fd417522476c4/atlas_description/robots/atlas_v3_sandia_hands.urdf.xacro?at=default\" rel=\"nofollow\">atlas_description/robots/atlas_v3_sandia_hands.urdf.xacro</a>, and modify its content to include your plugin:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&lt;</span><span class=\"n\">robot</span> <span class=\"nl\">xmlns</span><span class=\"p\">:</span><span class=\"n\">xacro</span><span class=\"o\">=</span><span class=\"s\">&quot;http://www.ros.org/wiki/xacro&quot;</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;atlas&quot;</span> <span class=\"o\">&gt;</span>\n\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">include</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;$(find atlas_description)/urdf/atlas_v3.urdf&quot;</span> <span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">include</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;$(find sandia_hand_description)/urdf/sandia_hand_simple_shapes.urdf.xacro&quot;</span> <span class=\"o\">/&gt;</span>\n\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">sandia_hand</span> <span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">&quot;right&quot;</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"s\">&quot;r_hand&quot;</span> <span class=\"n\">reflect</span><span class=\"o\">=</span><span class=\"s\">&quot;1&quot;</span> <span class=\"n\">joint_type</span><span class=\"o\">=</span><span class=\"s\">&quot;revolute&quot;</span> <span class=\"n\">thumb_angle</span><span class=\"o\">=</span><span class=\"s\">&quot;0&quot;</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">origin</span> <span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"s\">&quot;-0.00179 -0.13516 0.01176&quot;</span> <span class=\"n\">rpy</span><span class=\"o\">=</span><span class=\"s\">&quot;0 0 -1.57079&quot;</span><span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;/</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">sandia_hand</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">sandia_hand</span> <span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">&quot;left&quot;</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"s\">&quot;l_hand&quot;</span> <span class=\"n\">reflect</span><span class=\"o\">=</span><span class=\"s\">&quot;-1&quot;</span> <span class=\"n\">joint_type</span><span class=\"o\">=</span><span class=\"s\">&quot;revolute&quot;</span> <span class=\"n\">thumb_angle</span><span class=\"o\">=</span><span class=\"s\">&quot;0&quot;</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">origin</span> <span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"s\">&quot;0.00179  0.13516 0.01176&quot;</span> <span class=\"n\">rpy</span><span class=\"o\">=</span><span class=\"s\">&quot;0 0  1.57079&quot;</span><span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;/</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">sandia_hand</span><span class=\"o\">&gt;</span>\n\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">include</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;$(find atlas_description)/urdf/atlas_v3.gazebo&quot;</span> <span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">include</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;$(find atlas_description)/urdf/atlas_v3.transmission&quot;</span> <span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">include</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;$(find multisense_sl_description)/urdf/multisense_sl_v3.urdf&quot;</span> <span class=\"o\">/&gt;</span>\n\n  <span class=\"o\">&lt;</span><span class=\"n\">gazebo</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;!--</span> <span class=\"n\">include</span> <span class=\"n\">plugin</span> <span class=\"k\">for</span> <span class=\"n\">sandia</span> <span class=\"n\">hands</span> <span class=\"o\">--&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">plugin</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;sandia_hand_plugin&quot;</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;libSandiaHandPlugin.so&quot;</span><span class=\"o\">/&gt;</span>\n\n    <span class=\"o\">&lt;!--</span> <span class=\"n\">custom</span> <span class=\"n\">plugin</span> <span class=\"o\">--&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">plugin</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;[my plugin]&quot;</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;lib[My Plugin].so&quot;</span><span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;/</span><span class=\"n\">gazebo</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">robot</span><span class=\"o\">&gt;</span>\n</pre></div>\n\n\n<p>Of course, this is not as clean if you have installed from deb, requiring root access to modify things in <code>/opt/ros/groovy[hydro]/share/atlas_description/robots/*.xacro</code>.  </p>\n<p>Another way is to create your own ROS package:</p>\n<div class=\"codehilite\"><pre><span></span>mkdir ~/drcsim_ws\ncd ~/drcsim_ws\nroscreate-pkg atlas_ihmc_gazebo atlas_description drcsim_gazebo\n</pre></div>\n\n\n<p>Prepend your new package path to <code>ROS_PACKAGE_PATH</code></p>\n<div class=\"codehilite\"><pre><span></span>export ROS_PACKAGE_PATH=~/drcsim_ws:<span class=\"cp\">${</span><span class=\"n\">ROS_PACKAGE_PATH</span><span class=\"cp\">}</span>\n</pre></div>\n\n\n<p>Copy launch files from <code>drcsim_gazebo/launch/atlas_v3_sandia_hands.launch</code> and   rename reference to <code>atlas_description</code> to <code>atlas_ihmc_description/robots</code> as such:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;launch&gt;</span>\n\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;gzname&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;gazebo&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;gzworld&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;atlas_sandia_hands.world&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;hand_suffix&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;extra_gazebo_args&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;-q&quot;</span> <span class=\"nt\">/&gt;</span>\n\n  <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;/atlas/time_to_unpin&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;1.0&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;/atlas/startup_mode&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;string&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;bdi_stand&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"c\">&lt;!-- &lt;param name=&quot;/atlas/startup_mode&quot; type=&quot;string&quot; value=&quot;pinned&quot;/&gt; --&gt;</span>\n\n  <span class=\"c\">&lt;!-- start gazebo with the Atlas --&gt;</span>\n  <span class=\"nt\">&lt;include</span> <span class=\"na\">file=</span><span class=\"s\">&quot;$(find drcsim_gazebo)/launch/atlas_no_controllers.launch&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;gzname&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;$(arg gzname)&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;gzworld&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;$(arg gzworld)&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;arg</span> <span class=\"na\">name=</span><span class=\"s\">&quot;extra_gazebo_args&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;$(arg extra_gazebo_args)&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/include&gt;</span>\n\n  <span class=\"c\">&lt;!-- to trigger synchronization delay, set</span>\n<span class=\"c\">       atlas_msgs::AtlasCommand::desired_controller_period_ms to non-zero --&gt;</span>\n  <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;/atlas/delay_window_size&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;5.0&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;/atlas/delay_max_per_window&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.25&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;/atlas/delay_max_per_step&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.025&quot;</span><span class=\"nt\">/&gt;</span>\n\n  <span class=\"c\">&lt;!-- Robot Description --&gt;</span>\n  <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;robot_description&quot;</span> <span class=\"na\">command=</span><span class=\"s\">&quot;$(find xacro)/xacro.py &#39;$(find atlas_ihmc_description)/robots/atlas_v3_sandia_hands.urdf.xacro&#39;&quot;</span> <span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;robot_initial_pose/x&quot;</span>     <span class=\"na\">value=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;robot_initial_pose/y&quot;</span>     <span class=\"na\">value=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;robot_initial_pose/z&quot;</span>     <span class=\"na\">value=</span><span class=\"s\">&quot;0.95&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;robot_initial_pose/roll&quot;</span>  <span class=\"na\">value=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;robot_initial_pose/pitch&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;param</span> <span class=\"na\">name=</span><span class=\"s\">&quot;robot_initial_pose/yaw&quot;</span>   <span class=\"na\">value=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span><span class=\"nt\">/&gt;</span>\n\n  <span class=\"nt\">&lt;include</span> <span class=\"na\">file=</span><span class=\"s\">&quot;$(find drcsim_gazebo)/launch/atlas_v3_sandia_hands_bringup.launch&quot;</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/launch&gt;</span>\n</pre></div>\n\n\n<p>Also copy robot xacro file from <code>atlas_description/robots/atlas_v3_sandia_hands.launch</code> into your new package and add a line to include the custom plugin as such:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&lt;</span><span class=\"n\">robot</span> <span class=\"nl\">xmlns</span><span class=\"p\">:</span><span class=\"n\">xacro</span><span class=\"o\">=</span><span class=\"s\">&quot;http://www.ros.org/wiki/xacro&quot;</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;atlas&quot;</span> <span class=\"o\">&gt;</span>\n\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">include</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;$(find atlas_description)/urdf/atlas_v3.urdf&quot;</span> <span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">include</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;$(find sandia_hand_description)/urdf/sandia_hand_simple_shapes.urdf.xacro&quot;</span> <span class=\"o\">/&gt;</span>\n\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">sandia_hand</span> <span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">&quot;right&quot;</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"s\">&quot;r_hand&quot;</span> <span class=\"n\">reflect</span><span class=\"o\">=</span><span class=\"s\">&quot;1&quot;</span> <span class=\"n\">joint_type</span><span class=\"o\">=</span><span class=\"s\">&quot;revolute&quot;</span> <span class=\"n\">thumb_angle</span><span class=\"o\">=</span><span class=\"s\">&quot;0&quot;</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">origin</span> <span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"s\">&quot;-0.00179 -0.13516 0.01176&quot;</span> <span class=\"n\">rpy</span><span class=\"o\">=</span><span class=\"s\">&quot;0 0 -1.57079&quot;</span><span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;/</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">sandia_hand</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">sandia_hand</span> <span class=\"n\">side</span><span class=\"o\">=</span><span class=\"s\">&quot;left&quot;</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"s\">&quot;l_hand&quot;</span> <span class=\"n\">reflect</span><span class=\"o\">=</span><span class=\"s\">&quot;-1&quot;</span> <span class=\"n\">joint_type</span><span class=\"o\">=</span><span class=\"s\">&quot;revolute&quot;</span> <span class=\"n\">thumb_angle</span><span class=\"o\">=</span><span class=\"s\">&quot;0&quot;</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">origin</span> <span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"s\">&quot;0.00179  0.13516 0.01176&quot;</span> <span class=\"n\">rpy</span><span class=\"o\">=</span><span class=\"s\">&quot;0 0  1.57079&quot;</span><span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;/</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">sandia_hand</span><span class=\"o\">&gt;</span>\n\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">include</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;$(find atlas_description)/urdf/atlas_v3.gazebo&quot;</span> <span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">include</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;$(find atlas_description)/urdf/atlas_v3.transmission&quot;</span> <span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"nl\">xacro</span><span class=\"p\">:</span><span class=\"n\">include</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;$(find multisense_sl_description)/urdf/multisense_sl_v3.urdf&quot;</span> <span class=\"o\">/&gt;</span>\n\n  <span class=\"o\">&lt;</span><span class=\"n\">gazebo</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;!--</span> <span class=\"n\">include</span> <span class=\"n\">plugin</span> <span class=\"k\">for</span> <span class=\"n\">sandia</span> <span class=\"n\">hands</span> <span class=\"o\">--&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">plugin</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;sandia_hand_plugin&quot;</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;libSandiaHandPlugin.so&quot;</span><span class=\"o\">/&gt;</span>\n\n    <span class=\"o\">&lt;!--</span> <span class=\"n\">custom</span> <span class=\"n\">plugin</span> <span class=\"o\">--&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">plugin</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;[my plugin]&quot;</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">&quot;lib[My Plugin].so&quot;</span><span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;/</span><span class=\"n\">gazebo</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">robot</span><span class=\"o\">&gt;</span>\n</pre></div>\n\n\n<p>One of the two above options should work (note: untested), while we try to come up with a cleaner solution.</p>", "type": "rendered"}, "created_on": "2013-10-14T01:36:31.489676+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2013-10-14T01:38:37.264313+00:00", "type": "issue_comment", "id": 6451526}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373/comments/6453579.json"}, "html": {"href": "#!/osrf/drcsim/issues/373#comment-6453579"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373.json"}}, "type": "issue", "id": 373, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide detailed release notes"}, "content": {"raw": "As I understand from this, there is no easy way any more to generate a SDF file based on the .world files. Our control software imports SDF files directly to parse the robot parameters. Our own simulation software is able to read SDF world files to simulate the environment. With these changes there is no easy way to import the robot model in our controller or simulation any more. The recent changes require us to spend significant time to figure how and where all the models are stored, hence the request for an extensive changelog. As DRCsim is the source for the atlas data and the worlds, itheyshould be available in an easily accasible format/location. The world files are probably also going to be used by track A teams without Atlas.\n\nAlthough the Gazebo physics blow up on us now, we like to test our controller on Gazebo as well, mostly for multi-contact behaviour, hence the custom plugin. Because this plugin sets joint forces and torques directly as well as controlling the sim world it probably interferes with the  VRCPlugin. Hence our desire to have a clean world file with just the plugins we want (for 3.0 we use a xslt file to add our custom plugin).\n\nWe were hoping that, like Gazebo, DRCsim would have an optional dependency on ROS. We write our software in Java, which does not have a high performance ROS binding. Furthermore, we like to run our controller and sim on multiple platforms, making the use of ROS hard. Therefore, we try to avoid any dependency on ROS.", "markup": "markdown", "html": "<p>As I understand from this, there is no easy way any more to generate a SDF file based on the .world files. Our control software imports SDF files directly to parse the robot parameters. Our own simulation software is able to read SDF world files to simulate the environment. With these changes there is no easy way to import the robot model in our controller or simulation any more. The recent changes require us to spend significant time to figure how and where all the models are stored, hence the request for an extensive changelog. As DRCsim is the source for the atlas data and the worlds, itheyshould be available in an easily accasible format/location. The world files are probably also going to be used by track A teams without Atlas.</p>\n<p>Although the Gazebo physics blow up on us now, we like to test our controller on Gazebo as well, mostly for multi-contact behaviour, hence the custom plugin. Because this plugin sets joint forces and torques directly as well as controlling the sim world it probably interferes with the  VRCPlugin. Hence our desire to have a clean world file with just the plugins we want (for 3.0 we use a xslt file to add our custom plugin).</p>\n<p>We were hoping that, like Gazebo, DRCsim would have an optional dependency on ROS. We write our software in Java, which does not have a high performance ROS binding. Furthermore, we like to run our controller and sim on multiple platforms, making the use of ROS hard. Therefore, we try to avoid any dependency on ROS.</p>", "type": "rendered"}, "created_on": "2013-10-14T05:41:16.051470+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "updated_on": null, "type": "issue_comment", "id": 6453579}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373/comments/6480156.json"}, "html": {"href": "#!/osrf/drcsim/issues/373#comment-6480156"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373.json"}}, "type": "issue", "id": 373, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide detailed release notes"}, "content": {"raw": "Further research showed that I can use xacro to create the model files in the following way\n\n\n```\n#!bash\nrobotdir=\"/opt/ros/groovy/share/atlas_description/robots/\"\nexport GAZEBO_MODEL_PATH=`pwd`/models:$GAZEBO_MODEL_PATH\nfor f in \"$robotdir\"/*.xacro\ndo\n        bzname=`basename \"$f\" .urdf.xacro`\n        mkdir -p models/\"$bzname\"\n        rosrun xacro xacro.py $f > models/\"$bzname\"/model.sdf\n        cp model.config.template models/\"$bzname\"/model.config\ndone\n```\n\nThen using an xslt file on the world file, we can reinsert the robot and create a complete file using gzsdf print for our simulator. ", "markup": "markdown", "html": "<p>Further research showed that I can use xacro to create the model files in the following way</p>\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"nv\">robotdir</span><span class=\"o\">=</span><span class=\"s2\">&quot;/opt/ros/groovy/share/atlas_description/robots/&quot;</span>\n<span class=\"nb\">export</span> <span class=\"nv\">GAZEBO_MODEL_PATH</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">pwd</span><span class=\"sb\">`</span>/models:<span class=\"nv\">$GAZEBO_MODEL_PATH</span>\n<span class=\"k\">for</span> f in <span class=\"s2\">&quot;</span><span class=\"nv\">$robotdir</span><span class=\"s2\">&quot;</span>/*.xacro\n<span class=\"k\">do</span>\n        <span class=\"nv\">bzname</span><span class=\"o\">=</span><span class=\"sb\">`</span>basename <span class=\"s2\">&quot;</span><span class=\"nv\">$f</span><span class=\"s2\">&quot;</span> .urdf.xacro<span class=\"sb\">`</span>\n        mkdir -p models/<span class=\"s2\">&quot;</span><span class=\"nv\">$bzname</span><span class=\"s2\">&quot;</span>\n        rosrun xacro xacro.py <span class=\"nv\">$f</span> &gt; models/<span class=\"s2\">&quot;</span><span class=\"nv\">$bzname</span><span class=\"s2\">&quot;</span>/model.sdf\n        cp model.config.template models/<span class=\"s2\">&quot;</span><span class=\"nv\">$bzname</span><span class=\"s2\">&quot;</span>/model.config\n<span class=\"k\">done</span>\n</pre></div>\n\n\n<p>Then using an xslt file on the world file, we can reinsert the robot and create a complete file using gzsdf print for our simulator. </p>", "type": "rendered"}, "created_on": "2013-10-15T19:41:54.893708+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "updated_on": "2013-10-15T19:44:50.093366+00:00", "type": "issue_comment", "id": 6480156}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373/comments/6483580.json"}, "html": {"href": "#!/osrf/drcsim/issues/373#comment-6483580"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373.json"}}, "type": "issue", "id": 373, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide detailed release notes"}, "content": {"raw": "@jespersmith, can you have a look at the [issue_373 branch](#!/osrf/drcsim/branch/issue_373)?\n\nI added back in the compile-time xacro run that we used to do and, inspired by your comment, did a bit of cleanup via xslt.  With this change, you should be able to add `<install_prefix>/share/atlas_description/static_models` to your `GAZEBO_MODEL_PATH` and then instantiate the models (I'm not somewhere that I can test that right now).\n\nIs this useful?  If so, I'll generalize it and apply it to the other components of drcsim that contain `.urdf.xacro` files.\n\nIt also sounds like you want to use the `.world` files outside of Gazebo; I'll have a look at processing those, hopefully pulling the robot and vehicles poses out of the accompanying `.launch` files (the pose data is given as ROS params in the `.launch` files).\n\nWith enough tweaks, we ought to be able to produce standalone, plugin-free world and model files that can be loaded by anybody who can parse SDF.", "markup": "markdown", "html": "<p>@jespersmith, can you have a look at the <a data-is-external-link=\"true\" href=\"#!/osrf/drcsim/branch/issue_373\" rel=\"nofollow\">issue_373 branch</a>?</p>\n<p>I added back in the compile-time xacro run that we used to do and, inspired by your comment, did a bit of cleanup via xslt.  With this change, you should be able to add <code>&lt;install_prefix&gt;/share/atlas_description/static_models</code> to your <code>GAZEBO_MODEL_PATH</code> and then instantiate the models (I'm not somewhere that I can test that right now).</p>\n<p>Is this useful?  If so, I'll generalize it and apply it to the other components of drcsim that contain <code>.urdf.xacro</code> files.</p>\n<p>It also sounds like you want to use the <code>.world</code> files outside of Gazebo; I'll have a look at processing those, hopefully pulling the robot and vehicles poses out of the accompanying <code>.launch</code> files (the pose data is given as ROS params in the <code>.launch</code> files).</p>\n<p>With enough tweaks, we ought to be able to produce standalone, plugin-free world and model files that can be loaded by anybody who can parse SDF.</p>", "type": "rendered"}, "created_on": "2013-10-16T02:27:20.867290+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": null, "type": "issue_comment", "id": 6483580}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373/comments/6514065.json"}, "html": {"href": "#!/osrf/drcsim/issues/373#comment-6514065"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373.json"}}, "type": "issue", "id": 373, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide detailed release notes"}, "content": {"raw": "That sounds vey useful, thanks", "markup": "markdown", "html": "<p>That sounds vey useful, thanks</p>", "type": "rendered"}, "created_on": "2013-10-17T21:51:27.572769+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "updated_on": null, "type": "issue_comment", "id": 6514065}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373/comments/6528684.json"}, "html": {"href": "#!/osrf/drcsim/issues/373#comment-6528684"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373.json"}}, "type": "issue", "id": 373, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide detailed release notes"}, "content": {"raw": "pull request #408 does most of what's asked here", "markup": "markdown", "html": "<p><a href=\"#!/osrf/drcsim/pull-requests/408/add-standalone-versions-of-models\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #408</a> does most of what's asked here</p>", "type": "rendered"}, "created_on": "2013-10-19T00:44:29.260151+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": null, "type": "issue_comment", "id": 6528684}, {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373/comments/6528698.json"}, "html": {"href": "#!/osrf/drcsim/issues/373#comment-6528698"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/373.json"}}, "type": "issue", "id": 373, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide detailed release notes"}, "content": {"raw": "Related: issue #384", "markup": "markdown", "html": "<p>Related: issue <a href=\"#!/osrf/drcsim/issues/384/produce-standalone-worlds\" rel=\"nofollow\" title=\"Produce standalone worlds\" class=\"ap-connect-link\">#384</a></p>", "type": "rendered"}, "created_on": "2013-10-19T00:47:58.739130+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": null, "type": "issue_comment", "id": 6528698}], "page": 1, "size": 9}