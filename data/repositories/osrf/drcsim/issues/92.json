{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "links": {"attachments": {"href": "data/repositories/osrf/drcsim/issues/92/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/drcsim/issues/92.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/issues/92/watch"}, "comments": {"href": "data/repositories/osrf/drcsim/issues/92/comments_page=1.json"}, "html": {"href": "#!/osrf/drcsim/issues/92/request-to-provide-integral-tie-back"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/issues/92/vote"}}, "reporter": {"display_name": "DavidC", "uuid": "{fcd58e93-ca10-45f7-b2db-c913c5878cc3}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfcd58e93-ca10-45f7-b2db-c913c5878cc3%7D"}, "html": {"href": "https://bitbucket.org/%7Bfcd58e93-ca10-45f7-b2db-c913c5878cc3%7D/"}, "avatar": {"href": "https://bitbucket.org/account/DavidC/avatar/"}}, "nickname": "DavidC", "type": "user", "account_id": null}, "title": "Request to provide integral \"tie-back\" during control saturation", "component": null, "votes": 0, "watches": 2, "content": {"raw": "related to #91 and question http://answers.gazebosim.org/question/985/drcsim-five-related-questions-to-api-and/\r\n\r\nThe joint command message allows general PID control.\r\n\r\nI presume the code will be similar to :\r\n\r\n```\r\n#!c++\r\nerr = (position-measured_position);\r\nInt += ki*err*dt;\r\nInt = clamp(Int, min_effort, max_effort);\r\nOutput = effort + kp*err + Int + kd*(err - old_err)/dt + kp_vel*(velocity - measured_velocity);\r\nOutput = clamp(Output, min_effort, max_effort);\r\n```\r\n\r\nAny time the control output saturates (clamped), the integral term can \"wind up\", which leads to unresponsive controls.  \r\nIndustrial controls that use PID, typically \"tie back\" the integral term if the controller becomes saturated.\r\n\r\nIf Output is clamped, the integral term is recalculated as\r\n```\r\n#!c++\r\nInt = Output - effort - kp*err - kd*(err - old_err)/dt - kp_vel*(velocity - measured_velocity)\r\nInt = clamp(Int, min_effort, max_effort);\r\n```\r\n\r\nThis change avoids integral windup, and leads to more responsive control.\r\n\r\n", "markup": "markdown", "html": "<p>related to <a href=\"#!/osrf/drcsim/issues/91/request-ability-to-reset-integral-term-in\" rel=\"nofollow\" title=\"Request ability to reset integral term in JointCommand PID control\" class=\"ap-connect-link\"><s>#91</s></a> and question <a href=\"http://answers.gazebosim.org/question/985/drcsim-five-related-questions-to-api-and/\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org/question/985/drcsim-five-related-questions-to-api-and/</a></p>\n<p>The joint command message allows general PID control.</p>\n<p>I presume the code will be similar to :</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">-</span><span class=\"n\">measured_position</span><span class=\"p\">);</span>\n<span class=\"n\">Int</span> <span class=\"o\">+=</span> <span class=\"n\">ki</span><span class=\"o\">*</span><span class=\"n\">err</span><span class=\"o\">*</span><span class=\"n\">dt</span><span class=\"p\">;</span>\n<span class=\"n\">Int</span> <span class=\"o\">=</span> <span class=\"n\">clamp</span><span class=\"p\">(</span><span class=\"n\">Int</span><span class=\"p\">,</span> <span class=\"n\">min_effort</span><span class=\"p\">,</span> <span class=\"n\">max_effort</span><span class=\"p\">);</span>\n<span class=\"n\">Output</span> <span class=\"o\">=</span> <span class=\"n\">effort</span> <span class=\"o\">+</span> <span class=\"n\">kp</span><span class=\"o\">*</span><span class=\"n\">err</span> <span class=\"o\">+</span> <span class=\"n\">Int</span> <span class=\"o\">+</span> <span class=\"n\">kd</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">err</span> <span class=\"o\">-</span> <span class=\"n\">old_err</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"n\">dt</span> <span class=\"o\">+</span> <span class=\"n\">kp_vel</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">velocity</span> <span class=\"o\">-</span> <span class=\"n\">measured_velocity</span><span class=\"p\">);</span>\n<span class=\"n\">Output</span> <span class=\"o\">=</span> <span class=\"n\">clamp</span><span class=\"p\">(</span><span class=\"n\">Output</span><span class=\"p\">,</span> <span class=\"n\">min_effort</span><span class=\"p\">,</span> <span class=\"n\">max_effort</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>Any time the control output saturates (clamped), the integral term can \"wind up\", which leads to unresponsive controls.<br />\nIndustrial controls that use PID, typically \"tie back\" the integral term if the controller becomes saturated.</p>\n<p>If Output is clamped, the integral term is recalculated as</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">Int</span> <span class=\"o\">=</span> <span class=\"n\">Output</span> <span class=\"o\">-</span> <span class=\"n\">effort</span> <span class=\"o\">-</span> <span class=\"n\">kp</span><span class=\"o\">*</span><span class=\"n\">err</span> <span class=\"o\">-</span> <span class=\"n\">kd</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">err</span> <span class=\"o\">-</span> <span class=\"n\">old_err</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"n\">dt</span> <span class=\"o\">-</span> <span class=\"n\">kp_vel</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">velocity</span> <span class=\"o\">-</span> <span class=\"n\">measured_velocity</span><span class=\"p\">)</span>\n<span class=\"n\">Int</span> <span class=\"o\">=</span> <span class=\"n\">clamp</span><span class=\"p\">(</span><span class=\"n\">Int</span><span class=\"p\">,</span> <span class=\"n\">min_effort</span><span class=\"p\">,</span> <span class=\"n\">max_effort</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>This change avoids integral windup, and leads to more responsive control.</p>", "type": "rendered"}, "assignee": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "state": "resolved", "version": {"name": "2.1.0", "links": {"self": {"href": "data/repositories/osrf/drcsim/versions/49845.json"}}}, "edited_on": null, "created_on": "2013-01-24T14:30:36.563306+00:00", "milestone": null, "updated_on": "2013-03-14T16:31:46.375587+00:00", "type": "issue", "id": 92}