{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/471/comments/14720604.json"}, "html": {"href": "#!/osrf/drcsim/issues/471#comment-14720604"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/471.json"}}, "type": "issue", "id": 471, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Atlas V1 falls when put in user mode. DRCSIM 4.2"}, "content": {"raw": "The following keeps the v5 atlas from jumping, but it still falls over. I'm guessing we need to fix the controller gains and feed-forward effort in addition to the joint targets:\n~~~\ndiff -r 218ab5bd75c0 drcsim_gazebo_ros_plugins/src/VRCPlugin.cpp\n--- a/drcsim_gazebo_ros_plugins/src/VRCPlugin.cpp\tFri Jan 09 13:50:47 2015 -0800\n+++ b/drcsim_gazebo_ros_plugins/src/VRCPlugin.cpp\tFri Jan 09 17:23:43 2015 -0800\n@@ -1903,16 +1903,16 @@\n \n   int index = 0;\n   this->ac.position[index++]  =  0.0; //back_bkz\n-  this->ac.position[index++]  =  0.0015186156379058957; //back_bky\n+  this->ac.position[index++]  =  0.0023; //back_bky\n   this->ac.position[index++]  =  0.0; //back_bkx\n-  this->ac.position[index++]  =  -0.0010675729718059301; //neck_ry\n+  this->ac.position[index++]  =  -0.1106; //neck_ry\n \n-  this->ac.position[index++]  =  -0.0003740221436601132; //l_hpz\n-  this->ac.position[index++]  =  0.06201673671603203; //l_hpx\n-  this->ac.position[index++]  = -0.1533149015903473;    // l_hpy\n-  this->ac.position[index++]  =  0.5181407332420349; //l_kny\n-  this->ac.position[index++]  = -0.35610817551612854;   // l_aky\n-  this->ac.position[index++]  =  -0.06201673671603203; //l_akx\n+  this->ac.position[index++]  =  -0.0013; //l_hpz\n+  this->ac.position[index++]  =  0.0650; //l_hpx\n+  this->ac.position[index++]  = -0.4739;    // l_hpy\n+  this->ac.position[index++]  =  0.9319; //l_kny\n+  this->ac.position[index++]  = -0.4401;   // l_aky\n+  this->ac.position[index++]  =  -0.0652; //l_akx\n \n   this->ac.position[index++] = -this->ac.position[4]; //r_hpz\n   this->ac.position[index++] = -this->ac.position[5]; //r_hpx\n@@ -1921,12 +1921,12 @@\n   this->ac.position[index++] = this->ac.position[8]; //r_aky\n   this->ac.position[index++] = -this->ac.position[9]; //r_akx\n \n-  this->ac.position[index++] =  0.29983898997306824;  // l_shy || shz\n-  this->ac.position[index++] =  -1.303462266921997; //l_shx\n-  this->ac.position[index++] =  2.0; //l_ely\n-  this->ac.position[index++] =  0.49823325872421265; //l_elx\n-  this->ac.position[index++] =  0.0003098883025813848; //l_wry\n-  this->ac.position[index++] =  -0.0044272784143686295; //l_wrx\n+  this->ac.position[index++] =  -0.2997;  // l_shy || shz\n+  this->ac.position[index++] =  -1.3066; //l_shx\n+  this->ac.position[index++] =  1.853; //l_ely\n+  this->ac.position[index++] =  0.4930; //l_elx\n+  this->ac.position[index++] =  0.0079; //l_wry\n+  this->ac.position[index++] =  -0.0010; //l_wrx\n \n   if (this->atlasVersion >= 4)  // v4 / v5\n     this->ac.position[index++] =  0;  // l_arm_wry2\n~~~", "markup": "markdown", "html": "<p>The following keeps the v5 atlas from jumping, but it still falls over. I'm guessing we need to fix the controller gains and feed-forward effort in addition to the joint targets:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 218ab5bd75c0 drcsim_gazebo_ros_plugins/src/VRCPlugin.cpp</span>\n<span class=\"gd\">--- a/drcsim_gazebo_ros_plugins/src/VRCPlugin.cpp   Fri Jan 09 13:50:47 2015 -0800</span>\n<span class=\"gi\">+++ b/drcsim_gazebo_ros_plugins/src/VRCPlugin.cpp   Fri Jan 09 17:23:43 2015 -0800</span>\n<span class=\"gu\">@@ -1903,16 +1903,16 @@</span>\n\n   int index = 0;\n   this-&gt;ac.position[index++]  =  0.0; //back_bkz\n<span class=\"gd\">-  this-&gt;ac.position[index++]  =  0.0015186156379058957; //back_bky</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++]  =  0.0023; //back_bky</span>\n   this-&gt;ac.position[index++]  =  0.0; //back_bkx\n<span class=\"gd\">-  this-&gt;ac.position[index++]  =  -0.0010675729718059301; //neck_ry</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++]  =  -0.1106; //neck_ry</span>\n\n<span class=\"gd\">-  this-&gt;ac.position[index++]  =  -0.0003740221436601132; //l_hpz</span>\n<span class=\"gd\">-  this-&gt;ac.position[index++]  =  0.06201673671603203; //l_hpx</span>\n<span class=\"gd\">-  this-&gt;ac.position[index++]  = -0.1533149015903473;    // l_hpy</span>\n<span class=\"gd\">-  this-&gt;ac.position[index++]  =  0.5181407332420349; //l_kny</span>\n<span class=\"gd\">-  this-&gt;ac.position[index++]  = -0.35610817551612854;   // l_aky</span>\n<span class=\"gd\">-  this-&gt;ac.position[index++]  =  -0.06201673671603203; //l_akx</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++]  =  -0.0013; //l_hpz</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++]  =  0.0650; //l_hpx</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++]  = -0.4739;    // l_hpy</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++]  =  0.9319; //l_kny</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++]  = -0.4401;   // l_aky</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++]  =  -0.0652; //l_akx</span>\n\n   this-&gt;ac.position[index++] = -this-&gt;ac.position[4]; //r_hpz\n   this-&gt;ac.position[index++] = -this-&gt;ac.position[5]; //r_hpx\n<span class=\"gu\">@@ -1921,12 +1921,12 @@</span>\n   this-&gt;ac.position[index++] = this-&gt;ac.position[8]; //r_aky\n   this-&gt;ac.position[index++] = -this-&gt;ac.position[9]; //r_akx\n\n<span class=\"gd\">-  this-&gt;ac.position[index++] =  0.29983898997306824;  // l_shy || shz</span>\n<span class=\"gd\">-  this-&gt;ac.position[index++] =  -1.303462266921997; //l_shx</span>\n<span class=\"gd\">-  this-&gt;ac.position[index++] =  2.0; //l_ely</span>\n<span class=\"gd\">-  this-&gt;ac.position[index++] =  0.49823325872421265; //l_elx</span>\n<span class=\"gd\">-  this-&gt;ac.position[index++] =  0.0003098883025813848; //l_wry</span>\n<span class=\"gd\">-  this-&gt;ac.position[index++] =  -0.0044272784143686295; //l_wrx</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++] =  -0.2997;  // l_shy || shz</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++] =  -1.3066; //l_shx</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++] =  1.853; //l_ely</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++] =  0.4930; //l_elx</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++] =  0.0079; //l_wry</span>\n<span class=\"gi\">+  this-&gt;ac.position[index++] =  -0.0010; //l_wrx</span>\n\n   if (this-&gt;atlasVersion &gt;= 4)  // v4 / v5\n     this-&gt;ac.position[index++] =  0;  // l_arm_wry2\n</pre></div>", "type": "rendered"}, "created_on": "2015-01-10T01:24:25.180345+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-01-10T01:25:49.585346+00:00", "type": "issue_comment", "id": 14720604}