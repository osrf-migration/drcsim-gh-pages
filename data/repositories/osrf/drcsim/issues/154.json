{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "links": {"attachments": {"href": "data/repositories/osrf/drcsim/issues/154/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/drcsim/issues/154.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/issues/154/watch"}, "comments": {"href": "data/repositories/osrf/drcsim/issues/154/comments_page=1.json"}, "html": {"href": "#!/osrf/drcsim/issues/154/jointcommands-position-field-set-to-00"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/issues/154/vote"}}, "reporter": {"display_name": "piotr_kaczmarek", "uuid": "{cae5a25a-1c73-43b2-a739-ac6c5ea9d969}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcae5a25a-1c73-43b2-a739-ac6c5ea9d969%7D"}, "html": {"href": "https://bitbucket.org/%7Bcae5a25a-1c73-43b2-a739-ac6c5ea9d969%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2b17f732a4d35b5ffb2eee85bbf4ed21d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsP-3.png"}}, "nickname": "piotr_kaczmarek", "type": "user", "account_id": "557058:9e487275-b206-4efb-af85-639a596bf4a4"}, "title": "JointCommands position field set to 0.0 causes random jerks on 32bit builds", "component": null, "votes": 0, "watches": 4, "content": {"raw": "Bug occurs when publishing on /atlas/joint_commands topic and not setting every position field to non-zero value (that means it happens when you set some joint positions to 0.0 or when you don't set them at all).\r\n\r\nAt first it behaves as expected, but after a few minutes of publishing on that topic in that way it causes some random and strong jerks in those not set joints accelerating the robot and eventually leading to its collapse (disappearing all its limbs but torso).\r\n\r\nReproducing the bug:\r\n\r\n1. Use code from this tutorial: http://gazebosim.org/wiki/Tutorials/drcsim/2.0/sending_joint_controller_commands_over_ros\r\n\r\n2. Change the following lines in void SetJointStates():\r\n```\r\n#!c++\r\n for (unsigned int i = 0; i < jointcommands.name.size(); i++)\r\n      jointcommands.position[i] =\r\n        3.2* sin((ros::Time::now() - startTime).toSec());\r\n```\r\nto:\r\n```\r\n#!c++\r\n for (unsigned int i = 0; i < jointcommands.name.size(); i++)\r\n      jointcommands.position[i] = 0.0;\r\n jointcommands.position[16] = 3.2* sin((ros::Time::now() - startTime).toSec());\r\n```\r\n\r\n3. Build the node.\r\n4. Run simulator: roslaunch atlas_utils atlas.launch\r\n5. Disable gravity, delete the ground_plane\r\n6. Run the modified tutorial node: rosrun drcsim_joint_commands_tutorial publish_joint_commands\r\n7. Robot swings only one arm, it looks ok.\r\n8. Wait few minutes for a bug to occur. It varies from 2 minutes to over 10.\r\n\r\n\r\nWhat else I've noticed:\r\n\r\nThe following also leads to bug:\r\n\r\n```\r\n#!c++\r\n// for (unsigned int i = 0; i < jointcommands.name.size(); i++)\r\n//      jointcommands.position[i] = 0.0;\r\n jointcommands.position[16] = 3.2* sin((ros::Time::now() - startTime).toSec());\r\n\r\n```\r\n\r\nThe following doesn't lead to bug:\r\n\r\n```\r\n#!c++\r\n for (unsigned int i = 0; i < jointcommands.name.size(); i++)\r\n      jointcommands.position[i] = 0.1;\r\n jointcommands.position[16] = 3.2* sin((ros::Time::now() - startTime).toSec());\r\n\r\n```\r\n\r\nI'm using 32bit Ubuntu 12.04 and drcsim-2.1, but it also happened on previous drcsim versions.\r\n", "markup": "markdown", "html": "<p>Bug occurs when publishing on /atlas/joint_commands topic and not setting every position field to non-zero value (that means it happens when you set some joint positions to 0.0 or when you don't set them at all).</p>\n<p>At first it behaves as expected, but after a few minutes of publishing on that topic in that way it causes some random and strong jerks in those not set joints accelerating the robot and eventually leading to its collapse (disappearing all its limbs but torso).</p>\n<p>Reproducing the bug:</p>\n<ol>\n<li>\n<p>Use code from this tutorial: <a href=\"http://gazebosim.org/wiki/Tutorials/drcsim/2.0/sending_joint_controller_commands_over_ros\" rel=\"nofollow\" class=\"ap-connect-link\">http://gazebosim.org/wiki/Tutorials/drcsim/2.0/sending_joint_controller_commands_over_ros</a></p>\n</li>\n<li>\n<p>Change the following lines in void SetJointStates():</p>\n</li>\n</ol>\n<div class=\"codehilite language-c++\"><pre><span></span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">jointcommands</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span> <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n      <span class=\"n\">jointcommands</span><span class=\"p\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span>\n        <span class=\"mf\">3.2</span><span class=\"o\">*</span> <span class=\"n\">sin</span><span class=\"p\">((</span><span class=\"n\">ros</span><span class=\"o\">::</span><span class=\"n\">Time</span><span class=\"o\">::</span><span class=\"n\">now</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">startTime</span><span class=\"p\">).</span><span class=\"n\">toSec</span><span class=\"p\">());</span>\n</pre></div>\n\n\n<p>to:</p>\n<div class=\"codehilite language-c++\"><pre><span></span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">jointcommands</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span> <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n      <span class=\"n\">jointcommands</span><span class=\"p\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span><span class=\"p\">;</span>\n <span class=\"n\">jointcommands</span><span class=\"p\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">3.2</span><span class=\"o\">*</span> <span class=\"n\">sin</span><span class=\"p\">((</span><span class=\"n\">ros</span><span class=\"o\">::</span><span class=\"n\">Time</span><span class=\"o\">::</span><span class=\"n\">now</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">startTime</span><span class=\"p\">).</span><span class=\"n\">toSec</span><span class=\"p\">());</span>\n</pre></div>\n\n\n<ol>\n<li>Build the node.</li>\n<li>Run simulator: roslaunch atlas_utils atlas.launch</li>\n<li>Disable gravity, delete the ground_plane</li>\n<li>Run the modified tutorial node: rosrun drcsim_joint_commands_tutorial publish_joint_commands</li>\n<li>Robot swings only one arm, it looks ok.</li>\n<li>Wait few minutes for a bug to occur. It varies from 2 minutes to over 10.</li>\n</ol>\n<p>What else I've noticed:</p>\n<p>The following also leads to bug:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"c1\">// for (unsigned int i = 0; i &lt; jointcommands.name.size(); i++)</span>\n<span class=\"c1\">//      jointcommands.position[i] = 0.0;</span>\n <span class=\"n\">jointcommands</span><span class=\"p\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">3.2</span><span class=\"o\">*</span> <span class=\"n\">sin</span><span class=\"p\">((</span><span class=\"n\">ros</span><span class=\"o\">::</span><span class=\"n\">Time</span><span class=\"o\">::</span><span class=\"n\">now</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">startTime</span><span class=\"p\">).</span><span class=\"n\">toSec</span><span class=\"p\">());</span>\n</pre></div>\n\n\n<p>The following doesn't lead to bug:</p>\n<div class=\"codehilite language-c++\"><pre><span></span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">jointcommands</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span> <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n      <span class=\"n\">jointcommands</span><span class=\"p\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span><span class=\"p\">;</span>\n <span class=\"n\">jointcommands</span><span class=\"p\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">3.2</span><span class=\"o\">*</span> <span class=\"n\">sin</span><span class=\"p\">((</span><span class=\"n\">ros</span><span class=\"o\">::</span><span class=\"n\">Time</span><span class=\"o\">::</span><span class=\"n\">now</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">startTime</span><span class=\"p\">).</span><span class=\"n\">toSec</span><span class=\"p\">());</span>\n</pre></div>\n\n\n<p>I'm using 32bit Ubuntu 12.04 and drcsim-2.1, but it also happened on previous drcsim versions.</p>", "type": "rendered"}, "assignee": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "state": "open", "version": null, "edited_on": null, "created_on": "2013-03-16T15:07:42.701434+00:00", "milestone": null, "updated_on": "2014-09-16T16:19:09.750248+00:00", "type": "issue", "id": 154}