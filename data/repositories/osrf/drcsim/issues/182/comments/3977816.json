{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/182/comments/3977816.json"}, "html": {"href": "#!/osrf/drcsim/issues/182#comment-3977816"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/182.json"}}, "type": "issue", "id": 182, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Integral tie-back in AtlasPlugin.cpp seems wrong - causes control glitches"}, "content": {"raw": "That solves about 2/3 of the problem for us.  It no longer causes an inversion of the k_i_q_i term and a wild swing in the wrong direction.  So, it is definitely an improvement.  It still zeroes out the k_i_q_i term which can cause overshoot.\n\nIn an example case - the arm joints angles are zero (arm straight out at side).  The steady state k_i_q_i term for the l_arm_shx joint is about 60.  If you make a step change to 0.1 (down) the tie-back will be activated unless kd_position is less than 1.7.  The proposed tie-back will zero k_i_q_i.  Without the integral term holding the arm up, the down motion will overshoot and then recover as k_i_q_i comes back up to about 60.\n\nI don't know enough about the normal use cases for tie-back to know if this change would impact that.\n\nOur preference would be to have the ability to disable tie-back, but the proposed change certainly improves the behavior for us.", "markup": "markdown", "html": "<p>That solves about 2/3 of the problem for us.  It no longer causes an inversion of the k_i_q_i term and a wild swing in the wrong direction.  So, it is definitely an improvement.  It still zeroes out the k_i_q_i term which can cause overshoot.</p>\n<p>In an example case - the arm joints angles are zero (arm straight out at side).  The steady state k_i_q_i term for the l_arm_shx joint is about 60.  If you make a step change to 0.1 (down) the tie-back will be activated unless kd_position is less than 1.7.  The proposed tie-back will zero k_i_q_i.  Without the integral term holding the arm up, the down motion will overshoot and then recover as k_i_q_i comes back up to about 60.</p>\n<p>I don't know enough about the normal use cases for tie-back to know if this change would impact that.</p>\n<p>Our preference would be to have the ability to disable tie-back, but the proposed change certainly improves the behavior for us.</p>", "type": "rendered"}, "created_on": "2013-05-06T16:57:29.826270+00:00", "user": {"display_name": "GoRobotGo", "uuid": "{2fd8dac8-286d-461a-b7dd-dba99deea025}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2fd8dac8-286d-461a-b7dd-dba99deea025%7D"}, "html": {"href": "https://bitbucket.org/%7B2fd8dac8-286d-461a-b7dd-dba99deea025%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6431739b101c18640b5a84d359fdd274d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsG-4.png"}}, "nickname": "GoRobotGo", "type": "user", "account_id": "557058:44b40072-c04b-41ae-ad09-376db9ebffa1"}, "updated_on": null, "type": "issue_comment", "id": 3977816}