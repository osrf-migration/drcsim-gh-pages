{"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/182/comments/3688229.json"}, "html": {"href": "#!/osrf/drcsim/issues/182#comment-3688229"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/182.json"}}, "type": "issue", "id": 182, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Integral tie-back in AtlasPlugin.cpp seems wrong - causes control glitches"}, "content": {"raw": "This code is generally intended to prevent integral wind up in the same direction as the joint command is saturated, and provide continuous control as the system moves out of saturation.  If the very large step change in the opposite direction causes saturation the other way, then I could see this \"inverting\" the integral term, and causing overshooting if the integral gain is relatively small.\n\nThe large step changes sounds more like a bang/bang style of control; do you need the integral term at all in those conditions?  This code is only active if the integral term is non-zero and can be further limited by the i_limits.\n\nRemoving the clamping will cause a different set of control issues for those using integral control.  That said, since I first made this suggestion, we have moved away from using integral control and will do so in limited situations.\n\nA compromise would be to have a parameter that allows the user to turn clamping on or off for the system\n\n\n\n\n", "markup": "markdown", "html": "<p>This code is generally intended to prevent integral wind up in the same direction as the joint command is saturated, and provide continuous control as the system moves out of saturation.  If the very large step change in the opposite direction causes saturation the other way, then I could see this \"inverting\" the integral term, and causing overshooting if the integral gain is relatively small.</p>\n<p>The large step changes sounds more like a bang/bang style of control; do you need the integral term at all in those conditions?  This code is only active if the integral term is non-zero and can be further limited by the i_limits.</p>\n<p>Removing the clamping will cause a different set of control issues for those using integral control.  That said, since I first made this suggestion, we have moved away from using integral control and will do so in limited situations.</p>\n<p>A compromise would be to have a parameter that allows the user to turn clamping on or off for the system</p>", "type": "rendered"}, "created_on": "2013-04-10T02:32:39.500238+00:00", "user": {"display_name": "David Conner", "uuid": "{4375dc4a-9371-4c51-973e-1f1d045590c5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4375dc4a-9371-4c51-973e-1f1d045590c5%7D"}, "html": {"href": "https://bitbucket.org/%7B4375dc4a-9371-4c51-973e-1f1d045590c5%7D/"}, "avatar": {"href": "https://bitbucket.org/account/dcconner/avatar/"}}, "nickname": "dcconner", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 3688229}