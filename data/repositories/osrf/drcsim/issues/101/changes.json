{"pagelen": 100, "values": [{"changes": {"state": {"new": "wontfix", "old": "new"}}, "links": {"self": {"href": "data/repositories/osrf/drcsim/issues/101/changes/2984231.json"}, "html": {"href": "#!/osrf/drcsim/issues/101#comment-2984231"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/101.json"}}, "type": "issue", "id": 101, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide synchronous control"}, "created_on": "2013-01-30T02:27:00.228999+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "message": {"raw": "Simulation is meant to be a stand-in for the physical system, with which you can't run synchronously.  So we don't support writing ROS controller nodes that run in that way.  If you really want to run synchronously with simulation, then your code needs to be inside a Gazebo plugin, where you can do whatever you want, while time is frozen.\n\nOn a related note, drcsim 2.0, expected soon, will include UDP-based control via ROS that our internal testing suggests will support pretty high control rates (higher than your 200Hz).", "markup": "markdown", "html": "<p>Simulation is meant to be a stand-in for the physical system, with which you can't run synchronously.  So we don't support writing ROS controller nodes that run in that way.  If you really want to run synchronously with simulation, then your code needs to be inside a Gazebo plugin, where you can do whatever you want, while time is frozen.</p>\n<p>On a related note, drcsim 2.0, expected soon, will include UDP-based control via ROS that our internal testing suggests will support pretty high control rates (higher than your 200Hz).</p>", "type": "rendered"}, "type": "issue_change", "id": 2984231}, {"changes": {"state": {"new": "open", "old": "wontfix"}}, "links": {"self": {"href": "data/repositories/osrf/drcsim/issues/101/changes/2984371.json"}, "html": {"href": "#!/osrf/drcsim/issues/101#comment-2984371"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/101.json"}}, "type": "issue", "id": 101, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide synchronous control"}, "created_on": "2013-01-30T02:47:16.307935+00:00", "user": {"display_name": "Jesper Smith", "uuid": "{61d9fe7d-e554-408c-99fb-faefa9c96114}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D"}, "html": {"href": "https://bitbucket.org/%7B61d9fe7d-e554-408c-99fb-faefa9c96114%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/56b6560717cfbb0f4a2cc0af6e638650d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-4.png"}}, "nickname": "jespersmith", "type": "user", "account_id": "557058:2e842f1c-d9d5-48b1-88ae-5dd9e81a6f77"}, "message": {"raw": "Let me rephrase the problem a bit. On our physical robots, we run a real time OS and our control loop is guaranteed to be run at (in our case) x Hz, with the restriction that our control loop finishes in less than 1/x seconds. It is also guaranteed that sensors are read and control signals applied at every tick.\n\nThe simulation is not guaranteed to run real time, especially not on all our development computers. That means that, even if we use a realtime system to guarantee a x Hz loop rate for our control, the effective loop rate in the simulation is not constant. Furthermore, udp packets are not guaranteed to be delivered, and do not neccesarly arrive in order. \n\nSo maybe synchronous control is a misnomer, but we would like to have a guaranteed loop rate of our controller with respect to simulation time. \n\nOur algorithms are based on force control of the robot instead of position control, so we cannot use the builtin pid controllers(which i assume are updated with a constant loop rate with respect to the simulation)", "markup": "markdown", "html": "<p>Let me rephrase the problem a bit. On our physical robots, we run a real time OS and our control loop is guaranteed to be run at (in our case) x Hz, with the restriction that our control loop finishes in less than 1/x seconds. It is also guaranteed that sensors are read and control signals applied at every tick.</p>\n<p>The simulation is not guaranteed to run real time, especially not on all our development computers. That means that, even if we use a realtime system to guarantee a x Hz loop rate for our control, the effective loop rate in the simulation is not constant. Furthermore, udp packets are not guaranteed to be delivered, and do not neccesarly arrive in order. </p>\n<p>So maybe synchronous control is a misnomer, but we would like to have a guaranteed loop rate of our controller with respect to simulation time. </p>\n<p>Our algorithms are based on force control of the robot instead of position control, so we cannot use the builtin pid controllers(which i assume are updated with a constant loop rate with respect to the simulation)</p>", "type": "rendered"}, "type": "issue_change", "id": 2984371}, {"changes": {"version": {"new": "2.1.0", "old": "None"}}, "links": {"self": {"href": "data/repositories/osrf/drcsim/issues/101/changes/3149536.json"}, "html": {"href": "#!/osrf/drcsim/issues/101#comment-3149536"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/101.json"}}, "type": "issue", "id": 101, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide synchronous control"}, "created_on": "2013-02-15T23:29:59.264187+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "message": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "type": "issue_change", "id": 3149536}, {"changes": {"priority": {"new": "critical", "old": "major"}}, "links": {"self": {"href": "data/repositories/osrf/drcsim/issues/101/changes/3529156.json"}, "html": {"href": "#!/osrf/drcsim/issues/101#comment-3529156"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/101.json"}}, "type": "issue", "id": 101, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide synchronous control"}, "created_on": "2013-03-26T18:08:51.085871+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "message": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "type": "issue_change", "id": 3529156}, {"changes": {"state": {"new": "resolved", "old": "open"}}, "links": {"self": {"href": "data/repositories/osrf/drcsim/issues/101/changes/3945217.json"}, "html": {"href": "#!/osrf/drcsim/issues/101#comment-3945217"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/drcsim/issues/101.json"}}, "type": "issue", "id": 101, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "title": "Provide synchronous control"}, "created_on": "2013-05-02T19:49:22.298869+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "message": {"raw": "pull request #249", "markup": "markdown", "html": "<p><a href=\"#!/osrf/drcsim/pull-requests/249/synchronized-lock-step-control\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #249</a></p>", "type": "rendered"}, "type": "issue_change", "id": 3945217}], "page": 1, "size": 5}