{"links": {"self": {"href": "data/repositories/osrf/drcsim/pullrequests/130/comments/135162.json"}, "html": {"href": "#!/osrf/drcsim/pull-requests/130/_/diff#comment-135162"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 130, "links": {"self": {"href": "data/repositories/osrf/drcsim/pullrequests/130.json"}, "html": {"href": "#!/osrf/drcsim/pull-requests/130"}}, "title": "add integral tie-back term issue #92"}, "content": {"raw": "I couldn't find this file since branch is closed.\n\nIt appears that you are not protecting against divide by zero if ki_position is zero.\n\nAlso, I notice that you are integrating error, and then applying ki_position.  Any change in ki_position will cause a bump in the output even if the error is zero.  \n\nI would integrate ki_position*error.  This means that to elminate integral term , you must zero out the integrated value, but that was the reason for #91\n\nPart of the issue is that these systems change control modes, and therefore gains often.  In most cases I would expect people to not use a lot of integral control, but the behavior should be predictable.  Now, if I want to change the integral gain, I must recalculate the integral term to give \"bumpless\" control.\n", "markup": "markdown", "html": "<p>I couldn't find this file since branch is closed.</p>\n<p>It appears that you are not protecting against divide by zero if ki_position is zero.</p>\n<p>Also, I notice that you are integrating error, and then applying ki_position.  Any change in ki_position will cause a bump in the output even if the error is zero.  </p>\n<p>I would integrate ki_position*error.  This means that to elminate integral term , you must zero out the integrated value, but that was the reason for <a href=\"#!/osrf/drcsim/issues/91/request-ability-to-reset-integral-term-in\" rel=\"nofollow\" title=\"Request ability to reset integral term in JointCommand PID control\" class=\"ap-connect-link\"><s>#91</s></a></p>\n<p>Part of the issue is that these systems change control modes, and therefore gains often.  In most cases I would expect people to not use a lot of integral control, but the behavior should be predictable.  Now, if I want to change the integral gain, I must recalculate the integral term to give \"bumpless\" control.</p>", "type": "rendered"}, "created_on": "2013-02-28T15:11:07.756079+00:00", "user": {"display_name": "DavidC", "uuid": "{fcd58e93-ca10-45f7-b2db-c913c5878cc3}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfcd58e93-ca10-45f7-b2db-c913c5878cc3%7D"}, "html": {"href": "https://bitbucket.org/%7Bfcd58e93-ca10-45f7-b2db-c913c5878cc3%7D/"}, "avatar": {"href": "https://bitbucket.org/account/DavidC/avatar/"}}, "nickname": "DavidC", "type": "user", "account_id": null}, "updated_on": "2013-02-28T15:15:25.226334+00:00", "type": "pullrequest_comment", "id": 135162}