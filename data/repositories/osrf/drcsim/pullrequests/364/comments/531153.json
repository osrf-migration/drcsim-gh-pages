{"links": {"self": {"href": "data/repositories/osrf/drcsim/pullrequests/364/comments/531153.json"}, "html": {"href": "#!/osrf/drcsim/pull-requests/364/_/diff#comment-531153"}}, "parent": {"id": 498239, "links": {"self": {"href": "data/repositories/osrf/drcsim/pullrequests/364/comments/498239.json"}, "html": {"href": "#!/osrf/drcsim/pull-requests/364/_/diff#comment-498239"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 364, "links": {"self": {"href": "data/repositories/osrf/drcsim/pullrequests/364.json"}, "html": {"href": "#!/osrf/drcsim/pull-requests/364"}}, "title": "Add tutorials for hardware / simulation bridging (#337)"}, "content": {"raw": "That's a fair point.  I'm not sure how to provide that capability.  Here are couple of ideas:\n\n1. Rely on users to manually tune `real_time_update_rate` in their `.world` files to match their computers' performance.\n1. Add a mechanism to `atlas_interface` to set the `desired_controller_period_ms` value.  That would be a call (or variable) that's not present in the AtlasRobotInterface SDK, so code using it would need some conditional compilation when moving between simulation and hardware.  Also, to make it useful, we should probably add a ROS topic to configure the controller synchronization time parameters, which are currently [hardcoded in the AtlasPlugin](#!/osrf/drcsim/src/c13fb7bd021501f25b2115c90af4f85e1ad58b63/ros/atlas_msgs/AtlasPlugin.cpp?at=default#cl-62).  Users could then tune the resulting set of parameters to match their computers' performance.\n\nPerhaps not surprisingly, I'm leaning toward the first option.  The second option is more work, and I don't expect that it would be any easier to use.", "markup": "markdown", "html": "<p>That's a fair point.  I'm not sure how to provide that capability.  Here are couple of ideas:</p>\n<ol>\n<li>Rely on users to manually tune <code>real_time_update_rate</code> in their <code>.world</code> files to match their computers' performance.</li>\n<li>Add a mechanism to <code>atlas_interface</code> to set the <code>desired_controller_period_ms</code> value.  That would be a call (or variable) that's not present in the AtlasRobotInterface SDK, so code using it would need some conditional compilation when moving between simulation and hardware.  Also, to make it useful, we should probably add a ROS topic to configure the controller synchronization time parameters, which are currently <a data-is-external-link=\"true\" href=\"#!/osrf/drcsim/src/c13fb7bd021501f25b2115c90af4f85e1ad58b63/ros/atlas_msgs/AtlasPlugin.cpp?at=default#cl-62\" rel=\"nofollow\">hardcoded in the AtlasPlugin</a>.  Users could then tune the resulting set of parameters to match their computers' performance.</li>\n</ol>\n<p>Perhaps not surprisingly, I'm leaning toward the first option.  The second option is more work, and I don't expect that it would be any easier to use.</p>", "type": "rendered"}, "created_on": "2013-09-04T18:54:57.887281+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": "2013-09-04T18:54:57.896023+00:00", "type": "pullrequest_comment", "id": 531153}