{"rendered": {"reason": {"raw": "I've put these changes into an issue_202 branch, that takes this a bit further. There shouldn't be hanging on the side of the actionlib_server, and addresses some other issues.\r\n\r\nThanks for the code!", "markup": "markdown", "html": "<p>I've put these changes into an issue_202 branch, that takes this a bit further. There shouldn't be hanging on the side of the actionlib_server, and addresses some other issues.</p>\n<p>Thanks for the code!</p>", "type": "rendered"}, "description": {"raw": "(from issue text) Issue #202\r\n\r\nRight now any clients using the actionlib server will hang forever since the server does not report completion. At least right now I do not care about any of the feedback within, but just want my client to be able to know when it can send more footstep commands. \r\n\r\n\r\nAdding \r\n```\r\n#!c++\r\nthis->actionServer->setSucceeded(actionServerResult);\r\n``` \r\nto line 250 of ``actionlib_server.cpp`` would accomplish this. I suppose also \r\n```\r\n#!c++\r\nthis->actionServer->setAborted(actionServerResult);\r\n``` \r\nshould also be added to the appropriate cases within the switch statement of ``ASIActionServer::ASIStateCB()``", "markup": "markdown", "html": "<p>(from issue text) Issue <a href=\"#!/osrf/drcsim/issues/202/set-succeeded-in-actionlib_server\" rel=\"nofollow\" title=\"Set Succeeded in actionlib_server\" class=\"ap-connect-link\"><s>#202</s></a></p>\n<p>Right now any clients using the actionlib server will hang forever since the server does not report completion. At least right now I do not care about any of the feedback within, but just want my client to be able to know when it can send more footstep commands. </p>\n<p>Adding </p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">actionServer</span><span class=\"o\">-&gt;</span><span class=\"n\">setSucceeded</span><span class=\"p\">(</span><span class=\"n\">actionServerResult</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>to line 250 of <code>actionlib_server.cpp</code> would accomplish this. I suppose also </p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">actionServer</span><span class=\"o\">-&gt;</span><span class=\"n\">setAborted</span><span class=\"p\">(</span><span class=\"n\">actionServerResult</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>should also be added to the appropriate cases within the switch statement of <code>ASIActionServer::ASIStateCB()</code></p>", "type": "rendered"}, "title": {"raw": "Fix issue 202 ", "markup": "markdown", "html": "<p>Fix issue 202 </p>", "type": "rendered"}}, "type": "pullrequest", "description": "(from issue text) Issue #202\r\n\r\nRight now any clients using the actionlib server will hang forever since the server does not report completion. At least right now I do not care about any of the feedback within, but just want my client to be able to know when it can send more footstep commands. \r\n\r\n\r\nAdding \r\n```\r\n#!c++\r\nthis->actionServer->setSucceeded(actionServerResult);\r\n``` \r\nto line 250 of ``actionlib_server.cpp`` would accomplish this. I suppose also \r\n```\r\n#!c++\r\nthis->actionServer->setAborted(actionServerResult);\r\n``` \r\nshould also be added to the appropriate cases within the switch statement of ``ASIActionServer::ASIStateCB()``", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/pullrequests/210/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/diffstat/jhoare/drcsim_jhoare:cf846e5d9624%0Ddd346dba21a6?from_pullrequest_id=210"}, "commits": {"href": "data/repositories/osrf/drcsim/pullrequests/210/commits.json"}, "self": {"href": "data/repositories/osrf/drcsim/pullrequests/210.json"}, "comments": {"href": "data/repositories/osrf/drcsim/pullrequests/210/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/pullrequests/210/merge"}, "html": {"href": "#!/osrf/drcsim/pull-requests/210"}, "activity": {"href": "data/repositories/osrf/drcsim/pullrequests/210/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/diff/jhoare/drcsim_jhoare:cf846e5d9624%0Ddd346dba21a6?from_pullrequest_id=210"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/drcsim/pullrequests/210/approve"}, "statuses": {"href": "data/repositories/osrf/drcsim/pullrequests/210/statuses_page=1.json"}}, "title": "Fix issue 202 ", "close_source_branch": false, "reviewers": [], "id": 210, "destination": {"commit": {"hash": "dd346dba21a6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/drcsim/commit/dd346dba21a6.json"}, "html": {"href": "#!/osrf/drcsim/commits/dd346dba21a6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/drcsim.json"}, "html": {"href": "#!/osrf/drcsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{247b5408-ae91-4e3c-b2f9-a21994658d11}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim", "full_name": "osrf/drcsim", "uuid": "{247b5408-ae91-4e3c-b2f9-a21994658d11}"}, "branch": {"name": "drcsim_2.4"}}, "created_on": "2013-04-17T00:47:12.848911+00:00", "summary": {"raw": "(from issue text) Issue #202\r\n\r\nRight now any clients using the actionlib server will hang forever since the server does not report completion. At least right now I do not care about any of the feedback within, but just want my client to be able to know when it can send more footstep commands. \r\n\r\n\r\nAdding \r\n```\r\n#!c++\r\nthis->actionServer->setSucceeded(actionServerResult);\r\n``` \r\nto line 250 of ``actionlib_server.cpp`` would accomplish this. I suppose also \r\n```\r\n#!c++\r\nthis->actionServer->setAborted(actionServerResult);\r\n``` \r\nshould also be added to the appropriate cases within the switch statement of ``ASIActionServer::ASIStateCB()``", "markup": "markdown", "html": "<p>(from issue text) Issue <a href=\"#!/osrf/drcsim/issues/202/set-succeeded-in-actionlib_server\" rel=\"nofollow\" title=\"Set Succeeded in actionlib_server\" class=\"ap-connect-link\"><s>#202</s></a></p>\n<p>Right now any clients using the actionlib server will hang forever since the server does not report completion. At least right now I do not care about any of the feedback within, but just want my client to be able to know when it can send more footstep commands. </p>\n<p>Adding </p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">actionServer</span><span class=\"o\">-&gt;</span><span class=\"n\">setSucceeded</span><span class=\"p\">(</span><span class=\"n\">actionServerResult</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>to line 250 of <code>actionlib_server.cpp</code> would accomplish this. I suppose also </p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">actionServer</span><span class=\"o\">-&gt;</span><span class=\"n\">setAborted</span><span class=\"p\">(</span><span class=\"n\">actionServerResult</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>should also be added to the appropriate cases within the switch statement of <code>ASIActionServer::ASIStateCB()</code></p>", "type": "rendered"}, "source": {"commit": {"hash": "cf846e5d9624", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jhoare/drcsim_jhoare/commit/cf846e5d9624"}, "html": {"href": "https://bitbucket.org/jhoare/drcsim_jhoare/commits/cf846e5d9624"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jhoare/drcsim_jhoare"}, "html": {"href": "https://bitbucket.org/jhoare/drcsim_jhoare"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b80688f3-232a-4cff-b370-46a07d9ca167}ts=c_plus_plus"}}, "type": "repository", "name": "drcsim_jhoare", "full_name": "jhoare/drcsim_jhoare", "uuid": "{b80688f3-232a-4cff-b370-46a07d9ca167}"}, "branch": {"name": "issue_202"}}, "comment_count": 4, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2013-04-17T01:42:48.339692+00:00", "type": "participant", "approved": false, "user": {"display_name": "John Hoare", "uuid": "{f2fb0aad-9933-4b16-a710-d9fe1486032f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf2fb0aad-9933-4b16-a710-d9fe1486032f%7D"}, "html": {"href": "https://bitbucket.org/%7Bf2fb0aad-9933-4b16-a710-d9fe1486032f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8caca58d5b3df735099a63ec2937a66ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJH-1.png"}}, "nickname": "jhoare", "type": "user", "account_id": "557058:8ecbba08-9b4d-49d1-902f-70e85314d9ea"}}, {"role": "PARTICIPANT", "participated_on": "2013-04-17T02:58:00.405025+00:00", "type": "participant", "approved": false, "user": {"display_name": "Stephen Brawner", "uuid": "{f6bd3fe7-4d17-4503-9232-0915d6e97879}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf6bd3fe7-4d17-4503-9232-0915d6e97879%7D"}, "html": {"href": "https://bitbucket.org/%7Bf6bd3fe7-4d17-4503-9232-0915d6e97879%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/68ef29dce5cc8f01a4d01c17a97226bdd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSB-1.png"}}, "nickname": "brawner", "type": "user", "account_id": "557058:84c67412-a2f4-4754-87f1-e4c1e3fe58fe"}}], "reason": "I've put these changes into an issue_202 branch, that takes this a bit further. There shouldn't be hanging on the side of the actionlib_server, and addresses some other issues.\r\n\r\nThanks for the code!", "updated_on": "2013-04-17T22:04:49.669346+00:00", "author": {"display_name": "John Hoare", "uuid": "{f2fb0aad-9933-4b16-a710-d9fe1486032f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf2fb0aad-9933-4b16-a710-d9fe1486032f%7D"}, "html": {"href": "https://bitbucket.org/%7Bf2fb0aad-9933-4b16-a710-d9fe1486032f%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8caca58d5b3df735099a63ec2937a66ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJH-1.png"}}, "nickname": "jhoare", "type": "user", "account_id": "557058:8ecbba08-9b4d-49d1-902f-70e85314d9ea"}, "merge_commit": null, "closed_by": {"display_name": "Stephen Brawner", "uuid": "{f6bd3fe7-4d17-4503-9232-0915d6e97879}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf6bd3fe7-4d17-4503-9232-0915d6e97879%7D"}, "html": {"href": "https://bitbucket.org/%7Bf6bd3fe7-4d17-4503-9232-0915d6e97879%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/68ef29dce5cc8f01a4d01c17a97226bdd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSB-1.png"}}, "nickname": "brawner", "type": "user", "account_id": "557058:84c67412-a2f4-4754-87f1-e4c1e3fe58fe"}}