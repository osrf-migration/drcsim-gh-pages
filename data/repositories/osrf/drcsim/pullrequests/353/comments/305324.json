{"links": {"self": {"href": "data/repositories/osrf/drcsim/pullrequests/353/comments/305324.json"}, "html": {"href": "#!/osrf/drcsim/pull-requests/353/_/diff#comment-305324"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 353, "links": {"self": {"href": "data/repositories/osrf/drcsim/pullrequests/353.json"}, "html": {"href": "#!/osrf/drcsim/pull-requests/353"}}, "title": "Check camera util is initialized before publishing"}, "content": {"raw": "here is a very crude script to test. The argument is the launch file with ros_subscribers added. Also make sure you backup and remove the core file in your `~/.ros dir`:\n\n\n```\n#!/bin/bash\n\nulimit -c unlimited\n\nif [ \"$#\" -eq \"0\" ]; then\n  echo Missing argument: path to launch file needed\n  exit\nfi\n\ncrash_count=0\nno_topic_count=0\nfail_count=0\n\nfor i in `seq 1 15`; do\n  roslaunch $1 gzname:=gzserver &\n  sleep 12\n  if [ `ls ~/.ros/ | grep core$ | wc -l` -ge 1 ]\n  then\n    crash_count=$(($crash_count+1))\n    fail_count=$(($fail_count+1))\n    echo \"Failed: gazebo crashed\"\n    mv ~/.ros/core ~/.ros/core.$crash_count\n  elif [ \"`rostopic info /multisense_sl/camera/left/image_raw 2>&1 > /dev/null | grep ERROR`\" != \"\" ]\n  then\n    no_topic_count=$(($no_topic_count+1))\n    fail_count=$(($fail_count+1))\n    echo \"Failed: no topic found\"\n  fi\n  killall -INT roslaunch rosmaster state_publisher rostopic\n  sleep 15\n  echo \"\\n===== Run $i completed =====\"\n  if [ $fail_count -ge 1 ]\n  then\n    echo \"Failures so far: $fail_count\"\n  fi\ndone\n\nif [ $fail_count -ge 1 ]\nthen\n  echo \"Failed $fail_count times!\"\n  echo \"No. of crashes: $crash_count\"\n  echo \"No. of failed subscriptions: $no_topic_count\"\nelse\n  echo \"All passed\"\nfi\n\n#!bash\n\n\n```", "markup": "markdown", "html": "<p>here is a very crude script to test. The argument is the launch file with ros_subscribers added. Also make sure you backup and remove the core file in your <code>~/.ros dir</code>:</p>\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"ch\">#!/bin/bash</span>\n\n<span class=\"nb\">ulimit</span> -c unlimited\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">&quot;</span><span class=\"nv\">$#</span><span class=\"s2\">&quot;</span> -eq <span class=\"s2\">&quot;0&quot;</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n  <span class=\"nb\">echo</span> Missing argument: path to launch file needed\n  <span class=\"nb\">exit</span>\n<span class=\"k\">fi</span>\n\n<span class=\"nv\">crash_count</span><span class=\"o\">=</span><span class=\"m\">0</span>\n<span class=\"nv\">no_topic_count</span><span class=\"o\">=</span><span class=\"m\">0</span>\n<span class=\"nv\">fail_count</span><span class=\"o\">=</span><span class=\"m\">0</span>\n\n<span class=\"k\">for</span> i in <span class=\"sb\">`</span>seq <span class=\"m\">1</span> <span class=\"m\">15</span><span class=\"sb\">`</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n  roslaunch <span class=\"nv\">$1</span> gzname:<span class=\"o\">=</span>gzserver <span class=\"p\">&amp;</span>\n  sleep <span class=\"m\">12</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"sb\">`</span>ls ~/.ros/ <span class=\"p\">|</span> grep core$ <span class=\"p\">|</span> wc -l<span class=\"sb\">`</span> -ge <span class=\"m\">1</span> <span class=\"o\">]</span>\n  <span class=\"k\">then</span>\n    <span class=\"nv\">crash_count</span><span class=\"o\">=</span><span class=\"k\">$((</span><span class=\"nv\">$crash_count</span><span class=\"o\">+</span><span class=\"m\">1</span><span class=\"k\">))</span>\n    <span class=\"nv\">fail_count</span><span class=\"o\">=</span><span class=\"k\">$((</span><span class=\"nv\">$fail_count</span><span class=\"o\">+</span><span class=\"m\">1</span><span class=\"k\">))</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">&quot;Failed: gazebo crashed&quot;</span>\n    mv ~/.ros/core ~/.ros/core.<span class=\"nv\">$crash_count</span>\n  <span class=\"k\">elif</span> <span class=\"o\">[</span> <span class=\"s2\">&quot;`rostopic info /multisense_sl/camera/left/image_raw 2&gt;&amp;1 &gt; /dev/null | grep ERROR`&quot;</span> !<span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span> <span class=\"o\">]</span>\n  <span class=\"k\">then</span>\n    <span class=\"nv\">no_topic_count</span><span class=\"o\">=</span><span class=\"k\">$((</span><span class=\"nv\">$no_topic_count</span><span class=\"o\">+</span><span class=\"m\">1</span><span class=\"k\">))</span>\n    <span class=\"nv\">fail_count</span><span class=\"o\">=</span><span class=\"k\">$((</span><span class=\"nv\">$fail_count</span><span class=\"o\">+</span><span class=\"m\">1</span><span class=\"k\">))</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">&quot;Failed: no topic found&quot;</span>\n  <span class=\"k\">fi</span>\n  killall -INT roslaunch rosmaster state_publisher rostopic\n  sleep <span class=\"m\">15</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;\\n===== Run </span><span class=\"nv\">$i</span><span class=\"s2\"> completed =====&quot;</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$fail_count</span> -ge <span class=\"m\">1</span> <span class=\"o\">]</span>\n  <span class=\"k\">then</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">&quot;Failures so far: </span><span class=\"nv\">$fail_count</span><span class=\"s2\">&quot;</span>\n  <span class=\"k\">fi</span>\n<span class=\"k\">done</span>\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$fail_count</span> -ge <span class=\"m\">1</span> <span class=\"o\">]</span>\n<span class=\"k\">then</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;Failed </span><span class=\"nv\">$fail_count</span><span class=\"s2\"> times!&quot;</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;No. of crashes: </span><span class=\"nv\">$crash_count</span><span class=\"s2\">&quot;</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;No. of failed subscriptions: </span><span class=\"nv\">$no_topic_count</span><span class=\"s2\">&quot;</span>\n<span class=\"k\">else</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;All passed&quot;</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c1\">#!bash</span>\n</pre></div>", "type": "rendered"}, "created_on": "2013-06-12T02:37:00.712152+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2013-06-12T02:37:00.721770+00:00", "type": "pullrequest_comment", "id": 305324}